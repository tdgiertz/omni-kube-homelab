apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kong
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: kong-2.38.0
  name: kubernetes-dashboard-kong
  namespace: kubernetes-dashboard
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-metrics-scraper
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-api
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-metrics-scraper
  - http:kubernetes-dashboard-metrics-scraper
  resources:
  - services/proxy
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web
rules:
- apiGroups:
  - ""
  resourceNames:
  - kubernetes-dashboard-web-settings
  resources:
  - configmaps
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-metrics-scraper
rules:
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-api
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-api
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard-web
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-metrics-scraper
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard-metrics-scraper
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-metrics-scraper
  namespace: kubernetes-dashboard
---
apiVersion: v1
data:
  kong.yml: |
    _format_version: "3.0"
    services:
      - name: auth
        host: kubernetes-dashboard-auth
        port: 8000
        protocol: http
        routes:
          - name: authLogin
            paths:
              - /api/v1/login
            strip_path: false
          - name: authCsrf
            paths:
              - /api/v1/csrftoken/login
            strip_path: false
          - name: authMe
            paths:
              - /api/v1/me
            strip_path: false
      - name: api
        host: kubernetes-dashboard-api
        port: 8000
        protocol: http
        routes:
          - name: api
            paths:
              - /api
            strip_path: false
          - name: metrics
            paths:
              - /metrics
            strip_path: false
      - name: web
        host: kubernetes-dashboard-web
        port: 8000
        protocol: http
        routes:
          - name: root
            paths:
              - /
            strip_path: false
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kong-dbless-config
---
apiVersion: v1
data: null
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web-settings
---
apiVersion: v1
data:
  private.key: cFNXRmhpUmsxWTlYSUlhOW9QTDY1MnkrRU10elpGc3FnMU8xMEYxZ010RzRGTFltSTgvcWFOM2I1YThBOUhRaGF0MGpoQng4SXprMDErOWs5aUtzZlMzOU1lMmxJME5mZ2JEZVN2amhidWxDVFBORXk2dlVlQ2o3dDNkZmM5TWhvSHpIL1REclVxQ0MvTCtabFhjMHlGMEh5cHpRQmNlZ2ZrSi9zbndubUI4QjEyNktUR0lva3poN2dDNkxHWVg3MUlzWTdBcS9yVHhMTFVEMEkrZ1NWRXhVb0NmeFZNN3J3Q1dkUkxCME5ZK3U3TEtielIxOXNKc0x0aXcyWElLeUZ5QnVtelg2c25icnBTRW5QMnpyK0tBY3U1RG03MERuRkNXUk1SNmViWkdtM2xIWWJOaHl3MGRiSUNvU3hzK1lwKzJjaDFsdWdPbEh6SGJlYXVLVGRRPT0=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-csrf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kong
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
    helm.sh/chart: kong-2.38.0
  name: kubernetes-dashboard-kong-proxy
  namespace: kubernetes-dashboard
spec:
  ports:
  - name: kong-proxy-tls
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kong
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.10.1
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-api
spec:
  ports:
  - name: api
    port: 8000
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: auth
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.2.2
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-auth
spec:
  ports:
  - name: auth
    port: 8000
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics-scraper
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.2.1
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-metrics-scraper
spec:
  ports:
  - port: 8000
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.6.0
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web
spec:
  ports:
  - name: web
    port: 8000
  selector:
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kong
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: kong-2.38.0
  name: kubernetes-dashboard-kong
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kong
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        kuma.io/service-account-token-volume: kubernetes-dashboard-kong-token
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app: kubernetes-dashboard-kong
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kong
        app.kubernetes.io/version: "3.6"
        helm.sh/chart: kong-2.38.0
        version: "3.6"
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: /kong_dbless/kong.yml
        - name: KONG_DNS_ORDER
          value: LAST,A,CNAME,AAAA,SRV
        - name: KONG_LUA_PACKAGE_PATH
          value: /opt/?.lua;/opt/?/init.lua;;
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "1"
        - name: KONG_PLUGINS
          value: "off"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PORTAL_API_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PORT_MAPS
          value: 443:8443
        - name: KONG_PREFIX
          value: /kong_prefix/
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PROXY_LISTEN
          value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: /dev/stdout basic
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ROUTER_FLAVOR
          value: traditional
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: /dev/stderr
        - name: KONG_STATUS_LISTEN
          value: 0.0.0.0:8100, [::]:8100
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: proxy
        ports:
        - containerPort: 8443
          name: proxy-tls
          protocol: TCP
        - containerPort: 8100
          name: status
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /kong_prefix/
          name: kubernetes-dashboard-kong-prefix-dir
        - mountPath: /tmp
          name: kubernetes-dashboard-kong-tmp
        - mountPath: /kong_dbless/
          name: kong-custom-dbless-config-volume
      initContainers:
      - command:
        - rm
        - -vrf
        - $KONG_PREFIX/pids
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: 127.0.0.1:8444 http2 ssl, [::1]:8444 http2 ssl
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_DECLARATIVE_CONFIG
          value: /kong_dbless/kong.yml
        - name: KONG_DNS_ORDER
          value: LAST,A,CNAME,AAAA,SRV
        - name: KONG_LUA_PACKAGE_PATH
          value: /opt/?.lua;/opt/?/init.lua;;
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "1"
        - name: KONG_PLUGINS
          value: "off"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PORTAL_API_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PORT_MAPS
          value: 443:8443
        - name: KONG_PREFIX
          value: /kong_prefix/
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PROXY_LISTEN
          value: 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: /dev/stdout basic
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ROUTER_FLAVOR
          value: traditional
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: /dev/stderr
        - name: KONG_STATUS_LISTEN
          value: 0.0.0.0:8100, [::]:8100
        - name: KONG_STREAM_LISTEN
          value: "off"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        name: clear-stale-pid
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /kong_prefix/
          name: kubernetes-dashboard-kong-prefix-dir
        - mountPath: /tmp
          name: kubernetes-dashboard-kong-tmp
        - mountPath: /kong_dbless/
          name: kong-custom-dbless-config-volume
      securityContext: {}
      serviceAccountName: kubernetes-dashboard-kong
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          sizeLimit: 256Mi
        name: kubernetes-dashboard-kong-prefix-dir
      - emptyDir:
          sizeLimit: 1Gi
        name: kubernetes-dashboard-kong-tmp
      - name: kubernetes-dashboard-kong-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - configMap:
          name: kong-dbless-config
        name: kong-custom-dbless-config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-api
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.10.1
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-api
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-api
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations:
        checksum/config: 179a1837407201f01ca7d636452e047b0799db3e797eb72a4cf6bcf1a079988a
      labels:
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-api
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.10.1
        helm.sh/chart: kubernetes-dashboard-7.10.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --namespace=kubernetes-dashboard
        - --metrics-scraper-service-name=kubernetes-dashboard-metrics-scraper
        env:
        - name: CSRF_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: kubernetes-dashboard-csrf
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-api:1.10.1
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-api
        ports:
        - containerPort: 8000
          name: api
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-api
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: auth
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-auth
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.10.1
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-auth
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-auth
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations:
        checksum/config: 4999754a5926c6551be11bd9492bfdc2464c22fa38b0a161e0d62f801a75f4be
      labels:
        app.kubernetes.io/component: auth
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-auth
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.2.2
        helm.sh/chart: kubernetes-dashboard-7.10.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args: null
        env:
        - name: CSRF_KEY
          valueFrom:
            secretKeyRef:
              key: private.key
              name: kubernetes-dashboard-csrf
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-auth:1.2.2
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-auth
        ports:
        - containerPort: 8000
          name: auth
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: metrics-scraper
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.2.1
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-metrics-scraper
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: metrics-scraper
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-metrics-scraper
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.2.1
        helm.sh/chart: kubernetes-dashboard-7.10.0
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-metrics-scraper:1.2.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: kubernetes-dashboard-metrics-scraper
        ports:
        - containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-metrics-scraper
      volumes:
      - emptyDir: {}
        name: tmp-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: web
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-dashboard-web
    app.kubernetes.io/part-of: kubernetes-dashboard
    app.kubernetes.io/version: 1.6.0
    helm.sh/chart: kubernetes-dashboard-7.10.0
  name: kubernetes-dashboard-web
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubernetes-dashboard
      app.kubernetes.io/name: kubernetes-dashboard-web
      app.kubernetes.io/part-of: kubernetes-dashboard
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/instance: kubernetes-dashboard
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kubernetes-dashboard-web
        app.kubernetes.io/part-of: kubernetes-dashboard
        app.kubernetes.io/version: 1.6.0
        helm.sh/chart: kubernetes-dashboard-7.10.0
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --namespace=kubernetes-dashboard
        - --settings-config-map-name=kubernetes-dashboard-web-settings
        env:
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        image: docker.io/kubernetesui/dashboard-web:1.6.0
        imagePullPolicy: IfNotPresent
        name: kubernetes-dashboard-web
        ports:
        - containerPort: 8000
          name: web
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 2001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubernetes-dashboard-web
      volumes:
      - emptyDir: {}
        name: tmp-volume
