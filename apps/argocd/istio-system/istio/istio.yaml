apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/warn-version: latest
  name: istio-ingress
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/enforce-version: latest
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/warn-version: latest
  name: istio-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: authorizationpolicies.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
    - istio-io
    - security-istio-io
    kind: AuthorizationPolicy
    listKind: AuthorizationPolicyList
    plural: authorizationpolicies
    shortNames:
    - ap
    singular: authorizationpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The operation to take.
      jsonPath: .spec.action
      name: Action
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration for access control on workloads. See more
              details at: https://istio.io/docs/reference/config/security/authorization-policy.html'
            oneOf:
            - not:
                anyOf:
                - required:
                  - provider
            - required:
              - provider
            properties:
              action:
                description: |-
                  Optional.

                  Valid Options: ALLOW, DENY, AUDIT, CUSTOM
                enum:
                - ALLOW
                - DENY
                - AUDIT
                - CUSTOM
                type: string
              provider:
                description: Specifies detailed configuration of the CUSTOM action.
                properties:
                  name:
                    description: Specifies the name of the extension provider.
                    type: string
                type: object
              rules:
                description: Optional.
                items:
                  properties:
                    from:
                      description: Optional.
                      items:
                        properties:
                          source:
                            description: Source specifies the source of a request.
                            properties:
                              ipBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              namespaces:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notNamespaces:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notRemoteIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notRequestPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              principals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              remoteIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              requestPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    to:
                      description: Optional.
                      items:
                        properties:
                          operation:
                            description: Operation specifies the operation of a request.
                            properties:
                              hosts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              methods:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notHosts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notMethods:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPaths:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPorts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              paths:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              ports:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    when:
                      description: Optional.
                      items:
                        properties:
                          key:
                            description: The name of an Istio attribute.
                            type: string
                          notValues:
                            description: Optional.
                            items:
                              type: string
                            type: array
                          values:
                            description: Optional.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        type: object
                      type: array
                  type: object
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The operation to take.
      jsonPath: .spec.action
      name: Action
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration for access control on workloads. See more
              details at: https://istio.io/docs/reference/config/security/authorization-policy.html'
            oneOf:
            - not:
                anyOf:
                - required:
                  - provider
            - required:
              - provider
            properties:
              action:
                description: |-
                  Optional.

                  Valid Options: ALLOW, DENY, AUDIT, CUSTOM
                enum:
                - ALLOW
                - DENY
                - AUDIT
                - CUSTOM
                type: string
              provider:
                description: Specifies detailed configuration of the CUSTOM action.
                properties:
                  name:
                    description: Specifies the name of the extension provider.
                    type: string
                type: object
              rules:
                description: Optional.
                items:
                  properties:
                    from:
                      description: Optional.
                      items:
                        properties:
                          source:
                            description: Source specifies the source of a request.
                            properties:
                              ipBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              namespaces:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notNamespaces:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notRemoteIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notRequestPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              principals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              remoteIpBlocks:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              requestPrincipals:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    to:
                      description: Optional.
                      items:
                        properties:
                          operation:
                            description: Operation specifies the operation of a request.
                            properties:
                              hosts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              methods:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notHosts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notMethods:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPaths:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              notPorts:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              paths:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                              ports:
                                description: Optional.
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                      type: array
                    when:
                      description: Optional.
                      items:
                        properties:
                          key:
                            description: The name of an Istio attribute.
                            type: string
                          notValues:
                            description: Optional.
                            items:
                              type: string
                            type: array
                          values:
                            description: Optional.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        type: object
                      type: array
                  type: object
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  labels:
    gateway.networking.k8s.io/policy: Direct
  name: backendlbpolicies.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: BackendLBPolicy
    listKind: BackendLBPolicyList
    plural: backendlbpolicies
    shortNames:
    - blbpolicy
    singular: backendlbpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          BackendLBPolicy provides a way to define load balancing rules
          for a backend.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of BackendLBPolicy.
            properties:
              sessionPersistence:
                description: |-
                  SessionPersistence defines and configures session persistence
                  for the backend.

                  Support: Extended
                properties:
                  absoluteTimeout:
                    description: |-
                      AbsoluteTimeout defines the absolute timeout of the persistent
                      session. Once the AbsoluteTimeout duration has elapsed, the
                      session becomes invalid.

                      Support: Extended
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  cookieConfig:
                    description: |-
                      CookieConfig provides configuration settings that are specific
                      to cookie-based session persistence.

                      Support: Core
                    properties:
                      lifetimeType:
                        default: Session
                        description: |-
                          LifetimeType specifies whether the cookie has a permanent or
                          session-based lifetime. A permanent cookie persists until its
                          specified expiry time, defined by the Expires or Max-Age cookie
                          attributes, while a session cookie is deleted when the current
                          session ends.

                          When set to "Permanent", AbsoluteTimeout indicates the
                          cookie's lifetime via the Expires or Max-Age cookie attributes
                          and is required.

                          When set to "Session", AbsoluteTimeout indicates the
                          absolute lifetime of the cookie tracked by the gateway and
                          is optional.

                          Support: Core for "Session" type

                          Support: Extended for "Permanent" type
                        enum:
                        - Permanent
                        - Session
                        type: string
                    type: object
                  idleTimeout:
                    description: |-
                      IdleTimeout defines the idle timeout of the persistent session.
                      Once the session has been idle for more than the specified
                      IdleTimeout duration, the session becomes invalid.

                      Support: Extended
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  sessionName:
                    description: |-
                      SessionName defines the name of the persistent session token
                      which may be reflected in the cookie or the header. Users
                      should avoid reusing session names to prevent unintended
                      consequences, such as rejection or unpredictable behavior.

                      Support: Implementation-specific
                    maxLength: 128
                    type: string
                  type:
                    default: Cookie
                    description: |-
                      Type defines the type of session persistence such as through
                      the use a header or cookie. Defaults to cookie based session
                      persistence.

                      Support: Core for "Cookie" type

                      Support: Extended for "Header" type
                    enum:
                    - Cookie
                    - Header
                    type: string
                type: object
                x-kubernetes-validations:
                - message: AbsoluteTimeout must be specified when cookie lifetimeType
                    is Permanent
                  rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                    || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
              targetRefs:
                description: |-
                  TargetRef identifies an API object to apply policy to.
                  Currently, Backends (i.e. Service, ServiceImport, or any
                  implementation-specific backendRef) are the only valid API
                  target references.
                items:
                  description: |-
                    LocalPolicyTargetReference identifies an API object to apply a direct or
                    inherited policy to. This should be used as part of Policy resources
                    that can target Gateway API resources. For more information on how this
                    policy attachment model works, and a sample Policy resource, refer to
                    the policy attachment documentation for Gateway API.
                  properties:
                    group:
                      description: Group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - group
                - kind
                - name
                x-kubernetes-list-type: map
            required:
            - targetRefs
            type: object
          status:
            description: Status defines the current state of BackendLBPolicy.
            properties:
              ancestors:
                description: |-
                  Ancestors is a list of ancestor resources (usually Gateways) that are
                  associated with the policy, and the status of the policy with respect to
                  each ancestor. When this policy attaches to a parent, the controller that
                  manages the parent and the ancestors MUST add an entry to this list when
                  the controller first sees the policy and SHOULD update the entry as
                  appropriate when the relevant ancestor is modified.

                  Note that choosing the relevant ancestor is left to the Policy designers;
                  an important part of Policy design is designing the right object level at
                  which to namespace this status.

                  Note also that implementations MUST ONLY populate ancestor status for
                  the Ancestor resources they are responsible for. Implementations MUST
                  use the ControllerName field to uniquely identify the entries in this list
                  that they are responsible for.

                  Note that to achieve this, the list of PolicyAncestorStatus structs
                  MUST be treated as a map with a composite key, made up of the AncestorRef
                  and ControllerName fields combined.

                  A maximum of 16 ancestors will be represented in this list. An empty list
                  means the Policy is not relevant for any ancestors.

                  If this slice is full, implementations MUST NOT add further entries.
                  Instead they MUST consider the policy unimplementable and signal that
                  on any related resources such as the ancestor that would be referenced
                  here. For example, if this list was full on BackendTLSPolicy, no
                  additional Gateways would be able to reference the Service targeted by
                  the BackendTLSPolicy.
                items:
                  description: |-
                    PolicyAncestorStatus describes the status of a route with respect to an
                    associated Ancestor.

                    Ancestors refer to objects that are either the Target of a policy or above it
                    in terms of object hierarchy. For example, if a policy targets a Service, the
                    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
                    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
                    useful object to place Policy status on, so we recommend that implementations
                    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
                    have a _very_ good reason otherwise.

                    In the context of policy attachment, the Ancestor is used to distinguish which
                    resource results in a distinct application of this policy. For example, if a policy
                    targets a Service, it may have a distinct result per attached Gateway.

                    Policies targeting the same resource may have different effects depending on the
                    ancestors of those resources. For example, different Gateways targeting the same
                    Service may have different capabilities, especially if they have different underlying
                    implementations.

                    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
                    used as a backend in a HTTPRoute that is itself attached to a Gateway.
                    In this case, the relevant object for status is the Gateway, and that is the
                    ancestor object referred to in this status.

                    Note that a parent is also an ancestor, so for objects where the parent is the
                    relevant object for status, this struct SHOULD still be used.

                    This struct is intended to be used in a slice that's effectively a map,
                    with a composite key made up of the AncestorRef and the ControllerName.
                  properties:
                    ancestorRef:
                      description: |-
                        AncestorRef corresponds with a ParentRef in the spec that this
                        PolicyAncestorStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    conditions:
                      description: Conditions describes the status of the Policy with
                        respect to the given Ancestor.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                  required:
                  - ancestorRef
                  - controllerName
                  type: object
                maxItems: 16
                type: array
            required:
            - ancestors
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  labels:
    gateway.networking.k8s.io/policy: Direct
  name: backendtlspolicies.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: BackendTLSPolicy
    listKind: BackendTLSPolicyList
    plural: backendtlspolicies
    shortNames:
    - btlspolicy
    singular: backendtlspolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: |-
          BackendTLSPolicy provides a way to configure how a Gateway
          connects to a Backend via TLS.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of BackendTLSPolicy.
            properties:
              options:
                additionalProperties:
                  description: |-
                    AnnotationValue is the value of an annotation in Gateway API. This is used
                    for validation of maps such as TLS options. This roughly matches Kubernetes
                    annotation validation, although the length validation in that case is based
                    on the entire size of the annotations struct.
                  maxLength: 4096
                  minLength: 0
                  type: string
                description: |-
                  Options are a list of key/value pairs to enable extended TLS
                  configuration for each implementation. For example, configuring the
                  minimum TLS version or supported cipher suites.

                  A set of common keys MAY be defined by the API in the future. To avoid
                  any ambiguity, implementation-specific definitions MUST use
                  domain-prefixed names, such as `example.com/my-custom-option`.
                  Un-prefixed names are reserved for key names defined by Gateway API.

                  Support: Implementation-specific
                maxProperties: 16
                type: object
              targetRefs:
                description: |-
                  TargetRefs identifies an API object to apply the policy to.
                  Only Services have Extended support. Implementations MAY support
                  additional objects, with Implementation Specific support.
                  Note that this config applies to the entire referenced resource
                  by default, but this default may change in the future to provide
                  a more granular application of the policy.

                  Support: Extended for Kubernetes Service

                  Support: Implementation-specific for any other resource
                items:
                  description: |-
                    LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
                    direct policy to. This should be used as part of Policy resources that can
                    target single resources. For more information on how this policy attachment
                    mode works, and a sample Policy resource, refer to the policy attachment
                    documentation for Gateway API.

                    Note: This should only be used for direct policy attachment when references
                    to SectionName are actually needed. In all other cases,
                    LocalPolicyTargetReference should be used.
                  properties:
                    group:
                      description: Group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. When
                        unspecified, this targetRef targets the entire resource. In the following
                        resources, SectionName is interpreted as the following:

                        * Gateway: Listener name
                        * HTTPRoute: HTTPRouteRule name
                        * Service: Port name

                        If a SectionName is specified, but does not exist on the targeted object,
                        the Policy must fail to attach, and the policy implementation should record
                        a `ResolvedRefs` or similar Condition in the Policy's status.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              validation:
                description: Validation contains backend TLS validation configuration.
                properties:
                  caCertificateRefs:
                    description: |-
                      CACertificateRefs contains one or more references to Kubernetes objects that
                      contain a PEM-encoded TLS CA certificate bundle, which is used to
                      validate a TLS handshake between the Gateway and backend Pod.

                      If CACertificateRefs is empty or unspecified, then WellKnownCACertificates must be
                      specified. Only one of CACertificateRefs or WellKnownCACertificates may be specified,
                      not both. If CACertifcateRefs is empty or unspecified, the configuration for
                      WellKnownCACertificates MUST be honored instead if supported by the implementation.

                      References to a resource in a different namespace are invalid for the
                      moment, although we will revisit this in the future.

                      A single CACertificateRef to a Kubernetes ConfigMap kind has "Core" support.
                      Implementations MAY choose to support attaching multiple certificates to
                      a backend, but this behavior is implementation-specific.

                      Support: Core - An optional single reference to a Kubernetes ConfigMap,
                      with the CA certificate in a key named `ca.crt`.

                      Support: Implementation-specific (More than one reference, or other kinds
                      of resources).
                    items:
                      description: |-
                        LocalObjectReference identifies an API object within the namespace of the
                        referrer.
                        The API object must be valid in the cluster; the Group and Kind must
                        be registered in the cluster for this reference to be valid.

                        References to objects with invalid Group and Kind are not valid, and must
                        be rejected by the implementation, with appropriate Conditions set
                        on the containing object.
                      properties:
                        group:
                          description: |-
                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                            When unspecified or empty string, core API group is inferred.
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          description: Kind is kind of the referent. For example "HTTPRoute"
                            or "Service".
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - group
                      - kind
                      - name
                      type: object
                    maxItems: 8
                    type: array
                  hostname:
                    description: |-
                      Hostname is used for two purposes in the connection between Gateways and
                      backends:

                      1. Hostname MUST be used as the SNI to connect to the backend (RFC 6066).
                      2. If SubjectAltNames is not specified, Hostname MUST be used for
                         authentication and MUST match the certificate served by the matching
                         backend.

                      Support: Core
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  subjectAltNames:
                    description: |-
                      SubjectAltNames contains one or more Subject Alternative Names.
                      When specified, the certificate served from the backend MUST have at least one
                      Subject Alternate Name matching one of the specified SubjectAltNames.

                      Support: Core
                    items:
                      description: SubjectAltName represents Subject Alternative Name.
                      properties:
                        hostname:
                          description: |-
                            Hostname contains Subject Alternative Name specified in DNS name format.
                            Required when Type is set to Hostname, ignored otherwise.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        type:
                          description: |-
                            Type determines the format of the Subject Alternative Name. Always required.

                            Support: Core
                          enum:
                          - Hostname
                          - URI
                          type: string
                        uri:
                          description: |-
                            URI contains Subject Alternative Name specified in a full URI format.
                            It MUST include both a scheme (e.g., "http" or "ftp") and a scheme-specific-part.
                            Common values include SPIFFE IDs like "spiffe://mycluster.example.com/ns/myns/sa/svc1sa".
                            Required when Type is set to URI, ignored otherwise.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^(([^:/?#]+):)(//([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?
                          type: string
                      required:
                      - type
                      type: object
                      x-kubernetes-validations:
                      - message: SubjectAltName element must contain Hostname, if
                          Type is set to Hostname
                        rule: '!(self.type == "Hostname" && (!has(self.hostname) ||
                          self.hostname == ""))'
                      - message: SubjectAltName element must not contain Hostname,
                          if Type is not set to Hostname
                        rule: '!(self.type != "Hostname" && has(self.hostname) &&
                          self.hostname != "")'
                      - message: SubjectAltName element must contain URI, if Type
                          is set to URI
                        rule: '!(self.type == "URI" && (!has(self.uri) || self.uri
                          == ""))'
                      - message: SubjectAltName element must not contain URI, if Type
                          is not set to URI
                        rule: '!(self.type != "URI" && has(self.uri) && self.uri !=
                          "")'
                    maxItems: 5
                    type: array
                  wellKnownCACertificates:
                    description: |-
                      WellKnownCACertificates specifies whether system CA certificates may be used in
                      the TLS handshake between the gateway and backend pod.

                      If WellKnownCACertificates is unspecified or empty (""), then CACertificateRefs
                      must be specified with at least one entry for a valid configuration. Only one of
                      CACertificateRefs or WellKnownCACertificates may be specified, not both. If an
                      implementation does not support the WellKnownCACertificates field or the value
                      supplied is not supported, the Status Conditions on the Policy MUST be
                      updated to include an Accepted: False Condition with Reason: Invalid.

                      Support: Implementation-specific
                    enum:
                    - System
                    type: string
                required:
                - hostname
                type: object
                x-kubernetes-validations:
                - message: must not contain both CACertificateRefs and WellKnownCACertificates
                  rule: '!(has(self.caCertificateRefs) && size(self.caCertificateRefs)
                    > 0 && has(self.wellKnownCACertificates) && self.wellKnownCACertificates
                    != "")'
                - message: must specify either CACertificateRefs or WellKnownCACertificates
                  rule: (has(self.caCertificateRefs) && size(self.caCertificateRefs)
                    > 0 || has(self.wellKnownCACertificates) && self.wellKnownCACertificates
                    != "")
            required:
            - targetRefs
            - validation
            type: object
          status:
            description: Status defines the current state of BackendTLSPolicy.
            properties:
              ancestors:
                description: |-
                  Ancestors is a list of ancestor resources (usually Gateways) that are
                  associated with the policy, and the status of the policy with respect to
                  each ancestor. When this policy attaches to a parent, the controller that
                  manages the parent and the ancestors MUST add an entry to this list when
                  the controller first sees the policy and SHOULD update the entry as
                  appropriate when the relevant ancestor is modified.

                  Note that choosing the relevant ancestor is left to the Policy designers;
                  an important part of Policy design is designing the right object level at
                  which to namespace this status.

                  Note also that implementations MUST ONLY populate ancestor status for
                  the Ancestor resources they are responsible for. Implementations MUST
                  use the ControllerName field to uniquely identify the entries in this list
                  that they are responsible for.

                  Note that to achieve this, the list of PolicyAncestorStatus structs
                  MUST be treated as a map with a composite key, made up of the AncestorRef
                  and ControllerName fields combined.

                  A maximum of 16 ancestors will be represented in this list. An empty list
                  means the Policy is not relevant for any ancestors.

                  If this slice is full, implementations MUST NOT add further entries.
                  Instead they MUST consider the policy unimplementable and signal that
                  on any related resources such as the ancestor that would be referenced
                  here. For example, if this list was full on BackendTLSPolicy, no
                  additional Gateways would be able to reference the Service targeted by
                  the BackendTLSPolicy.
                items:
                  description: |-
                    PolicyAncestorStatus describes the status of a route with respect to an
                    associated Ancestor.

                    Ancestors refer to objects that are either the Target of a policy or above it
                    in terms of object hierarchy. For example, if a policy targets a Service, the
                    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
                    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
                    useful object to place Policy status on, so we recommend that implementations
                    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
                    have a _very_ good reason otherwise.

                    In the context of policy attachment, the Ancestor is used to distinguish which
                    resource results in a distinct application of this policy. For example, if a policy
                    targets a Service, it may have a distinct result per attached Gateway.

                    Policies targeting the same resource may have different effects depending on the
                    ancestors of those resources. For example, different Gateways targeting the same
                    Service may have different capabilities, especially if they have different underlying
                    implementations.

                    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
                    used as a backend in a HTTPRoute that is itself attached to a Gateway.
                    In this case, the relevant object for status is the Gateway, and that is the
                    ancestor object referred to in this status.

                    Note that a parent is also an ancestor, so for objects where the parent is the
                    relevant object for status, this struct SHOULD still be used.

                    This struct is intended to be used in a slice that's effectively a map,
                    with a composite key made up of the AncestorRef and the ControllerName.
                  properties:
                    ancestorRef:
                      description: |-
                        AncestorRef corresponds with a ParentRef in the spec that this
                        PolicyAncestorStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    conditions:
                      description: Conditions describes the status of the Policy with
                        respect to the given Ancestor.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                  required:
                  - ancestorRef
                  - controllerName
                  type: object
                maxItems: 16
                type: array
            required:
            - ancestors
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: destinationrules.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: DestinationRule
    listKind: DestinationRuleList
    plural: destinationrules
    shortNames:
    - dr
    singular: destinationrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The name of a service from the service registry
      jsonPath: .spec.host
      name: Host
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting load balancing, outlier detection,
              etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html'
            properties:
              exportTo:
                description: A list of namespaces to which this destination rule is
                  exported.
                items:
                  type: string
                type: array
              host:
                description: The name of a service from the service registry.
                type: string
              subsets:
                description: One or more named sets that represent individual versions
                  of a service.
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels apply a filter over the endpoints of a service
                        in the service registry.
                      type: object
                    name:
                      description: Name of the subset.
                      type: string
                    trafficPolicy:
                      description: Traffic policies that apply to this subset.
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        portLevelSettings:
                          description: Traffic policies specific to individual ports.
                          items:
                            properties:
                              connectionPool:
                                properties:
                                  http:
                                    description: HTTP connection pool settings.
                                    properties:
                                      h2UpgradePolicy:
                                        description: |-
                                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                        enum:
                                        - DEFAULT
                                        - DO_NOT_UPGRADE
                                        - UPGRADE
                                        type: string
                                      http1MaxPendingRequests:
                                        description: Maximum number of requests that
                                          will be queued while waiting for a ready
                                          connection pool connection.
                                        format: int32
                                        type: integer
                                      http2MaxRequests:
                                        description: Maximum number of active requests
                                          to a destination.
                                        format: int32
                                        type: integer
                                      idleTimeout:
                                        description: The idle timeout for upstream
                                          connection pool connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConcurrentStreams:
                                        description: The maximum number of concurrent
                                          streams allowed for a peer on one HTTP/2
                                          connection.
                                        format: int32
                                        type: integer
                                      maxRequestsPerConnection:
                                        description: Maximum number of requests per
                                          connection to a backend.
                                        format: int32
                                        type: integer
                                      maxRetries:
                                        description: Maximum number of retries that
                                          can be outstanding to all hosts in a cluster
                                          at a given time.
                                        format: int32
                                        type: integer
                                      useClientProtocol:
                                        description: If set to true, client protocol
                                          will be preserved while initiating connection
                                          to backend.
                                        type: boolean
                                    type: object
                                  tcp:
                                    description: Settings common to both HTTP and
                                      TCP upstream connections.
                                    properties:
                                      connectTimeout:
                                        description: TCP connection timeout.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      idleTimeout:
                                        description: The idle timeout for TCP connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnectionDuration:
                                        description: The maximum duration of a connection.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnections:
                                        description: Maximum number of HTTP1 /TCP
                                          connections to a destination host.
                                        format: int32
                                        type: integer
                                      tcpKeepalive:
                                        description: If set then set SO_KEEPALIVE
                                          on the socket to enable TCP Keepalives.
                                        properties:
                                          interval:
                                            description: The time duration between
                                              keep-alive probes.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                          probes:
                                            description: Maximum number of keepalive
                                              probes to send without response before
                                              deciding the connection is dead.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          time:
                                            description: The time duration a connection
                                              needs to be idle before keep-alive probes
                                              start being sent.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                        type: object
                                    type: object
                                type: object
                              loadBalancer:
                                description: Settings controlling the load balancer
                                  algorithms.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - simple
                                    - required:
                                      - consistentHash
                                - required:
                                  - simple
                                - required:
                                  - consistentHash
                                properties:
                                  consistentHash:
                                    allOf:
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - httpHeaderName
                                          - required:
                                            - httpCookie
                                          - required:
                                            - useSourceIp
                                          - required:
                                            - httpQueryParameterName
                                      - required:
                                        - httpHeaderName
                                      - required:
                                        - httpCookie
                                      - required:
                                        - useSourceIp
                                      - required:
                                        - httpQueryParameterName
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - ringHash
                                          - required:
                                            - maglev
                                      - required:
                                        - ringHash
                                      - required:
                                        - maglev
                                    properties:
                                      httpCookie:
                                        description: Hash based on HTTP cookie.
                                        properties:
                                          name:
                                            description: Name of the cookie.
                                            type: string
                                          path:
                                            description: Path to set for the cookie.
                                            type: string
                                          ttl:
                                            description: Lifetime of the cookie.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      httpHeaderName:
                                        description: Hash based on a specific HTTP
                                          header.
                                        type: string
                                      httpQueryParameterName:
                                        description: Hash based on a specific HTTP
                                          query parameter.
                                        type: string
                                      maglev:
                                        description: The Maglev load balancer implements
                                          consistent hashing to backend hosts.
                                        properties:
                                          tableSize:
                                            description: The table size for Maglev
                                              hashing.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      minimumRingSize:
                                        description: Deprecated.
                                        minimum: 0
                                        type: integer
                                      ringHash:
                                        description: The ring/modulo hash load balancer
                                          implements consistent hashing to backend
                                          hosts.
                                        properties:
                                          minimumRingSize:
                                            description: The minimum number of virtual
                                              nodes to use for the hash ring.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      useSourceIp:
                                        description: Hash based on the source IP address.
                                        type: boolean
                                    type: object
                                  localityLbSetting:
                                    properties:
                                      distribute:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating locality, '/'
                                                separated, e.g.
                                              type: string
                                            to:
                                              additionalProperties:
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                              description: Map of upstream localities
                                                to traffic distribution weights.
                                              type: object
                                          type: object
                                        type: array
                                      enabled:
                                        description: enable locality load balancing,
                                          this is DestinationRule-level and will override
                                          mesh wide settings in entirety.
                                        nullable: true
                                        type: boolean
                                      failover:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating region.
                                              type: string
                                            to:
                                              description: Destination region the
                                                traffic will fail over to when endpoints
                                                in the 'from' region becomes unhealthy.
                                              type: string
                                          type: object
                                        type: array
                                      failoverPriority:
                                        description: failoverPriority is an ordered
                                          list of labels used to sort endpoints to
                                          do priority based load balancing.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  simple:
                                    description: |2-


                                      Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                                    enum:
                                    - UNSPECIFIED
                                    - LEAST_CONN
                                    - RANDOM
                                    - PASSTHROUGH
                                    - ROUND_ROBIN
                                    - LEAST_REQUEST
                                    type: string
                                  warmup:
                                    description: Represents the warmup configuration
                                      of Service.
                                    properties:
                                      aggression:
                                        description: This parameter controls the speed
                                          of traffic increase over the warmup duration.
                                        format: double
                                        minimum: 1
                                        nullable: true
                                        type: number
                                      duration:
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      minimumPercent:
                                        format: double
                                        maximum: 100
                                        minimum: 0
                                        nullable: true
                                        type: number
                                    required:
                                    - duration
                                    type: object
                                  warmupDurationSecs:
                                    description: 'Deprecated: use `warmup` instead.'
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                type: object
                              outlierDetection:
                                properties:
                                  baseEjectionTime:
                                    description: Minimum ejection duration.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  consecutive5xxErrors:
                                    description: Number of 5xx errors before a host
                                      is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveErrors:
                                    format: int32
                                    type: integer
                                  consecutiveGatewayErrors:
                                    description: Number of gateway errors before a
                                      host is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveLocalOriginFailures:
                                    description: The number of consecutive locally
                                      originated failures before ejection occurs.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  interval:
                                    description: Time interval between ejection sweep
                                      analysis.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  maxEjectionPercent:
                                    description: Maximum % of hosts in the load balancing
                                      pool for the upstream service that can be ejected.
                                    format: int32
                                    type: integer
                                  minHealthPercent:
                                    description: Outlier detection will be enabled
                                      as long as the associated load balancing pool
                                      has at least min_health_percent hosts in healthy
                                      mode.
                                    format: int32
                                    type: integer
                                  splitExternalLocalOriginErrors:
                                    description: Determines whether to distinguish
                                      local origin failures from external errors.
                                    type: boolean
                                type: object
                              port:
                                description: Specifies the number of a port on the
                                  destination service on which this policy is being
                                  applied.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              tls:
                                description: TLS related settings for connections
                                  to the upstream service.
                                properties:
                                  caCertificates:
                                    description: 'OPTIONAL: The path to the file containing
                                      certificate authority certificates to use in
                                      verifying a presented server certificate.'
                                    type: string
                                  caCrl:
                                    description: 'OPTIONAL: The path to the file containing
                                      the certificate revocation list (CRL) to use
                                      in verifying a presented server certificate.'
                                    type: string
                                  clientCertificate:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  credentialName:
                                    description: The name of the secret that holds
                                      the TLS certs for the client including the CA
                                      certificates.
                                    type: string
                                  insecureSkipVerify:
                                    description: '`insecureSkipVerify` specifies whether
                                      the proxy should skip verifying the CA signature
                                      and SAN for the server certificate corresponding
                                      to the host.'
                                    nullable: true
                                    type: boolean
                                  mode:
                                    description: |-
                                      Indicates whether connections to this port should be secured using TLS.

                                      Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                                    enum:
                                    - DISABLE
                                    - SIMPLE
                                    - MUTUAL
                                    - ISTIO_MUTUAL
                                    type: string
                                  privateKey:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  sni:
                                    description: SNI string to present to the server
                                      during TLS handshake.
                                    type: string
                                  subjectAltNames:
                                    description: A list of alternate names to verify
                                      the subject identity in the certificate.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          maxItems: 4096
                          type: array
                        proxyProtocol:
                          description: The upstream PROXY protocol settings.
                          properties:
                            version:
                              description: |-
                                The PROXY protocol version to use.

                                Valid Options: V1, V2
                              enum:
                              - V1
                              - V2
                              type: string
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        tunnel:
                          description: Configuration of tunneling TCP over other transport
                            or application layers for the host configured in the DestinationRule.
                          properties:
                            protocol:
                              description: Specifies which protocol to use for tunneling
                                the downstream connection.
                              type: string
                            targetHost:
                              description: Specifies a host to which the downstream
                                connection is tunneled.
                              type: string
                            targetPort:
                              description: Specifies a port to which the downstream
                                connection is tunneled.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          required:
                          - targetHost
                          - targetPort
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              trafficPolicy:
                description: Traffic policies to apply (load balancing policy, connection
                  pool sizes, outlier detection).
                properties:
                  connectionPool:
                    properties:
                      http:
                        description: HTTP connection pool settings.
                        properties:
                          h2UpgradePolicy:
                            description: |-
                              Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                              Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                            enum:
                            - DEFAULT
                            - DO_NOT_UPGRADE
                            - UPGRADE
                            type: string
                          http1MaxPendingRequests:
                            description: Maximum number of requests that will be queued
                              while waiting for a ready connection pool connection.
                            format: int32
                            type: integer
                          http2MaxRequests:
                            description: Maximum number of active requests to a destination.
                            format: int32
                            type: integer
                          idleTimeout:
                            description: The idle timeout for upstream connection
                              pool connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConcurrentStreams:
                            description: The maximum number of concurrent streams
                              allowed for a peer on one HTTP/2 connection.
                            format: int32
                            type: integer
                          maxRequestsPerConnection:
                            description: Maximum number of requests per connection
                              to a backend.
                            format: int32
                            type: integer
                          maxRetries:
                            description: Maximum number of retries that can be outstanding
                              to all hosts in a cluster at a given time.
                            format: int32
                            type: integer
                          useClientProtocol:
                            description: If set to true, client protocol will be preserved
                              while initiating connection to backend.
                            type: boolean
                        type: object
                      tcp:
                        description: Settings common to both HTTP and TCP upstream
                          connections.
                        properties:
                          connectTimeout:
                            description: TCP connection timeout.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          idleTimeout:
                            description: The idle timeout for TCP connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnectionDuration:
                            description: The maximum duration of a connection.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnections:
                            description: Maximum number of HTTP1 /TCP connections
                              to a destination host.
                            format: int32
                            type: integer
                          tcpKeepalive:
                            description: If set then set SO_KEEPALIVE on the socket
                              to enable TCP Keepalives.
                            properties:
                              interval:
                                description: The time duration between keep-alive
                                  probes.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                              probes:
                                description: Maximum number of keepalive probes to
                                  send without response before deciding the connection
                                  is dead.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              time:
                                description: The time duration a connection needs
                                  to be idle before keep-alive probes start being
                                  sent.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                            type: object
                        type: object
                    type: object
                  loadBalancer:
                    description: Settings controlling the load balancer algorithms.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - simple
                        - required:
                          - consistentHash
                    - required:
                      - simple
                    - required:
                      - consistentHash
                    properties:
                      consistentHash:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpHeaderName
                              - required:
                                - httpCookie
                              - required:
                                - useSourceIp
                              - required:
                                - httpQueryParameterName
                          - required:
                            - httpHeaderName
                          - required:
                            - httpCookie
                          - required:
                            - useSourceIp
                          - required:
                            - httpQueryParameterName
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - ringHash
                              - required:
                                - maglev
                          - required:
                            - ringHash
                          - required:
                            - maglev
                        properties:
                          httpCookie:
                            description: Hash based on HTTP cookie.
                            properties:
                              name:
                                description: Name of the cookie.
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: Lifetime of the cookie.
                                type: string
                            required:
                            - name
                            type: object
                          httpHeaderName:
                            description: Hash based on a specific HTTP header.
                            type: string
                          httpQueryParameterName:
                            description: Hash based on a specific HTTP query parameter.
                            type: string
                          maglev:
                            description: The Maglev load balancer implements consistent
                              hashing to backend hosts.
                            properties:
                              tableSize:
                                description: The table size for Maglev hashing.
                                minimum: 0
                                type: integer
                            type: object
                          minimumRingSize:
                            description: Deprecated.
                            minimum: 0
                            type: integer
                          ringHash:
                            description: The ring/modulo hash load balancer implements
                              consistent hashing to backend hosts.
                            properties:
                              minimumRingSize:
                                description: The minimum number of virtual nodes to
                                  use for the hash ring.
                                minimum: 0
                                type: integer
                            type: object
                          useSourceIp:
                            description: Hash based on the source IP address.
                            type: boolean
                        type: object
                      localityLbSetting:
                        properties:
                          distribute:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating locality, '/' separated,
                                    e.g.
                                  type: string
                                to:
                                  additionalProperties:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  description: Map of upstream localities to traffic
                                    distribution weights.
                                  type: object
                              type: object
                            type: array
                          enabled:
                            description: enable locality load balancing, this is DestinationRule-level
                              and will override mesh wide settings in entirety.
                            nullable: true
                            type: boolean
                          failover:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating region.
                                  type: string
                                to:
                                  description: Destination region the traffic will
                                    fail over to when endpoints in the 'from' region
                                    becomes unhealthy.
                                  type: string
                              type: object
                            type: array
                          failoverPriority:
                            description: failoverPriority is an ordered list of labels
                              used to sort endpoints to do priority based load balancing.
                            items:
                              type: string
                            type: array
                        type: object
                      simple:
                        description: |2-


                          Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                        enum:
                        - UNSPECIFIED
                        - LEAST_CONN
                        - RANDOM
                        - PASSTHROUGH
                        - ROUND_ROBIN
                        - LEAST_REQUEST
                        type: string
                      warmup:
                        description: Represents the warmup configuration of Service.
                        properties:
                          aggression:
                            description: This parameter controls the speed of traffic
                              increase over the warmup duration.
                            format: double
                            minimum: 1
                            nullable: true
                            type: number
                          duration:
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          minimumPercent:
                            format: double
                            maximum: 100
                            minimum: 0
                            nullable: true
                            type: number
                        required:
                        - duration
                        type: object
                      warmupDurationSecs:
                        description: 'Deprecated: use `warmup` instead.'
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                    type: object
                  outlierDetection:
                    properties:
                      baseEjectionTime:
                        description: Minimum ejection duration.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      consecutive5xxErrors:
                        description: Number of 5xx errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveErrors:
                        format: int32
                        type: integer
                      consecutiveGatewayErrors:
                        description: Number of gateway errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveLocalOriginFailures:
                        description: The number of consecutive locally originated
                          failures before ejection occurs.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      interval:
                        description: Time interval between ejection sweep analysis.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxEjectionPercent:
                        description: Maximum % of hosts in the load balancing pool
                          for the upstream service that can be ejected.
                        format: int32
                        type: integer
                      minHealthPercent:
                        description: Outlier detection will be enabled as long as
                          the associated load balancing pool has at least min_health_percent
                          hosts in healthy mode.
                        format: int32
                        type: integer
                      splitExternalLocalOriginErrors:
                        description: Determines whether to distinguish local origin
                          failures from external errors.
                        type: boolean
                    type: object
                  portLevelSettings:
                    description: Traffic policies specific to individual ports.
                    items:
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        port:
                          description: Specifies the number of a port on the destination
                            service on which this policy is being applied.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    maxItems: 4096
                    type: array
                  proxyProtocol:
                    description: The upstream PROXY protocol settings.
                    properties:
                      version:
                        description: |-
                          The PROXY protocol version to use.

                          Valid Options: V1, V2
                        enum:
                        - V1
                        - V2
                        type: string
                    type: object
                  tls:
                    description: TLS related settings for connections to the upstream
                      service.
                    properties:
                      caCertificates:
                        description: 'OPTIONAL: The path to the file containing certificate
                          authority certificates to use in verifying a presented server
                          certificate.'
                        type: string
                      caCrl:
                        description: 'OPTIONAL: The path to the file containing the
                          certificate revocation list (CRL) to use in verifying a
                          presented server certificate.'
                        type: string
                      clientCertificate:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      credentialName:
                        description: The name of the secret that holds the TLS certs
                          for the client including the CA certificates.
                        type: string
                      insecureSkipVerify:
                        description: '`insecureSkipVerify` specifies whether the proxy
                          should skip verifying the CA signature and SAN for the server
                          certificate corresponding to the host.'
                        nullable: true
                        type: boolean
                      mode:
                        description: |-
                          Indicates whether connections to this port should be secured using TLS.

                          Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                        enum:
                        - DISABLE
                        - SIMPLE
                        - MUTUAL
                        - ISTIO_MUTUAL
                        type: string
                      privateKey:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      sni:
                        description: SNI string to present to the server during TLS
                          handshake.
                        type: string
                      subjectAltNames:
                        description: A list of alternate names to verify the subject
                          identity in the certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  tunnel:
                    description: Configuration of tunneling TCP over other transport
                      or application layers for the host configured in the DestinationRule.
                    properties:
                      protocol:
                        description: Specifies which protocol to use for tunneling
                          the downstream connection.
                        type: string
                      targetHost:
                        description: Specifies a host to which the downstream connection
                          is tunneled.
                        type: string
                      targetPort:
                        description: Specifies a port to which the downstream connection
                          is tunneled.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    required:
                    - targetHost
                    - targetPort
                    type: object
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `DestinationRule` configuration should be applied.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            required:
            - host
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The name of a service from the service registry
      jsonPath: .spec.host
      name: Host
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting load balancing, outlier detection,
              etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html'
            properties:
              exportTo:
                description: A list of namespaces to which this destination rule is
                  exported.
                items:
                  type: string
                type: array
              host:
                description: The name of a service from the service registry.
                type: string
              subsets:
                description: One or more named sets that represent individual versions
                  of a service.
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels apply a filter over the endpoints of a service
                        in the service registry.
                      type: object
                    name:
                      description: Name of the subset.
                      type: string
                    trafficPolicy:
                      description: Traffic policies that apply to this subset.
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        portLevelSettings:
                          description: Traffic policies specific to individual ports.
                          items:
                            properties:
                              connectionPool:
                                properties:
                                  http:
                                    description: HTTP connection pool settings.
                                    properties:
                                      h2UpgradePolicy:
                                        description: |-
                                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                        enum:
                                        - DEFAULT
                                        - DO_NOT_UPGRADE
                                        - UPGRADE
                                        type: string
                                      http1MaxPendingRequests:
                                        description: Maximum number of requests that
                                          will be queued while waiting for a ready
                                          connection pool connection.
                                        format: int32
                                        type: integer
                                      http2MaxRequests:
                                        description: Maximum number of active requests
                                          to a destination.
                                        format: int32
                                        type: integer
                                      idleTimeout:
                                        description: The idle timeout for upstream
                                          connection pool connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConcurrentStreams:
                                        description: The maximum number of concurrent
                                          streams allowed for a peer on one HTTP/2
                                          connection.
                                        format: int32
                                        type: integer
                                      maxRequestsPerConnection:
                                        description: Maximum number of requests per
                                          connection to a backend.
                                        format: int32
                                        type: integer
                                      maxRetries:
                                        description: Maximum number of retries that
                                          can be outstanding to all hosts in a cluster
                                          at a given time.
                                        format: int32
                                        type: integer
                                      useClientProtocol:
                                        description: If set to true, client protocol
                                          will be preserved while initiating connection
                                          to backend.
                                        type: boolean
                                    type: object
                                  tcp:
                                    description: Settings common to both HTTP and
                                      TCP upstream connections.
                                    properties:
                                      connectTimeout:
                                        description: TCP connection timeout.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      idleTimeout:
                                        description: The idle timeout for TCP connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnectionDuration:
                                        description: The maximum duration of a connection.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnections:
                                        description: Maximum number of HTTP1 /TCP
                                          connections to a destination host.
                                        format: int32
                                        type: integer
                                      tcpKeepalive:
                                        description: If set then set SO_KEEPALIVE
                                          on the socket to enable TCP Keepalives.
                                        properties:
                                          interval:
                                            description: The time duration between
                                              keep-alive probes.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                          probes:
                                            description: Maximum number of keepalive
                                              probes to send without response before
                                              deciding the connection is dead.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          time:
                                            description: The time duration a connection
                                              needs to be idle before keep-alive probes
                                              start being sent.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                        type: object
                                    type: object
                                type: object
                              loadBalancer:
                                description: Settings controlling the load balancer
                                  algorithms.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - simple
                                    - required:
                                      - consistentHash
                                - required:
                                  - simple
                                - required:
                                  - consistentHash
                                properties:
                                  consistentHash:
                                    allOf:
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - httpHeaderName
                                          - required:
                                            - httpCookie
                                          - required:
                                            - useSourceIp
                                          - required:
                                            - httpQueryParameterName
                                      - required:
                                        - httpHeaderName
                                      - required:
                                        - httpCookie
                                      - required:
                                        - useSourceIp
                                      - required:
                                        - httpQueryParameterName
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - ringHash
                                          - required:
                                            - maglev
                                      - required:
                                        - ringHash
                                      - required:
                                        - maglev
                                    properties:
                                      httpCookie:
                                        description: Hash based on HTTP cookie.
                                        properties:
                                          name:
                                            description: Name of the cookie.
                                            type: string
                                          path:
                                            description: Path to set for the cookie.
                                            type: string
                                          ttl:
                                            description: Lifetime of the cookie.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      httpHeaderName:
                                        description: Hash based on a specific HTTP
                                          header.
                                        type: string
                                      httpQueryParameterName:
                                        description: Hash based on a specific HTTP
                                          query parameter.
                                        type: string
                                      maglev:
                                        description: The Maglev load balancer implements
                                          consistent hashing to backend hosts.
                                        properties:
                                          tableSize:
                                            description: The table size for Maglev
                                              hashing.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      minimumRingSize:
                                        description: Deprecated.
                                        minimum: 0
                                        type: integer
                                      ringHash:
                                        description: The ring/modulo hash load balancer
                                          implements consistent hashing to backend
                                          hosts.
                                        properties:
                                          minimumRingSize:
                                            description: The minimum number of virtual
                                              nodes to use for the hash ring.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      useSourceIp:
                                        description: Hash based on the source IP address.
                                        type: boolean
                                    type: object
                                  localityLbSetting:
                                    properties:
                                      distribute:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating locality, '/'
                                                separated, e.g.
                                              type: string
                                            to:
                                              additionalProperties:
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                              description: Map of upstream localities
                                                to traffic distribution weights.
                                              type: object
                                          type: object
                                        type: array
                                      enabled:
                                        description: enable locality load balancing,
                                          this is DestinationRule-level and will override
                                          mesh wide settings in entirety.
                                        nullable: true
                                        type: boolean
                                      failover:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating region.
                                              type: string
                                            to:
                                              description: Destination region the
                                                traffic will fail over to when endpoints
                                                in the 'from' region becomes unhealthy.
                                              type: string
                                          type: object
                                        type: array
                                      failoverPriority:
                                        description: failoverPriority is an ordered
                                          list of labels used to sort endpoints to
                                          do priority based load balancing.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  simple:
                                    description: |2-


                                      Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                                    enum:
                                    - UNSPECIFIED
                                    - LEAST_CONN
                                    - RANDOM
                                    - PASSTHROUGH
                                    - ROUND_ROBIN
                                    - LEAST_REQUEST
                                    type: string
                                  warmup:
                                    description: Represents the warmup configuration
                                      of Service.
                                    properties:
                                      aggression:
                                        description: This parameter controls the speed
                                          of traffic increase over the warmup duration.
                                        format: double
                                        minimum: 1
                                        nullable: true
                                        type: number
                                      duration:
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      minimumPercent:
                                        format: double
                                        maximum: 100
                                        minimum: 0
                                        nullable: true
                                        type: number
                                    required:
                                    - duration
                                    type: object
                                  warmupDurationSecs:
                                    description: 'Deprecated: use `warmup` instead.'
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                type: object
                              outlierDetection:
                                properties:
                                  baseEjectionTime:
                                    description: Minimum ejection duration.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  consecutive5xxErrors:
                                    description: Number of 5xx errors before a host
                                      is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveErrors:
                                    format: int32
                                    type: integer
                                  consecutiveGatewayErrors:
                                    description: Number of gateway errors before a
                                      host is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveLocalOriginFailures:
                                    description: The number of consecutive locally
                                      originated failures before ejection occurs.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  interval:
                                    description: Time interval between ejection sweep
                                      analysis.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  maxEjectionPercent:
                                    description: Maximum % of hosts in the load balancing
                                      pool for the upstream service that can be ejected.
                                    format: int32
                                    type: integer
                                  minHealthPercent:
                                    description: Outlier detection will be enabled
                                      as long as the associated load balancing pool
                                      has at least min_health_percent hosts in healthy
                                      mode.
                                    format: int32
                                    type: integer
                                  splitExternalLocalOriginErrors:
                                    description: Determines whether to distinguish
                                      local origin failures from external errors.
                                    type: boolean
                                type: object
                              port:
                                description: Specifies the number of a port on the
                                  destination service on which this policy is being
                                  applied.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              tls:
                                description: TLS related settings for connections
                                  to the upstream service.
                                properties:
                                  caCertificates:
                                    description: 'OPTIONAL: The path to the file containing
                                      certificate authority certificates to use in
                                      verifying a presented server certificate.'
                                    type: string
                                  caCrl:
                                    description: 'OPTIONAL: The path to the file containing
                                      the certificate revocation list (CRL) to use
                                      in verifying a presented server certificate.'
                                    type: string
                                  clientCertificate:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  credentialName:
                                    description: The name of the secret that holds
                                      the TLS certs for the client including the CA
                                      certificates.
                                    type: string
                                  insecureSkipVerify:
                                    description: '`insecureSkipVerify` specifies whether
                                      the proxy should skip verifying the CA signature
                                      and SAN for the server certificate corresponding
                                      to the host.'
                                    nullable: true
                                    type: boolean
                                  mode:
                                    description: |-
                                      Indicates whether connections to this port should be secured using TLS.

                                      Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                                    enum:
                                    - DISABLE
                                    - SIMPLE
                                    - MUTUAL
                                    - ISTIO_MUTUAL
                                    type: string
                                  privateKey:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  sni:
                                    description: SNI string to present to the server
                                      during TLS handshake.
                                    type: string
                                  subjectAltNames:
                                    description: A list of alternate names to verify
                                      the subject identity in the certificate.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          maxItems: 4096
                          type: array
                        proxyProtocol:
                          description: The upstream PROXY protocol settings.
                          properties:
                            version:
                              description: |-
                                The PROXY protocol version to use.

                                Valid Options: V1, V2
                              enum:
                              - V1
                              - V2
                              type: string
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        tunnel:
                          description: Configuration of tunneling TCP over other transport
                            or application layers for the host configured in the DestinationRule.
                          properties:
                            protocol:
                              description: Specifies which protocol to use for tunneling
                                the downstream connection.
                              type: string
                            targetHost:
                              description: Specifies a host to which the downstream
                                connection is tunneled.
                              type: string
                            targetPort:
                              description: Specifies a port to which the downstream
                                connection is tunneled.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          required:
                          - targetHost
                          - targetPort
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              trafficPolicy:
                description: Traffic policies to apply (load balancing policy, connection
                  pool sizes, outlier detection).
                properties:
                  connectionPool:
                    properties:
                      http:
                        description: HTTP connection pool settings.
                        properties:
                          h2UpgradePolicy:
                            description: |-
                              Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                              Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                            enum:
                            - DEFAULT
                            - DO_NOT_UPGRADE
                            - UPGRADE
                            type: string
                          http1MaxPendingRequests:
                            description: Maximum number of requests that will be queued
                              while waiting for a ready connection pool connection.
                            format: int32
                            type: integer
                          http2MaxRequests:
                            description: Maximum number of active requests to a destination.
                            format: int32
                            type: integer
                          idleTimeout:
                            description: The idle timeout for upstream connection
                              pool connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConcurrentStreams:
                            description: The maximum number of concurrent streams
                              allowed for a peer on one HTTP/2 connection.
                            format: int32
                            type: integer
                          maxRequestsPerConnection:
                            description: Maximum number of requests per connection
                              to a backend.
                            format: int32
                            type: integer
                          maxRetries:
                            description: Maximum number of retries that can be outstanding
                              to all hosts in a cluster at a given time.
                            format: int32
                            type: integer
                          useClientProtocol:
                            description: If set to true, client protocol will be preserved
                              while initiating connection to backend.
                            type: boolean
                        type: object
                      tcp:
                        description: Settings common to both HTTP and TCP upstream
                          connections.
                        properties:
                          connectTimeout:
                            description: TCP connection timeout.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          idleTimeout:
                            description: The idle timeout for TCP connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnectionDuration:
                            description: The maximum duration of a connection.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnections:
                            description: Maximum number of HTTP1 /TCP connections
                              to a destination host.
                            format: int32
                            type: integer
                          tcpKeepalive:
                            description: If set then set SO_KEEPALIVE on the socket
                              to enable TCP Keepalives.
                            properties:
                              interval:
                                description: The time duration between keep-alive
                                  probes.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                              probes:
                                description: Maximum number of keepalive probes to
                                  send without response before deciding the connection
                                  is dead.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              time:
                                description: The time duration a connection needs
                                  to be idle before keep-alive probes start being
                                  sent.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                            type: object
                        type: object
                    type: object
                  loadBalancer:
                    description: Settings controlling the load balancer algorithms.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - simple
                        - required:
                          - consistentHash
                    - required:
                      - simple
                    - required:
                      - consistentHash
                    properties:
                      consistentHash:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpHeaderName
                              - required:
                                - httpCookie
                              - required:
                                - useSourceIp
                              - required:
                                - httpQueryParameterName
                          - required:
                            - httpHeaderName
                          - required:
                            - httpCookie
                          - required:
                            - useSourceIp
                          - required:
                            - httpQueryParameterName
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - ringHash
                              - required:
                                - maglev
                          - required:
                            - ringHash
                          - required:
                            - maglev
                        properties:
                          httpCookie:
                            description: Hash based on HTTP cookie.
                            properties:
                              name:
                                description: Name of the cookie.
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: Lifetime of the cookie.
                                type: string
                            required:
                            - name
                            type: object
                          httpHeaderName:
                            description: Hash based on a specific HTTP header.
                            type: string
                          httpQueryParameterName:
                            description: Hash based on a specific HTTP query parameter.
                            type: string
                          maglev:
                            description: The Maglev load balancer implements consistent
                              hashing to backend hosts.
                            properties:
                              tableSize:
                                description: The table size for Maglev hashing.
                                minimum: 0
                                type: integer
                            type: object
                          minimumRingSize:
                            description: Deprecated.
                            minimum: 0
                            type: integer
                          ringHash:
                            description: The ring/modulo hash load balancer implements
                              consistent hashing to backend hosts.
                            properties:
                              minimumRingSize:
                                description: The minimum number of virtual nodes to
                                  use for the hash ring.
                                minimum: 0
                                type: integer
                            type: object
                          useSourceIp:
                            description: Hash based on the source IP address.
                            type: boolean
                        type: object
                      localityLbSetting:
                        properties:
                          distribute:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating locality, '/' separated,
                                    e.g.
                                  type: string
                                to:
                                  additionalProperties:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  description: Map of upstream localities to traffic
                                    distribution weights.
                                  type: object
                              type: object
                            type: array
                          enabled:
                            description: enable locality load balancing, this is DestinationRule-level
                              and will override mesh wide settings in entirety.
                            nullable: true
                            type: boolean
                          failover:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating region.
                                  type: string
                                to:
                                  description: Destination region the traffic will
                                    fail over to when endpoints in the 'from' region
                                    becomes unhealthy.
                                  type: string
                              type: object
                            type: array
                          failoverPriority:
                            description: failoverPriority is an ordered list of labels
                              used to sort endpoints to do priority based load balancing.
                            items:
                              type: string
                            type: array
                        type: object
                      simple:
                        description: |2-


                          Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                        enum:
                        - UNSPECIFIED
                        - LEAST_CONN
                        - RANDOM
                        - PASSTHROUGH
                        - ROUND_ROBIN
                        - LEAST_REQUEST
                        type: string
                      warmup:
                        description: Represents the warmup configuration of Service.
                        properties:
                          aggression:
                            description: This parameter controls the speed of traffic
                              increase over the warmup duration.
                            format: double
                            minimum: 1
                            nullable: true
                            type: number
                          duration:
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          minimumPercent:
                            format: double
                            maximum: 100
                            minimum: 0
                            nullable: true
                            type: number
                        required:
                        - duration
                        type: object
                      warmupDurationSecs:
                        description: 'Deprecated: use `warmup` instead.'
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                    type: object
                  outlierDetection:
                    properties:
                      baseEjectionTime:
                        description: Minimum ejection duration.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      consecutive5xxErrors:
                        description: Number of 5xx errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveErrors:
                        format: int32
                        type: integer
                      consecutiveGatewayErrors:
                        description: Number of gateway errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveLocalOriginFailures:
                        description: The number of consecutive locally originated
                          failures before ejection occurs.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      interval:
                        description: Time interval between ejection sweep analysis.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxEjectionPercent:
                        description: Maximum % of hosts in the load balancing pool
                          for the upstream service that can be ejected.
                        format: int32
                        type: integer
                      minHealthPercent:
                        description: Outlier detection will be enabled as long as
                          the associated load balancing pool has at least min_health_percent
                          hosts in healthy mode.
                        format: int32
                        type: integer
                      splitExternalLocalOriginErrors:
                        description: Determines whether to distinguish local origin
                          failures from external errors.
                        type: boolean
                    type: object
                  portLevelSettings:
                    description: Traffic policies specific to individual ports.
                    items:
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        port:
                          description: Specifies the number of a port on the destination
                            service on which this policy is being applied.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    maxItems: 4096
                    type: array
                  proxyProtocol:
                    description: The upstream PROXY protocol settings.
                    properties:
                      version:
                        description: |-
                          The PROXY protocol version to use.

                          Valid Options: V1, V2
                        enum:
                        - V1
                        - V2
                        type: string
                    type: object
                  tls:
                    description: TLS related settings for connections to the upstream
                      service.
                    properties:
                      caCertificates:
                        description: 'OPTIONAL: The path to the file containing certificate
                          authority certificates to use in verifying a presented server
                          certificate.'
                        type: string
                      caCrl:
                        description: 'OPTIONAL: The path to the file containing the
                          certificate revocation list (CRL) to use in verifying a
                          presented server certificate.'
                        type: string
                      clientCertificate:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      credentialName:
                        description: The name of the secret that holds the TLS certs
                          for the client including the CA certificates.
                        type: string
                      insecureSkipVerify:
                        description: '`insecureSkipVerify` specifies whether the proxy
                          should skip verifying the CA signature and SAN for the server
                          certificate corresponding to the host.'
                        nullable: true
                        type: boolean
                      mode:
                        description: |-
                          Indicates whether connections to this port should be secured using TLS.

                          Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                        enum:
                        - DISABLE
                        - SIMPLE
                        - MUTUAL
                        - ISTIO_MUTUAL
                        type: string
                      privateKey:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      sni:
                        description: SNI string to present to the server during TLS
                          handshake.
                        type: string
                      subjectAltNames:
                        description: A list of alternate names to verify the subject
                          identity in the certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  tunnel:
                    description: Configuration of tunneling TCP over other transport
                      or application layers for the host configured in the DestinationRule.
                    properties:
                      protocol:
                        description: Specifies which protocol to use for tunneling
                          the downstream connection.
                        type: string
                      targetHost:
                        description: Specifies a host to which the downstream connection
                          is tunneled.
                        type: string
                      targetPort:
                        description: Specifies a port to which the downstream connection
                          is tunneled.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    required:
                    - targetHost
                    - targetPort
                    type: object
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `DestinationRule` configuration should be applied.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            required:
            - host
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The name of a service from the service registry
      jsonPath: .spec.host
      name: Host
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting load balancing, outlier detection,
              etc. See more details at: https://istio.io/docs/reference/config/networking/destination-rule.html'
            properties:
              exportTo:
                description: A list of namespaces to which this destination rule is
                  exported.
                items:
                  type: string
                type: array
              host:
                description: The name of a service from the service registry.
                type: string
              subsets:
                description: One or more named sets that represent individual versions
                  of a service.
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels apply a filter over the endpoints of a service
                        in the service registry.
                      type: object
                    name:
                      description: Name of the subset.
                      type: string
                    trafficPolicy:
                      description: Traffic policies that apply to this subset.
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        portLevelSettings:
                          description: Traffic policies specific to individual ports.
                          items:
                            properties:
                              connectionPool:
                                properties:
                                  http:
                                    description: HTTP connection pool settings.
                                    properties:
                                      h2UpgradePolicy:
                                        description: |-
                                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                        enum:
                                        - DEFAULT
                                        - DO_NOT_UPGRADE
                                        - UPGRADE
                                        type: string
                                      http1MaxPendingRequests:
                                        description: Maximum number of requests that
                                          will be queued while waiting for a ready
                                          connection pool connection.
                                        format: int32
                                        type: integer
                                      http2MaxRequests:
                                        description: Maximum number of active requests
                                          to a destination.
                                        format: int32
                                        type: integer
                                      idleTimeout:
                                        description: The idle timeout for upstream
                                          connection pool connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConcurrentStreams:
                                        description: The maximum number of concurrent
                                          streams allowed for a peer on one HTTP/2
                                          connection.
                                        format: int32
                                        type: integer
                                      maxRequestsPerConnection:
                                        description: Maximum number of requests per
                                          connection to a backend.
                                        format: int32
                                        type: integer
                                      maxRetries:
                                        description: Maximum number of retries that
                                          can be outstanding to all hosts in a cluster
                                          at a given time.
                                        format: int32
                                        type: integer
                                      useClientProtocol:
                                        description: If set to true, client protocol
                                          will be preserved while initiating connection
                                          to backend.
                                        type: boolean
                                    type: object
                                  tcp:
                                    description: Settings common to both HTTP and
                                      TCP upstream connections.
                                    properties:
                                      connectTimeout:
                                        description: TCP connection timeout.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      idleTimeout:
                                        description: The idle timeout for TCP connections.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnectionDuration:
                                        description: The maximum duration of a connection.
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      maxConnections:
                                        description: Maximum number of HTTP1 /TCP
                                          connections to a destination host.
                                        format: int32
                                        type: integer
                                      tcpKeepalive:
                                        description: If set then set SO_KEEPALIVE
                                          on the socket to enable TCP Keepalives.
                                        properties:
                                          interval:
                                            description: The time duration between
                                              keep-alive probes.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                          probes:
                                            description: Maximum number of keepalive
                                              probes to send without response before
                                              deciding the connection is dead.
                                            maximum: 4294967295
                                            minimum: 0
                                            type: integer
                                          time:
                                            description: The time duration a connection
                                              needs to be idle before keep-alive probes
                                              start being sent.
                                            type: string
                                            x-kubernetes-validations:
                                            - message: must be a valid duration greater
                                                than 1ms
                                              rule: duration(self) >= duration('1ms')
                                        type: object
                                    type: object
                                type: object
                              loadBalancer:
                                description: Settings controlling the load balancer
                                  algorithms.
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - simple
                                    - required:
                                      - consistentHash
                                - required:
                                  - simple
                                - required:
                                  - consistentHash
                                properties:
                                  consistentHash:
                                    allOf:
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - httpHeaderName
                                          - required:
                                            - httpCookie
                                          - required:
                                            - useSourceIp
                                          - required:
                                            - httpQueryParameterName
                                      - required:
                                        - httpHeaderName
                                      - required:
                                        - httpCookie
                                      - required:
                                        - useSourceIp
                                      - required:
                                        - httpQueryParameterName
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - ringHash
                                          - required:
                                            - maglev
                                      - required:
                                        - ringHash
                                      - required:
                                        - maglev
                                    properties:
                                      httpCookie:
                                        description: Hash based on HTTP cookie.
                                        properties:
                                          name:
                                            description: Name of the cookie.
                                            type: string
                                          path:
                                            description: Path to set for the cookie.
                                            type: string
                                          ttl:
                                            description: Lifetime of the cookie.
                                            type: string
                                        required:
                                        - name
                                        type: object
                                      httpHeaderName:
                                        description: Hash based on a specific HTTP
                                          header.
                                        type: string
                                      httpQueryParameterName:
                                        description: Hash based on a specific HTTP
                                          query parameter.
                                        type: string
                                      maglev:
                                        description: The Maglev load balancer implements
                                          consistent hashing to backend hosts.
                                        properties:
                                          tableSize:
                                            description: The table size for Maglev
                                              hashing.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      minimumRingSize:
                                        description: Deprecated.
                                        minimum: 0
                                        type: integer
                                      ringHash:
                                        description: The ring/modulo hash load balancer
                                          implements consistent hashing to backend
                                          hosts.
                                        properties:
                                          minimumRingSize:
                                            description: The minimum number of virtual
                                              nodes to use for the hash ring.
                                            minimum: 0
                                            type: integer
                                        type: object
                                      useSourceIp:
                                        description: Hash based on the source IP address.
                                        type: boolean
                                    type: object
                                  localityLbSetting:
                                    properties:
                                      distribute:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating locality, '/'
                                                separated, e.g.
                                              type: string
                                            to:
                                              additionalProperties:
                                                maximum: 4294967295
                                                minimum: 0
                                                type: integer
                                              description: Map of upstream localities
                                                to traffic distribution weights.
                                              type: object
                                          type: object
                                        type: array
                                      enabled:
                                        description: enable locality load balancing,
                                          this is DestinationRule-level and will override
                                          mesh wide settings in entirety.
                                        nullable: true
                                        type: boolean
                                      failover:
                                        description: 'Optional: only one of distribute,
                                          failover or failoverPriority can be set.'
                                        items:
                                          properties:
                                            from:
                                              description: Originating region.
                                              type: string
                                            to:
                                              description: Destination region the
                                                traffic will fail over to when endpoints
                                                in the 'from' region becomes unhealthy.
                                              type: string
                                          type: object
                                        type: array
                                      failoverPriority:
                                        description: failoverPriority is an ordered
                                          list of labels used to sort endpoints to
                                          do priority based load balancing.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  simple:
                                    description: |2-


                                      Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                                    enum:
                                    - UNSPECIFIED
                                    - LEAST_CONN
                                    - RANDOM
                                    - PASSTHROUGH
                                    - ROUND_ROBIN
                                    - LEAST_REQUEST
                                    type: string
                                  warmup:
                                    description: Represents the warmup configuration
                                      of Service.
                                    properties:
                                      aggression:
                                        description: This parameter controls the speed
                                          of traffic increase over the warmup duration.
                                        format: double
                                        minimum: 1
                                        nullable: true
                                        type: number
                                      duration:
                                        type: string
                                        x-kubernetes-validations:
                                        - message: must be a valid duration greater
                                            than 1ms
                                          rule: duration(self) >= duration('1ms')
                                      minimumPercent:
                                        format: double
                                        maximum: 100
                                        minimum: 0
                                        nullable: true
                                        type: number
                                    required:
                                    - duration
                                    type: object
                                  warmupDurationSecs:
                                    description: 'Deprecated: use `warmup` instead.'
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                type: object
                              outlierDetection:
                                properties:
                                  baseEjectionTime:
                                    description: Minimum ejection duration.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  consecutive5xxErrors:
                                    description: Number of 5xx errors before a host
                                      is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveErrors:
                                    format: int32
                                    type: integer
                                  consecutiveGatewayErrors:
                                    description: Number of gateway errors before a
                                      host is ejected from the connection pool.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  consecutiveLocalOriginFailures:
                                    description: The number of consecutive locally
                                      originated failures before ejection occurs.
                                    maximum: 4294967295
                                    minimum: 0
                                    nullable: true
                                    type: integer
                                  interval:
                                    description: Time interval between ejection sweep
                                      analysis.
                                    type: string
                                    x-kubernetes-validations:
                                    - message: must be a valid duration greater than
                                        1ms
                                      rule: duration(self) >= duration('1ms')
                                  maxEjectionPercent:
                                    description: Maximum % of hosts in the load balancing
                                      pool for the upstream service that can be ejected.
                                    format: int32
                                    type: integer
                                  minHealthPercent:
                                    description: Outlier detection will be enabled
                                      as long as the associated load balancing pool
                                      has at least min_health_percent hosts in healthy
                                      mode.
                                    format: int32
                                    type: integer
                                  splitExternalLocalOriginErrors:
                                    description: Determines whether to distinguish
                                      local origin failures from external errors.
                                    type: boolean
                                type: object
                              port:
                                description: Specifies the number of a port on the
                                  destination service on which this policy is being
                                  applied.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              tls:
                                description: TLS related settings for connections
                                  to the upstream service.
                                properties:
                                  caCertificates:
                                    description: 'OPTIONAL: The path to the file containing
                                      certificate authority certificates to use in
                                      verifying a presented server certificate.'
                                    type: string
                                  caCrl:
                                    description: 'OPTIONAL: The path to the file containing
                                      the certificate revocation list (CRL) to use
                                      in verifying a presented server certificate.'
                                    type: string
                                  clientCertificate:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  credentialName:
                                    description: The name of the secret that holds
                                      the TLS certs for the client including the CA
                                      certificates.
                                    type: string
                                  insecureSkipVerify:
                                    description: '`insecureSkipVerify` specifies whether
                                      the proxy should skip verifying the CA signature
                                      and SAN for the server certificate corresponding
                                      to the host.'
                                    nullable: true
                                    type: boolean
                                  mode:
                                    description: |-
                                      Indicates whether connections to this port should be secured using TLS.

                                      Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                                    enum:
                                    - DISABLE
                                    - SIMPLE
                                    - MUTUAL
                                    - ISTIO_MUTUAL
                                    type: string
                                  privateKey:
                                    description: REQUIRED if mode is `MUTUAL`.
                                    type: string
                                  sni:
                                    description: SNI string to present to the server
                                      during TLS handshake.
                                    type: string
                                  subjectAltNames:
                                    description: A list of alternate names to verify
                                      the subject identity in the certificate.
                                    items:
                                      type: string
                                    type: array
                                type: object
                            type: object
                          maxItems: 4096
                          type: array
                        proxyProtocol:
                          description: The upstream PROXY protocol settings.
                          properties:
                            version:
                              description: |-
                                The PROXY protocol version to use.

                                Valid Options: V1, V2
                              enum:
                              - V1
                              - V2
                              type: string
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                        tunnel:
                          description: Configuration of tunneling TCP over other transport
                            or application layers for the host configured in the DestinationRule.
                          properties:
                            protocol:
                              description: Specifies which protocol to use for tunneling
                                the downstream connection.
                              type: string
                            targetHost:
                              description: Specifies a host to which the downstream
                                connection is tunneled.
                              type: string
                            targetPort:
                              description: Specifies a port to which the downstream
                                connection is tunneled.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          required:
                          - targetHost
                          - targetPort
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              trafficPolicy:
                description: Traffic policies to apply (load balancing policy, connection
                  pool sizes, outlier detection).
                properties:
                  connectionPool:
                    properties:
                      http:
                        description: HTTP connection pool settings.
                        properties:
                          h2UpgradePolicy:
                            description: |-
                              Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                              Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                            enum:
                            - DEFAULT
                            - DO_NOT_UPGRADE
                            - UPGRADE
                            type: string
                          http1MaxPendingRequests:
                            description: Maximum number of requests that will be queued
                              while waiting for a ready connection pool connection.
                            format: int32
                            type: integer
                          http2MaxRequests:
                            description: Maximum number of active requests to a destination.
                            format: int32
                            type: integer
                          idleTimeout:
                            description: The idle timeout for upstream connection
                              pool connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConcurrentStreams:
                            description: The maximum number of concurrent streams
                              allowed for a peer on one HTTP/2 connection.
                            format: int32
                            type: integer
                          maxRequestsPerConnection:
                            description: Maximum number of requests per connection
                              to a backend.
                            format: int32
                            type: integer
                          maxRetries:
                            description: Maximum number of retries that can be outstanding
                              to all hosts in a cluster at a given time.
                            format: int32
                            type: integer
                          useClientProtocol:
                            description: If set to true, client protocol will be preserved
                              while initiating connection to backend.
                            type: boolean
                        type: object
                      tcp:
                        description: Settings common to both HTTP and TCP upstream
                          connections.
                        properties:
                          connectTimeout:
                            description: TCP connection timeout.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          idleTimeout:
                            description: The idle timeout for TCP connections.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnectionDuration:
                            description: The maximum duration of a connection.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          maxConnections:
                            description: Maximum number of HTTP1 /TCP connections
                              to a destination host.
                            format: int32
                            type: integer
                          tcpKeepalive:
                            description: If set then set SO_KEEPALIVE on the socket
                              to enable TCP Keepalives.
                            properties:
                              interval:
                                description: The time duration between keep-alive
                                  probes.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                              probes:
                                description: Maximum number of keepalive probes to
                                  send without response before deciding the connection
                                  is dead.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              time:
                                description: The time duration a connection needs
                                  to be idle before keep-alive probes start being
                                  sent.
                                type: string
                                x-kubernetes-validations:
                                - message: must be a valid duration greater than 1ms
                                  rule: duration(self) >= duration('1ms')
                            type: object
                        type: object
                    type: object
                  loadBalancer:
                    description: Settings controlling the load balancer algorithms.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - simple
                        - required:
                          - consistentHash
                    - required:
                      - simple
                    - required:
                      - consistentHash
                    properties:
                      consistentHash:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpHeaderName
                              - required:
                                - httpCookie
                              - required:
                                - useSourceIp
                              - required:
                                - httpQueryParameterName
                          - required:
                            - httpHeaderName
                          - required:
                            - httpCookie
                          - required:
                            - useSourceIp
                          - required:
                            - httpQueryParameterName
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - ringHash
                              - required:
                                - maglev
                          - required:
                            - ringHash
                          - required:
                            - maglev
                        properties:
                          httpCookie:
                            description: Hash based on HTTP cookie.
                            properties:
                              name:
                                description: Name of the cookie.
                                type: string
                              path:
                                description: Path to set for the cookie.
                                type: string
                              ttl:
                                description: Lifetime of the cookie.
                                type: string
                            required:
                            - name
                            type: object
                          httpHeaderName:
                            description: Hash based on a specific HTTP header.
                            type: string
                          httpQueryParameterName:
                            description: Hash based on a specific HTTP query parameter.
                            type: string
                          maglev:
                            description: The Maglev load balancer implements consistent
                              hashing to backend hosts.
                            properties:
                              tableSize:
                                description: The table size for Maglev hashing.
                                minimum: 0
                                type: integer
                            type: object
                          minimumRingSize:
                            description: Deprecated.
                            minimum: 0
                            type: integer
                          ringHash:
                            description: The ring/modulo hash load balancer implements
                              consistent hashing to backend hosts.
                            properties:
                              minimumRingSize:
                                description: The minimum number of virtual nodes to
                                  use for the hash ring.
                                minimum: 0
                                type: integer
                            type: object
                          useSourceIp:
                            description: Hash based on the source IP address.
                            type: boolean
                        type: object
                      localityLbSetting:
                        properties:
                          distribute:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating locality, '/' separated,
                                    e.g.
                                  type: string
                                to:
                                  additionalProperties:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                  description: Map of upstream localities to traffic
                                    distribution weights.
                                  type: object
                              type: object
                            type: array
                          enabled:
                            description: enable locality load balancing, this is DestinationRule-level
                              and will override mesh wide settings in entirety.
                            nullable: true
                            type: boolean
                          failover:
                            description: 'Optional: only one of distribute, failover
                              or failoverPriority can be set.'
                            items:
                              properties:
                                from:
                                  description: Originating region.
                                  type: string
                                to:
                                  description: Destination region the traffic will
                                    fail over to when endpoints in the 'from' region
                                    becomes unhealthy.
                                  type: string
                              type: object
                            type: array
                          failoverPriority:
                            description: failoverPriority is an ordered list of labels
                              used to sort endpoints to do priority based load balancing.
                            items:
                              type: string
                            type: array
                        type: object
                      simple:
                        description: |2-


                          Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                        enum:
                        - UNSPECIFIED
                        - LEAST_CONN
                        - RANDOM
                        - PASSTHROUGH
                        - ROUND_ROBIN
                        - LEAST_REQUEST
                        type: string
                      warmup:
                        description: Represents the warmup configuration of Service.
                        properties:
                          aggression:
                            description: This parameter controls the speed of traffic
                              increase over the warmup duration.
                            format: double
                            minimum: 1
                            nullable: true
                            type: number
                          duration:
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          minimumPercent:
                            format: double
                            maximum: 100
                            minimum: 0
                            nullable: true
                            type: number
                        required:
                        - duration
                        type: object
                      warmupDurationSecs:
                        description: 'Deprecated: use `warmup` instead.'
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                    type: object
                  outlierDetection:
                    properties:
                      baseEjectionTime:
                        description: Minimum ejection duration.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      consecutive5xxErrors:
                        description: Number of 5xx errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveErrors:
                        format: int32
                        type: integer
                      consecutiveGatewayErrors:
                        description: Number of gateway errors before a host is ejected
                          from the connection pool.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      consecutiveLocalOriginFailures:
                        description: The number of consecutive locally originated
                          failures before ejection occurs.
                        maximum: 4294967295
                        minimum: 0
                        nullable: true
                        type: integer
                      interval:
                        description: Time interval between ejection sweep analysis.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxEjectionPercent:
                        description: Maximum % of hosts in the load balancing pool
                          for the upstream service that can be ejected.
                        format: int32
                        type: integer
                      minHealthPercent:
                        description: Outlier detection will be enabled as long as
                          the associated load balancing pool has at least min_health_percent
                          hosts in healthy mode.
                        format: int32
                        type: integer
                      splitExternalLocalOriginErrors:
                        description: Determines whether to distinguish local origin
                          failures from external errors.
                        type: boolean
                    type: object
                  portLevelSettings:
                    description: Traffic policies specific to individual ports.
                    items:
                      properties:
                        connectionPool:
                          properties:
                            http:
                              description: HTTP connection pool settings.
                              properties:
                                h2UpgradePolicy:
                                  description: |-
                                    Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                    Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                                  enum:
                                  - DEFAULT
                                  - DO_NOT_UPGRADE
                                  - UPGRADE
                                  type: string
                                http1MaxPendingRequests:
                                  description: Maximum number of requests that will
                                    be queued while waiting for a ready connection
                                    pool connection.
                                  format: int32
                                  type: integer
                                http2MaxRequests:
                                  description: Maximum number of active requests to
                                    a destination.
                                  format: int32
                                  type: integer
                                idleTimeout:
                                  description: The idle timeout for upstream connection
                                    pool connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConcurrentStreams:
                                  description: The maximum number of concurrent streams
                                    allowed for a peer on one HTTP/2 connection.
                                  format: int32
                                  type: integer
                                maxRequestsPerConnection:
                                  description: Maximum number of requests per connection
                                    to a backend.
                                  format: int32
                                  type: integer
                                maxRetries:
                                  description: Maximum number of retries that can
                                    be outstanding to all hosts in a cluster at a
                                    given time.
                                  format: int32
                                  type: integer
                                useClientProtocol:
                                  description: If set to true, client protocol will
                                    be preserved while initiating connection to backend.
                                  type: boolean
                              type: object
                            tcp:
                              description: Settings common to both HTTP and TCP upstream
                                connections.
                              properties:
                                connectTimeout:
                                  description: TCP connection timeout.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                idleTimeout:
                                  description: The idle timeout for TCP connections.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnectionDuration:
                                  description: The maximum duration of a connection.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                maxConnections:
                                  description: Maximum number of HTTP1 /TCP connections
                                    to a destination host.
                                  format: int32
                                  type: integer
                                tcpKeepalive:
                                  description: If set then set SO_KEEPALIVE on the
                                    socket to enable TCP Keepalives.
                                  properties:
                                    interval:
                                      description: The time duration between keep-alive
                                        probes.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                    probes:
                                      description: Maximum number of keepalive probes
                                        to send without response before deciding the
                                        connection is dead.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    time:
                                      description: The time duration a connection
                                        needs to be idle before keep-alive probes
                                        start being sent.
                                      type: string
                                      x-kubernetes-validations:
                                      - message: must be a valid duration greater
                                          than 1ms
                                        rule: duration(self) >= duration('1ms')
                                  type: object
                              type: object
                          type: object
                        loadBalancer:
                          description: Settings controlling the load balancer algorithms.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - simple
                              - required:
                                - consistentHash
                          - required:
                            - simple
                          - required:
                            - consistentHash
                          properties:
                            consistentHash:
                              allOf:
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - httpHeaderName
                                    - required:
                                      - httpCookie
                                    - required:
                                      - useSourceIp
                                    - required:
                                      - httpQueryParameterName
                                - required:
                                  - httpHeaderName
                                - required:
                                  - httpCookie
                                - required:
                                  - useSourceIp
                                - required:
                                  - httpQueryParameterName
                              - oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - ringHash
                                    - required:
                                      - maglev
                                - required:
                                  - ringHash
                                - required:
                                  - maglev
                              properties:
                                httpCookie:
                                  description: Hash based on HTTP cookie.
                                  properties:
                                    name:
                                      description: Name of the cookie.
                                      type: string
                                    path:
                                      description: Path to set for the cookie.
                                      type: string
                                    ttl:
                                      description: Lifetime of the cookie.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                httpHeaderName:
                                  description: Hash based on a specific HTTP header.
                                  type: string
                                httpQueryParameterName:
                                  description: Hash based on a specific HTTP query
                                    parameter.
                                  type: string
                                maglev:
                                  description: The Maglev load balancer implements
                                    consistent hashing to backend hosts.
                                  properties:
                                    tableSize:
                                      description: The table size for Maglev hashing.
                                      minimum: 0
                                      type: integer
                                  type: object
                                minimumRingSize:
                                  description: Deprecated.
                                  minimum: 0
                                  type: integer
                                ringHash:
                                  description: The ring/modulo hash load balancer
                                    implements consistent hashing to backend hosts.
                                  properties:
                                    minimumRingSize:
                                      description: The minimum number of virtual nodes
                                        to use for the hash ring.
                                      minimum: 0
                                      type: integer
                                  type: object
                                useSourceIp:
                                  description: Hash based on the source IP address.
                                  type: boolean
                              type: object
                            localityLbSetting:
                              properties:
                                distribute:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating locality, '/' separated,
                                          e.g.
                                        type: string
                                      to:
                                        additionalProperties:
                                          maximum: 4294967295
                                          minimum: 0
                                          type: integer
                                        description: Map of upstream localities to
                                          traffic distribution weights.
                                        type: object
                                    type: object
                                  type: array
                                enabled:
                                  description: enable locality load balancing, this
                                    is DestinationRule-level and will override mesh
                                    wide settings in entirety.
                                  nullable: true
                                  type: boolean
                                failover:
                                  description: 'Optional: only one of distribute,
                                    failover or failoverPriority can be set.'
                                  items:
                                    properties:
                                      from:
                                        description: Originating region.
                                        type: string
                                      to:
                                        description: Destination region the traffic
                                          will fail over to when endpoints in the
                                          'from' region becomes unhealthy.
                                        type: string
                                    type: object
                                  type: array
                                failoverPriority:
                                  description: failoverPriority is an ordered list
                                    of labels used to sort endpoints to do priority
                                    based load balancing.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            simple:
                              description: |2-


                                Valid Options: LEAST_CONN, RANDOM, PASSTHROUGH, ROUND_ROBIN, LEAST_REQUEST
                              enum:
                              - UNSPECIFIED
                              - LEAST_CONN
                              - RANDOM
                              - PASSTHROUGH
                              - ROUND_ROBIN
                              - LEAST_REQUEST
                              type: string
                            warmup:
                              description: Represents the warmup configuration of
                                Service.
                              properties:
                                aggression:
                                  description: This parameter controls the speed of
                                    traffic increase over the warmup duration.
                                  format: double
                                  minimum: 1
                                  nullable: true
                                  type: number
                                duration:
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                minimumPercent:
                                  format: double
                                  maximum: 100
                                  minimum: 0
                                  nullable: true
                                  type: number
                              required:
                              - duration
                              type: object
                            warmupDurationSecs:
                              description: 'Deprecated: use `warmup` instead.'
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                          type: object
                        outlierDetection:
                          properties:
                            baseEjectionTime:
                              description: Minimum ejection duration.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            consecutive5xxErrors:
                              description: Number of 5xx errors before a host is ejected
                                from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveErrors:
                              format: int32
                              type: integer
                            consecutiveGatewayErrors:
                              description: Number of gateway errors before a host
                                is ejected from the connection pool.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            consecutiveLocalOriginFailures:
                              description: The number of consecutive locally originated
                                failures before ejection occurs.
                              maximum: 4294967295
                              minimum: 0
                              nullable: true
                              type: integer
                            interval:
                              description: Time interval between ejection sweep analysis.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxEjectionPercent:
                              description: Maximum % of hosts in the load balancing
                                pool for the upstream service that can be ejected.
                              format: int32
                              type: integer
                            minHealthPercent:
                              description: Outlier detection will be enabled as long
                                as the associated load balancing pool has at least
                                min_health_percent hosts in healthy mode.
                              format: int32
                              type: integer
                            splitExternalLocalOriginErrors:
                              description: Determines whether to distinguish local
                                origin failures from external errors.
                              type: boolean
                          type: object
                        port:
                          description: Specifies the number of a port on the destination
                            service on which this policy is being applied.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        tls:
                          description: TLS related settings for connections to the
                            upstream service.
                          properties:
                            caCertificates:
                              description: 'OPTIONAL: The path to the file containing
                                certificate authority certificates to use in verifying
                                a presented server certificate.'
                              type: string
                            caCrl:
                              description: 'OPTIONAL: The path to the file containing
                                the certificate revocation list (CRL) to use in verifying
                                a presented server certificate.'
                              type: string
                            clientCertificate:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            credentialName:
                              description: The name of the secret that holds the TLS
                                certs for the client including the CA certificates.
                              type: string
                            insecureSkipVerify:
                              description: '`insecureSkipVerify` specifies whether
                                the proxy should skip verifying the CA signature and
                                SAN for the server certificate corresponding to the
                                host.'
                              nullable: true
                              type: boolean
                            mode:
                              description: |-
                                Indicates whether connections to this port should be secured using TLS.

                                Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                              enum:
                              - DISABLE
                              - SIMPLE
                              - MUTUAL
                              - ISTIO_MUTUAL
                              type: string
                            privateKey:
                              description: REQUIRED if mode is `MUTUAL`.
                              type: string
                            sni:
                              description: SNI string to present to the server during
                                TLS handshake.
                              type: string
                            subjectAltNames:
                              description: A list of alternate names to verify the
                                subject identity in the certificate.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    maxItems: 4096
                    type: array
                  proxyProtocol:
                    description: The upstream PROXY protocol settings.
                    properties:
                      version:
                        description: |-
                          The PROXY protocol version to use.

                          Valid Options: V1, V2
                        enum:
                        - V1
                        - V2
                        type: string
                    type: object
                  tls:
                    description: TLS related settings for connections to the upstream
                      service.
                    properties:
                      caCertificates:
                        description: 'OPTIONAL: The path to the file containing certificate
                          authority certificates to use in verifying a presented server
                          certificate.'
                        type: string
                      caCrl:
                        description: 'OPTIONAL: The path to the file containing the
                          certificate revocation list (CRL) to use in verifying a
                          presented server certificate.'
                        type: string
                      clientCertificate:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      credentialName:
                        description: The name of the secret that holds the TLS certs
                          for the client including the CA certificates.
                        type: string
                      insecureSkipVerify:
                        description: '`insecureSkipVerify` specifies whether the proxy
                          should skip verifying the CA signature and SAN for the server
                          certificate corresponding to the host.'
                        nullable: true
                        type: boolean
                      mode:
                        description: |-
                          Indicates whether connections to this port should be secured using TLS.

                          Valid Options: DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL
                        enum:
                        - DISABLE
                        - SIMPLE
                        - MUTUAL
                        - ISTIO_MUTUAL
                        type: string
                      privateKey:
                        description: REQUIRED if mode is `MUTUAL`.
                        type: string
                      sni:
                        description: SNI string to present to the server during TLS
                          handshake.
                        type: string
                      subjectAltNames:
                        description: A list of alternate names to verify the subject
                          identity in the certificate.
                        items:
                          type: string
                        type: array
                    type: object
                  tunnel:
                    description: Configuration of tunneling TCP over other transport
                      or application layers for the host configured in the DestinationRule.
                    properties:
                      protocol:
                        description: Specifies which protocol to use for tunneling
                          the downstream connection.
                        type: string
                      targetHost:
                        description: Specifies a host to which the downstream connection
                          is tunneled.
                        type: string
                      targetPort:
                        description: Specifies a port to which the downstream connection
                          is tunneled.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    required:
                    - targetHost
                    - targetPort
                    type: object
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `DestinationRule` configuration should be applied.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            required:
            - host
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: envoyfilters.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: EnvoyFilter
    listKind: EnvoyFilterList
    plural: envoyfilters
    singular: envoyfilter
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Customizing Envoy configuration generated by Istio. See
              more details at: https://istio.io/docs/reference/config/networking/envoy-filter.html'
            properties:
              configPatches:
                description: One or more patches with match conditions.
                items:
                  properties:
                    applyTo:
                      description: |-
                        Specifies where in the Envoy configuration, the patch should be applied.

                        Valid Options: LISTENER, FILTER_CHAIN, NETWORK_FILTER, HTTP_FILTER, ROUTE_CONFIGURATION, VIRTUAL_HOST, HTTP_ROUTE, CLUSTER, EXTENSION_CONFIG, BOOTSTRAP, LISTENER_FILTER
                      enum:
                      - INVALID
                      - LISTENER
                      - FILTER_CHAIN
                      - NETWORK_FILTER
                      - HTTP_FILTER
                      - ROUTE_CONFIGURATION
                      - VIRTUAL_HOST
                      - HTTP_ROUTE
                      - CLUSTER
                      - EXTENSION_CONFIG
                      - BOOTSTRAP
                      - LISTENER_FILTER
                      type: string
                    match:
                      description: Match on listener/route configuration/cluster.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - listener
                          - required:
                            - routeConfiguration
                          - required:
                            - cluster
                      - required:
                        - listener
                      - required:
                        - routeConfiguration
                      - required:
                        - cluster
                      properties:
                        cluster:
                          description: Match on envoy cluster attributes.
                          properties:
                            name:
                              description: The exact name of the cluster to match.
                              type: string
                            portNumber:
                              description: The service port for which this cluster
                                was generated.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            service:
                              description: The fully qualified service name for this
                                cluster.
                              type: string
                            subset:
                              description: The subset associated with the service.
                              type: string
                          type: object
                        context:
                          description: |-
                            The specific config generation context to match on.

                            Valid Options: ANY, SIDECAR_INBOUND, SIDECAR_OUTBOUND, GATEWAY
                          enum:
                          - ANY
                          - SIDECAR_INBOUND
                          - SIDECAR_OUTBOUND
                          - GATEWAY
                          type: string
                        listener:
                          description: Match on envoy listener attributes.
                          properties:
                            filterChain:
                              description: Match a specific filter chain in a listener.
                              properties:
                                applicationProtocols:
                                  description: Applies only to sidecars.
                                  type: string
                                destinationPort:
                                  description: The destination_port value used by
                                    a filter chain's match condition.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                filter:
                                  description: The name of a specific filter to apply
                                    the patch to.
                                  properties:
                                    name:
                                      description: The filter name to match on.
                                      type: string
                                    subFilter:
                                      description: The next level filter within this
                                        filter to match upon.
                                      properties:
                                        name:
                                          description: The filter name to match on.
                                          type: string
                                      type: object
                                  type: object
                                name:
                                  description: The name assigned to the filter chain.
                                  type: string
                                sni:
                                  description: The SNI value used by a filter chain's
                                    match condition.
                                  type: string
                                transportProtocol:
                                  description: Applies only to `SIDECAR_INBOUND` context.
                                  type: string
                              type: object
                            listenerFilter:
                              description: Match a specific listener filter.
                              type: string
                            name:
                              description: Match a specific listener by its name.
                              type: string
                            portName:
                              type: string
                            portNumber:
                              description: The service port/gateway port to which
                                traffic is being sent/received.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        proxy:
                          description: Match on properties associated with a proxy.
                          properties:
                            metadata:
                              additionalProperties:
                                type: string
                              description: Match on the node metadata supplied by
                                a proxy when connecting to Istio Pilot.
                              type: object
                            proxyVersion:
                              description: A regular expression in golang regex format
                                (RE2) that can be used to select proxies using a specific
                                version of istio proxy.
                              type: string
                          type: object
                        routeConfiguration:
                          description: Match on envoy HTTP route configuration attributes.
                          properties:
                            gateway:
                              description: The Istio gateway config's namespace/name
                                for which this route configuration was generated.
                              type: string
                            name:
                              description: Route configuration name to match on.
                              type: string
                            portName:
                              description: Applicable only for GATEWAY context.
                              type: string
                            portNumber:
                              description: The service port number or gateway server
                                port number for which this route configuration was
                                generated.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            vhost:
                              description: Match a specific virtual host in a route
                                configuration and apply the patch to the virtual host.
                              properties:
                                name:
                                  description: The VirtualHosts objects generated
                                    by Istio are named as host:port, where the host
                                    typically corresponds to the VirtualService's
                                    host field or the hostname of a service in the
                                    registry.
                                  type: string
                                route:
                                  description: Match a specific route within the virtual
                                    host.
                                  properties:
                                    action:
                                      description: |-
                                        Match a route with specific action type.

                                        Valid Options: ANY, ROUTE, REDIRECT, DIRECT_RESPONSE
                                      enum:
                                      - ANY
                                      - ROUTE
                                      - REDIRECT
                                      - DIRECT_RESPONSE
                                      type: string
                                    name:
                                      description: The Route objects generated by
                                        default are named as default.
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                    patch:
                      description: The patch to apply along with the operation.
                      properties:
                        filterClass:
                          description: |-
                            Determines the filter insertion order.

                            Valid Options: AUTHN, AUTHZ, STATS
                          enum:
                          - UNSPECIFIED
                          - AUTHN
                          - AUTHZ
                          - STATS
                          type: string
                        operation:
                          description: |-
                            Determines how the patch should be applied.

                            Valid Options: MERGE, ADD, REMOVE, INSERT_BEFORE, INSERT_AFTER, INSERT_FIRST, REPLACE
                          enum:
                          - INVALID
                          - MERGE
                          - ADD
                          - REMOVE
                          - INSERT_BEFORE
                          - INSERT_AFTER
                          - INSERT_FIRST
                          - REPLACE
                          type: string
                        value:
                          description: The JSON config of the object being patched.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
                type: array
              priority:
                description: Priority defines the order in which patch sets are applied
                  within a context.
                format: int32
                type: integer
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this patch configuration should be applied.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or workloadSelector can be set
              rule: (has(self.workloadSelector)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gatewayclasses.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    shortNames:
    - gc
    singular: gatewayclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GatewayClass describes a class of Gateways available to the user for creating
          Gateway resources.

          It is recommended that this resource be used as a template for Gateways. This
          means that a Gateway is based on the state of the GatewayClass at the time it
          was created and changes to the GatewayClass or associated parameters are not
          propagated down to existing Gateways. This recommendation is intended to
          limit the blast radius of changes to GatewayClass or associated parameters.
          If implementations choose to propagate GatewayClass changes to existing
          Gateways, that MUST be clearly documented by the implementation.

          Whenever one or more Gateways are using a GatewayClass, implementations SHOULD
          add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the
          associated GatewayClass. This ensures that a GatewayClass associated with a
          Gateway is not deleted while in use.

          GatewayClass is a Cluster level resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: |-
                  ControllerName is the name of the controller that is managing Gateways of
                  this class. The value of this field MUST be a domain prefixed path.

                  Example: "example.net/gateway-controller".

                  This field is not mutable and cannot be empty.

                  Support: Core
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: |-
                  ParametersRef is a reference to a resource that contains the configuration
                  parameters corresponding to the GatewayClass. This is optional if the
                  controller does not require any additional configuration.

                  ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap,
                  or an implementation-specific custom resource. The resource can be
                  cluster-scoped or namespace-scoped.

                  If the referent cannot be found, refers to an unsupported kind, or when
                  the data within that resource is malformed, the GatewayClass SHOULD be
                  rejected with the "Accepted" status condition set to "False" and an
                  "InvalidParameters" reason.

                  A Gateway for this GatewayClass may provide its own `parametersRef`. When both are specified,
                  the merging behavior is implementation specific.
                  It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                  Support: Implementation-specific
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referent.
                      This field is required when referring to a Namespace-scoped resource and
                      MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
            description: |-
              Status defines the current state of GatewayClass.

              Implementations MUST populate status on all GatewayClass resources which
              specify their controller name.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: |-
                  Conditions is the current status from the controller for
                  this GatewayClass.

                  Controllers should prefer to publish conditions using values
                  of GatewayClassConditionType for the type of each Condition.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              supportedFeatures:
                description: |
                  SupportedFeatures is the set of features the GatewayClass support.
                  It MUST be sorted in ascending alphabetical order by the Name key.
                items:
                  properties:
                    name:
                      description: |-
                        FeatureName is used to describe distinct features that are covered by
                        conformance tests.
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          GatewayClass describes a class of Gateways available to the user for creating
          Gateway resources.

          It is recommended that this resource be used as a template for Gateways. This
          means that a Gateway is based on the state of the GatewayClass at the time it
          was created and changes to the GatewayClass or associated parameters are not
          propagated down to existing Gateways. This recommendation is intended to
          limit the blast radius of changes to GatewayClass or associated parameters.
          If implementations choose to propagate GatewayClass changes to existing
          Gateways, that MUST be clearly documented by the implementation.

          Whenever one or more Gateways are using a GatewayClass, implementations SHOULD
          add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the
          associated GatewayClass. This ensures that a GatewayClass associated with a
          Gateway is not deleted while in use.

          GatewayClass is a Cluster level resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: |-
                  ControllerName is the name of the controller that is managing Gateways of
                  this class. The value of this field MUST be a domain prefixed path.

                  Example: "example.net/gateway-controller".

                  This field is not mutable and cannot be empty.

                  Support: Core
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: |-
                  ParametersRef is a reference to a resource that contains the configuration
                  parameters corresponding to the GatewayClass. This is optional if the
                  controller does not require any additional configuration.

                  ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap,
                  or an implementation-specific custom resource. The resource can be
                  cluster-scoped or namespace-scoped.

                  If the referent cannot be found, refers to an unsupported kind, or when
                  the data within that resource is malformed, the GatewayClass SHOULD be
                  rejected with the "Accepted" status condition set to "False" and an
                  "InvalidParameters" reason.

                  A Gateway for this GatewayClass may provide its own `parametersRef`. When both are specified,
                  the merging behavior is implementation specific.
                  It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                  Support: Implementation-specific
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referent.
                      This field is required when referring to a Namespace-scoped resource and
                      MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
            description: |-
              Status defines the current state of GatewayClass.

              Implementations MUST populate status on all GatewayClass resources which
              specify their controller name.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: |-
                  Conditions is the current status from the controller for
                  this GatewayClass.

                  Controllers should prefer to publish conditions using values
                  of GatewayClassConditionType for the type of each Condition.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              supportedFeatures:
                description: |
                  SupportedFeatures is the set of features the GatewayClass support.
                  It MUST be sorted in ascending alphabetical order by the Name key.
                items:
                  properties:
                    name:
                      description: |-
                        FeatureName is used to describe distinct features that are covered by
                        conformance tests.
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
    - gtw
    singular: gateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          Gateway represents an instance of a service-traffic handling infrastructure
          by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses requested for this Gateway. This is optional and behavior can
                  depend on the implementation. If a value is set in the spec and the
                  requested address is invalid or unavailable, the implementation MUST
                  indicate this in the associated entry in GatewayStatus.Addresses.

                  The Addresses field represents a request for the address(es) on the
                  "outside of the Gateway", that traffic bound for this Gateway will use.
                  This could be the IP address or hostname of an external load balancer or
                  other networking infrastructure, or some other address that traffic will
                  be sent to.

                  If no Addresses are specified, the implementation MAY schedule the
                  Gateway in an implementation-specific manner, assigning an appropriate
                  set of Addresses.

                  The implementation MUST bind all Listeners to every GatewayAddress that
                  it assigns to the Gateway and add a corresponding entry in
                  GatewayStatus.Addresses.

                  Support: Extended

                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.

                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: IPAddress values must be unique
                  rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
                - message: Hostname values must be unique
                  rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
              backendTLS:
                description: |+
                  BackendTLS configures TLS settings for when this Gateway is connecting to
                  backends with TLS.

                  Support: Core

                properties:
                  clientCertificateRef:
                    description: |+
                      ClientCertificateRef is a reference to an object that contains a Client
                      Certificate and the associated private key.

                      References to a resource in different namespace are invalid UNLESS there
                      is a ReferenceGrant in the target namespace that allows the certificate
                      to be attached. If a ReferenceGrant does not allow this reference, the
                      "ResolvedRefs" condition MUST be set to False for this listener with the
                      "RefNotPermitted" reason.

                      ClientCertificateRef can reference to standard Kubernetes resources, i.e.
                      Secret, or implementation-specific custom resources.

                      This setting can be overridden on the service level by use of BackendTLSPolicy.

                      Support: Core

                    properties:
                      group:
                        default: ""
                        description: |-
                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                          When unspecified or empty string, core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Secret
                        description: Kind is kind of the referent. For example "Secret".
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of the referenced object. When unspecified, the local
                          namespace is inferred.

                          Note that when a namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          Support: Core
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                type: object
              gatewayClassName:
                description: |-
                  GatewayClassName used for this Gateway. This is the name of a
                  GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              infrastructure:
                description: |-
                  Infrastructure defines infrastructure level attributes about this Gateway instance.

                  Support: Extended
                properties:
                  annotations:
                    additionalProperties:
                      description: |-
                        AnnotationValue is the value of an annotation in Gateway API. This is used
                        for validation of maps such as TLS options. This roughly matches Kubernetes
                        annotation validation, although the length validation in that case is based
                        on the entire size of the annotations struct.
                      maxLength: 4096
                      minLength: 0
                      type: string
                    description: |-
                      Annotations that SHOULD be applied to any resources created in response to this Gateway.

                      For implementations creating other Kubernetes objects, this should be the `metadata.annotations` field on resources.
                      For other implementations, this refers to any relevant (implementation specific) "annotations" concepts.

                      An implementation may chose to add additional implementation-specific annotations as they see fit.

                      Support: Extended
                    maxProperties: 8
                    type: object
                    x-kubernetes-validations:
                    - message: Annotation keys must be in the form of an optional
                        DNS subdomain prefix followed by a required name segment of
                        up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the annotation key's prefix must be a
                        DNS subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                  labels:
                    additionalProperties:
                      description: |-
                        LabelValue is the value of a label in the Gateway API. This is used for validation
                        of maps such as Gateway infrastructure labels. This matches the Kubernetes
                        label validation rules:
                        * must be 63 characters or less (can be empty),
                        * unless empty, must begin and end with an alphanumeric character ([a-z0-9A-Z]),
                        * could contain dashes (-), underscores (_), dots (.), and alphanumerics between.

                        Valid values include:

                        * MyValue
                        * my.name
                        * 123-my-value
                      maxLength: 63
                      minLength: 0
                      pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                      type: string
                    description: |-
                      Labels that SHOULD be applied to any resources created in response to this Gateway.

                      For implementations creating other Kubernetes objects, this should be the `metadata.labels` field on resources.
                      For other implementations, this refers to any relevant (implementation specific) "labels" concepts.

                      An implementation may chose to add additional implementation-specific labels as they see fit.

                      If an implementation maps these labels to Pods, or any other resource that would need to be recreated when labels
                      change, it SHOULD clearly warn about this behavior in documentation.

                      Support: Extended
                    maxProperties: 8
                    type: object
                    x-kubernetes-validations:
                    - message: Label keys must be in the form of an optional DNS subdomain
                        prefix followed by a required name segment of up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the label key's prefix must be a DNS
                        subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                  parametersRef:
                    description: |-
                      ParametersRef is a reference to a resource that contains the configuration
                      parameters corresponding to the Gateway. This is optional if the
                      controller does not require any additional configuration.

                      This follows the same semantics as GatewayClass's `parametersRef`, but on a per-Gateway basis

                      The Gateway's GatewayClass may provide its own `parametersRef`. When both are specified,
                      the merging behavior is implementation specific.
                      It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                      Support: Implementation-specific
                    properties:
                      group:
                        description: Group is the group of the referent.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: Kind is kind of the referent.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                type: object
              listeners:
                description: |-
                  Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses.
                  At least one Listener MUST be specified.

                  Each Listener in a set of Listeners (for example, in a single Gateway)
                  MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                  exactly one listener. (This section uses "set of Listeners" rather than
                  "Listeners in a single Gateway" because implementations MAY merge configuration
                  from multiple Gateways onto a single data plane, and these rules _also_
                  apply in that case).

                  Practically, this means that each listener in a set MUST have a unique
                  combination of Port, Protocol, and, if supported by the protocol, Hostname.

                  Some combinations of port, protocol, and TLS settings are considered
                  Core support and MUST be supported by implementations based on their
                  targeted conformance profile:

                  HTTP Profile

                  1. HTTPRoute, Port: 80, Protocol: HTTP
                  2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided

                  TLS Profile

                  1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough

                  "Distinct" Listeners have the following property:

                  The implementation can match inbound requests to a single distinct
                  Listener. When multiple Listeners share values for fields (for
                  example, two Listeners with the same Port value), the implementation
                  can match requests to only one of the Listeners using other
                  Listener fields.

                  For example, the following Listener scenarios are distinct:

                  1. Multiple Listeners with the same Port that all use the "HTTP"
                     Protocol that all have unique Hostname values.
                  2. Multiple Listeners with the same Port that use either the "HTTPS" or
                     "TLS" Protocol that all have unique Hostname values.
                  3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                     with the same Protocol has the same Port value.

                  Some fields in the Listener struct have possible values that affect
                  whether the Listener is distinct. Hostname is particularly relevant
                  for HTTP or HTTPS protocols.

                  When using the Hostname value to select between same-Port, same-Protocol
                  Listeners, the Hostname value must be different on each Listener for the
                  Listener to be distinct.

                  When the Listeners are distinct based on Hostname, inbound request
                  hostnames MUST match from the most specific to least specific Hostname
                  values to choose the correct Listener and its associated set of Routes.

                  Exact matches must be processed before wildcard matches, and wildcard
                  matches must be processed before fallback (empty Hostname value)
                  matches. For example, `"foo.example.com"` takes precedence over
                  `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.

                  Additionally, if there are multiple wildcard entries, more specific
                  wildcard entries must be processed before less specific wildcard entries.
                  For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                  The precise definition here is that the higher the number of dots in the
                  hostname to the right of the wildcard character, the higher the precedence.

                  The wildcard character will match any number of characters _and dots_ to
                  the left, however, so `"*.example.com"` will match both
                  `"foo.bar.example.com"` _and_ `"bar.example.com"`.

                  If a set of Listeners contains Listeners that are not distinct, then those
                  Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                  condition in the Listener Status to "True".

                  Implementations MAY choose to accept a Gateway with some Conflicted
                  Listeners only if they only accept the partial Listener set that contains
                  no Conflicted Listeners. To put this another way, implementations may
                  accept a partial Listener set only if they throw out *all* the conflicting
                  Listeners. No picking one of the conflicting listeners as the winner.
                  This also means that the Gateway must have at least one non-conflicting
                  Listener in this case, otherwise it violates the requirement that at
                  least one Listener must be present.

                  The implementation MUST set a "ListenersNotValid" condition on the
                  Gateway Status when the Gateway contains Conflicted Listeners whether or
                  not they accept the Gateway. That Condition SHOULD clearly
                  indicate in the Message which Listeners are conflicted, and which are
                  Accepted. Additionally, the Listener status for those listeners SHOULD
                  indicate which Listeners are conflicted and not Accepted.

                  A Gateway's Listeners are considered "compatible" if:

                  1. They are distinct.
                  2. The implementation can serve them in compliance with the Addresses
                     requirement that all Listeners are available on all assigned
                     addresses.

                  Compatible combinations in Extended support are expected to vary across
                  implementations. A combination that is compatible for one implementation
                  may not be compatible for another.

                  For example, an implementation that cannot serve both TCP and UDP listeners
                  on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                  would not consider those cases compatible, even though they are distinct.

                  Note that requests SHOULD match at most one Listener. For example, if
                  Listeners are defined for "foo.example.com" and "*.example.com", a
                  request to "foo.example.com" SHOULD only be routed using routes attached
                  to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                  This concept is known as "Listener Isolation". Implementations that do
                  not support Listener Isolation MUST clearly document this.

                  Implementations MAY merge separate Gateways onto a single set of
                  Addresses if all Listeners across all Gateways are compatible.

                  Support: Core
                items:
                  description: |-
                    Listener embodies the concept of a logical endpoint where a Gateway accepts
                    network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: |-
                        AllowedRoutes defines the types of routes that MAY be attached to a
                        Listener and the trusted namespaces where those Route resources MAY be
                        present.

                        Although a client request may match multiple route rules, only one rule
                        may ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria:

                        * The most specific match as defined by the Route type.
                        * The oldest Route based on creation timestamp. For example, a Route with
                          a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                          a Route with a creation timestamp of "2020-09-08 01:02:04".
                        * If everything else is equivalent, the Route appearing first in
                          alphabetical order (namespace/name) should be given precedence. For
                          example, foo/bar is given precedence over foo/baz.

                        All valid rules within a Route attached to this Listener should be
                        implemented. Invalid Route rules can be ignored (sometimes that will mean
                        the full Route). If a Route rule transitions from valid to invalid,
                        support for that Route rule should be dropped to ensure consistency. For
                        example, even if a filter specified by a Route rule is invalid, the rest
                        of the rules within that Route should still be supported.

                        Support: Core
                      properties:
                        kinds:
                          description: |-
                            Kinds specifies the groups and kinds of Routes that are allowed to bind
                            to this Gateway Listener. When unspecified or empty, the kinds of Routes
                            selected are determined using the Listener protocol.

                            A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's Protocol field.
                            If an implementation does not support or recognize this resource type, it
                            MUST set the "ResolvedRefs" condition to False for this Listener with the
                            "InvalidRouteKinds" reason.

                            Support: Core
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: |-
                            Namespaces indicates namespaces from which Routes may be attached to this
                            Listener. This is restricted to the namespace of this Gateway by default.

                            Support: Core
                          properties:
                            from:
                              default: Same
                              description: |-
                                From indicates where Routes will be selected for this Gateway. Possible
                                values are:

                                * All: Routes in all namespaces may be used by this Gateway.
                                * Selector: Routes in namespaces selected by the selector may be used by
                                  this Gateway.
                                * Same: Only Routes in the same namespace may be used by this Gateway.

                                Support: Core
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: |-
                                Selector must be specified when From is set to "Selector". In that case,
                                only Routes in Namespaces matching this Selector will be selected by this
                                Gateway. This field is ignored for other values of "From".

                                Support: Core
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: |-
                        Hostname specifies the virtual hostname to match for protocol types that
                        define this concept. When unspecified, all hostnames are matched. This
                        field is ignored for protocols that don't require hostname based
                        matching.

                        Implementations MUST apply Hostname matching appropriately for each of
                        the following protocols:

                        * TLS: The Listener Hostname MUST match the SNI.
                        * HTTP: The Listener Hostname MUST match the Host header of the request.
                        * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                          protocol layers as described above. If an implementation does not
                          ensure that both the SNI and Host header match the Listener hostname,
                          it MUST clearly document that.

                        For HTTPRoute and TLSRoute resources, there is an interaction with the
                        `spec.hostnames` array. When both listener and route specify hostnames,
                        there MUST be an intersection between the values for a Route to be
                        accepted. For more information, refer to the Route specific Hostnames
                        documentation.

                        Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com` would match
                        both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: |-
                        Name is the name of the Listener. This name MUST be unique within a
                        Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: |-
                        Port is the network port. Multiple listeners may use the
                        same port, subject to the Listener compatibility rules.

                        Support: Core
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: |-
                        Protocol specifies the network protocol this listener expects to receive.

                        Support: Core
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: |-
                        TLS is the TLS configuration for the Listener. This field is required if
                        the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                        if the Protocol field is "HTTP", "TCP", or "UDP".

                        The association of SNIs to Certificate defined in GatewayTLSConfig is
                        defined based on the Hostname field for this listener.

                        The GatewayClass MUST use the longest matching SNI out of all
                        available certificates for any TLS handshake.

                        Support: Core
                      properties:
                        certificateRefs:
                          description: |-
                            CertificateRefs contains a series of references to Kubernetes objects that
                            contains TLS certificates and private keys. These certificates are used to
                            establish a TLS handshake for requests that match the hostname of the
                            associated listener.

                            A single CertificateRef to a Kubernetes Secret has "Core" support.
                            Implementations MAY choose to support attaching multiple certificates to
                            a Listener, but this behavior is implementation-specific.

                            References to a resource in different namespace are invalid UNLESS there
                            is a ReferenceGrant in the target namespace that allows the certificate
                            to be attached. If a ReferenceGrant does not allow this reference, the
                            "ResolvedRefs" condition MUST be set to False for this listener with the
                            "RefNotPermitted" reason.

                            This field is required to have at least one element when the mode is set
                            to "Terminate" (default) and is optional otherwise.

                            CertificateRefs can reference to standard Kubernetes resources, i.e.
                            Secret, or implementation-specific custom resources.

                            Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls

                            Support: Implementation-specific (More than one reference or other resource types)
                          items:
                            description: |-
                              SecretObjectReference identifies an API object including its namespace,
                              defaulting to Secret.

                              The API object must be valid in the cluster; the Group and Kind must
                              be registered in the cluster for this reference to be valid.

                              References to objects with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate Conditions set
                              on the containing object.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.

                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.

                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        frontendValidation:
                          description: |+
                            FrontendValidation holds configuration information for validating the frontend (client).
                            Setting this field will require clients to send a client certificate
                            required for validation during the TLS handshake. In browsers this may result in a dialog appearing
                            that requests a user to specify the client certificate.
                            The maximum depth of a certificate chain accepted in verification is Implementation specific.

                            Support: Extended

                          properties:
                            caCertificateRefs:
                              description: |-
                                CACertificateRefs contains one or more references to
                                Kubernetes objects that contain TLS certificates of
                                the Certificate Authorities that can be used
                                as a trust anchor to validate the certificates presented by the client.

                                A single CA certificate reference to a Kubernetes ConfigMap
                                has "Core" support.
                                Implementations MAY choose to support attaching multiple CA certificates to
                                a Listener, but this behavior is implementation-specific.

                                Support: Core - A single reference to a Kubernetes ConfigMap
                                with the CA certificate in a key named `ca.crt`.

                                Support: Implementation-specific (More than one reference, or other kinds
                                of resources).

                                References to a resource in a different namespace are invalid UNLESS there
                                is a ReferenceGrant in the target namespace that allows the certificate
                                to be attached. If a ReferenceGrant does not allow this reference, the
                                "ResolvedRefs" condition MUST be set to False for this listener with the
                                "RefNotPermitted" reason.
                              items:
                                description: |-
                                  ObjectReference identifies an API object including its namespace.

                                  The API object must be valid in the cluster; the Group and Kind must
                                  be registered in the cluster for this reference to be valid.

                                  References to objects with invalid Group and Kind are not valid, and must
                                  be rejected by the implementation, with appropriate Conditions set
                                  on the containing object.
                                properties:
                                  group:
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: Kind is kind of the referent. For
                                      example "ConfigMap" or "Service".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the referenced object. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - group
                                - kind
                                - name
                                type: object
                              maxItems: 8
                              minItems: 1
                              type: array
                          type: object
                        mode:
                          default: Terminate
                          description: |-
                            Mode defines the TLS behavior for the TLS session initiated by the client.
                            There are two possible modes:

                            - Terminate: The TLS session between the downstream client and the
                              Gateway is terminated at the Gateway. This mode requires certificates
                              to be specified in some way, such as populating the certificateRefs
                              field.
                            - Passthrough: The TLS session is NOT terminated by the Gateway. This
                              implies that the Gateway can't decipher the TLS stream except for
                              the ClientHello message of the TLS protocol. The certificateRefs field
                              is ignored in this mode.

                            Support: Core
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: |-
                              AnnotationValue is the value of an annotation in Gateway API. This is used
                              for validation of maps such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation in that case is based
                              on the entire size of the annotations struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: |-
                            Options are a list of key/value pairs to enable extended TLS
                            configuration for each implementation. For example, configuring the
                            minimum TLS version or supported cipher suites.

                            A set of common keys MAY be defined by the API in the future. To avoid
                            any ambiguity, implementation-specific definitions MUST use
                            domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by Gateway API.

                            Support: Implementation-specific
                          maxProperties: 16
                          type: object
                      type: object
                      x-kubernetes-validations:
                      - message: certificateRefs or options must be specified when
                          mode is Terminate
                        rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                          > 0 || size(self.options) > 0 : true'
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: tls must not be specified for protocols ['HTTP', 'TCP',
                    'UDP']
                  rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'', ''UDP''] ?
                    !has(l.tls) : true)'
                - message: tls mode must be Terminate for protocol HTTPS
                  rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls)) ? (l.tls.mode
                    == '''' || l.tls.mode == ''Terminate'') : true)'
                - message: hostname must not be specified for protocols ['TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ? (!has(l.hostname)
                    || l.hostname == '''') : true)'
                - message: Listener name must be unique within the Gateway
                  rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                - message: Combination of port, protocol and hostname must be unique
                    for each listener
                  rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol
                    == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname
                    == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))'
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses lists the network addresses that have been bound to the
                  Gateway.

                  This list may differ from the addresses provided in the spec under some
                  conditions:

                    * no addresses are specified, all addresses are dynamically assigned
                    * a combination of specified and dynamic addresses are assigned
                    * a specified address was unusable (e.g. already in use)

                items:
                  description: GatewayStatusAddress describes a network address that
                    is bound to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.

                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the Gateway.

                  Implementations should prefer to express Gateway conditions
                  using the `GatewayConditionType` and `GatewayConditionReason`
                  constants so that operators and tools can converge on a common
                  vocabulary to describe Gateway state.

                  Known condition types are:

                  * "Accepted"
                  * "Programmed"
                  * "Ready"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: |-
                        AttachedRoutes represents the total number of Routes that have been
                        successfully attached to this Listener.

                        Successful attachment of a Route to a Listener is based solely on the
                        combination of the AllowedRoutes field on the corresponding Listener
                        and the Route's ParentRefs field. A Route is successfully attached to
                        a Listener when it is selected by the Listener's AllowedRoutes field
                        AND the Route has a valid ParentRef selecting the whole Gateway
                        resource or a specific Listener as a parent resource (more detail on
                        attachment semantics can be found in the documentation on the various
                        Route kinds ParentRefs fields). Listener or Route status does not impact
                        successful attachment, i.e. the AttachedRoutes field count MUST be set
                        for Listeners with condition Accepted: false and MUST count successfully
                        attached Routes that may themselves have Accepted: false conditions.

                        Uses for this field include troubleshooting Route attachment and
                        measuring blast radius/impact of changes to a Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: |-
                        SupportedKinds is the list indicating the Kinds supported by this
                        listener. This MUST represent the kinds an implementation supports for
                        that Listener configuration.

                        If kinds are specified in Spec that are not supported, they MUST NOT
                        appear in this list and an implementation MUST set the "ResolvedRefs"
                        condition to "False" with the "InvalidRouteKinds" reason. If both valid
                        and invalid Route kinds are specified, the implementation MUST
                        reference the valid Route kinds that have been specified.
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          Gateway represents an instance of a service-traffic handling infrastructure
          by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses requested for this Gateway. This is optional and behavior can
                  depend on the implementation. If a value is set in the spec and the
                  requested address is invalid or unavailable, the implementation MUST
                  indicate this in the associated entry in GatewayStatus.Addresses.

                  The Addresses field represents a request for the address(es) on the
                  "outside of the Gateway", that traffic bound for this Gateway will use.
                  This could be the IP address or hostname of an external load balancer or
                  other networking infrastructure, or some other address that traffic will
                  be sent to.

                  If no Addresses are specified, the implementation MAY schedule the
                  Gateway in an implementation-specific manner, assigning an appropriate
                  set of Addresses.

                  The implementation MUST bind all Listeners to every GatewayAddress that
                  it assigns to the Gateway and add a corresponding entry in
                  GatewayStatus.Addresses.

                  Support: Extended

                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.

                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: IPAddress values must be unique
                  rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
                - message: Hostname values must be unique
                  rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
              backendTLS:
                description: |+
                  BackendTLS configures TLS settings for when this Gateway is connecting to
                  backends with TLS.

                  Support: Core

                properties:
                  clientCertificateRef:
                    description: |+
                      ClientCertificateRef is a reference to an object that contains a Client
                      Certificate and the associated private key.

                      References to a resource in different namespace are invalid UNLESS there
                      is a ReferenceGrant in the target namespace that allows the certificate
                      to be attached. If a ReferenceGrant does not allow this reference, the
                      "ResolvedRefs" condition MUST be set to False for this listener with the
                      "RefNotPermitted" reason.

                      ClientCertificateRef can reference to standard Kubernetes resources, i.e.
                      Secret, or implementation-specific custom resources.

                      This setting can be overridden on the service level by use of BackendTLSPolicy.

                      Support: Core

                    properties:
                      group:
                        default: ""
                        description: |-
                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                          When unspecified or empty string, core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Secret
                        description: Kind is kind of the referent. For example "Secret".
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of the referenced object. When unspecified, the local
                          namespace is inferred.

                          Note that when a namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          Support: Core
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                type: object
              gatewayClassName:
                description: |-
                  GatewayClassName used for this Gateway. This is the name of a
                  GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              infrastructure:
                description: |-
                  Infrastructure defines infrastructure level attributes about this Gateway instance.

                  Support: Extended
                properties:
                  annotations:
                    additionalProperties:
                      description: |-
                        AnnotationValue is the value of an annotation in Gateway API. This is used
                        for validation of maps such as TLS options. This roughly matches Kubernetes
                        annotation validation, although the length validation in that case is based
                        on the entire size of the annotations struct.
                      maxLength: 4096
                      minLength: 0
                      type: string
                    description: |-
                      Annotations that SHOULD be applied to any resources created in response to this Gateway.

                      For implementations creating other Kubernetes objects, this should be the `metadata.annotations` field on resources.
                      For other implementations, this refers to any relevant (implementation specific) "annotations" concepts.

                      An implementation may chose to add additional implementation-specific annotations as they see fit.

                      Support: Extended
                    maxProperties: 8
                    type: object
                    x-kubernetes-validations:
                    - message: Annotation keys must be in the form of an optional
                        DNS subdomain prefix followed by a required name segment of
                        up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the annotation key's prefix must be a
                        DNS subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                  labels:
                    additionalProperties:
                      description: |-
                        LabelValue is the value of a label in the Gateway API. This is used for validation
                        of maps such as Gateway infrastructure labels. This matches the Kubernetes
                        label validation rules:
                        * must be 63 characters or less (can be empty),
                        * unless empty, must begin and end with an alphanumeric character ([a-z0-9A-Z]),
                        * could contain dashes (-), underscores (_), dots (.), and alphanumerics between.

                        Valid values include:

                        * MyValue
                        * my.name
                        * 123-my-value
                      maxLength: 63
                      minLength: 0
                      pattern: ^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$
                      type: string
                    description: |-
                      Labels that SHOULD be applied to any resources created in response to this Gateway.

                      For implementations creating other Kubernetes objects, this should be the `metadata.labels` field on resources.
                      For other implementations, this refers to any relevant (implementation specific) "labels" concepts.

                      An implementation may chose to add additional implementation-specific labels as they see fit.

                      If an implementation maps these labels to Pods, or any other resource that would need to be recreated when labels
                      change, it SHOULD clearly warn about this behavior in documentation.

                      Support: Extended
                    maxProperties: 8
                    type: object
                    x-kubernetes-validations:
                    - message: Label keys must be in the form of an optional DNS subdomain
                        prefix followed by a required name segment of up to 63 characters.
                      rule: self.all(key, key.matches(r"""^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$"""))
                    - message: If specified, the label key's prefix must be a DNS
                        subdomain not longer than 253 characters in total.
                      rule: self.all(key, key.split("/")[0].size() < 253)
                  parametersRef:
                    description: |-
                      ParametersRef is a reference to a resource that contains the configuration
                      parameters corresponding to the Gateway. This is optional if the
                      controller does not require any additional configuration.

                      This follows the same semantics as GatewayClass's `parametersRef`, but on a per-Gateway basis

                      The Gateway's GatewayClass may provide its own `parametersRef`. When both are specified,
                      the merging behavior is implementation specific.
                      It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.

                      Support: Implementation-specific
                    properties:
                      group:
                        description: Group is the group of the referent.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: Kind is kind of the referent.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                type: object
              listeners:
                description: |-
                  Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses.
                  At least one Listener MUST be specified.

                  Each Listener in a set of Listeners (for example, in a single Gateway)
                  MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                  exactly one listener. (This section uses "set of Listeners" rather than
                  "Listeners in a single Gateway" because implementations MAY merge configuration
                  from multiple Gateways onto a single data plane, and these rules _also_
                  apply in that case).

                  Practically, this means that each listener in a set MUST have a unique
                  combination of Port, Protocol, and, if supported by the protocol, Hostname.

                  Some combinations of port, protocol, and TLS settings are considered
                  Core support and MUST be supported by implementations based on their
                  targeted conformance profile:

                  HTTP Profile

                  1. HTTPRoute, Port: 80, Protocol: HTTP
                  2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided

                  TLS Profile

                  1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough

                  "Distinct" Listeners have the following property:

                  The implementation can match inbound requests to a single distinct
                  Listener. When multiple Listeners share values for fields (for
                  example, two Listeners with the same Port value), the implementation
                  can match requests to only one of the Listeners using other
                  Listener fields.

                  For example, the following Listener scenarios are distinct:

                  1. Multiple Listeners with the same Port that all use the "HTTP"
                     Protocol that all have unique Hostname values.
                  2. Multiple Listeners with the same Port that use either the "HTTPS" or
                     "TLS" Protocol that all have unique Hostname values.
                  3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                     with the same Protocol has the same Port value.

                  Some fields in the Listener struct have possible values that affect
                  whether the Listener is distinct. Hostname is particularly relevant
                  for HTTP or HTTPS protocols.

                  When using the Hostname value to select between same-Port, same-Protocol
                  Listeners, the Hostname value must be different on each Listener for the
                  Listener to be distinct.

                  When the Listeners are distinct based on Hostname, inbound request
                  hostnames MUST match from the most specific to least specific Hostname
                  values to choose the correct Listener and its associated set of Routes.

                  Exact matches must be processed before wildcard matches, and wildcard
                  matches must be processed before fallback (empty Hostname value)
                  matches. For example, `"foo.example.com"` takes precedence over
                  `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.

                  Additionally, if there are multiple wildcard entries, more specific
                  wildcard entries must be processed before less specific wildcard entries.
                  For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                  The precise definition here is that the higher the number of dots in the
                  hostname to the right of the wildcard character, the higher the precedence.

                  The wildcard character will match any number of characters _and dots_ to
                  the left, however, so `"*.example.com"` will match both
                  `"foo.bar.example.com"` _and_ `"bar.example.com"`.

                  If a set of Listeners contains Listeners that are not distinct, then those
                  Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                  condition in the Listener Status to "True".

                  Implementations MAY choose to accept a Gateway with some Conflicted
                  Listeners only if they only accept the partial Listener set that contains
                  no Conflicted Listeners. To put this another way, implementations may
                  accept a partial Listener set only if they throw out *all* the conflicting
                  Listeners. No picking one of the conflicting listeners as the winner.
                  This also means that the Gateway must have at least one non-conflicting
                  Listener in this case, otherwise it violates the requirement that at
                  least one Listener must be present.

                  The implementation MUST set a "ListenersNotValid" condition on the
                  Gateway Status when the Gateway contains Conflicted Listeners whether or
                  not they accept the Gateway. That Condition SHOULD clearly
                  indicate in the Message which Listeners are conflicted, and which are
                  Accepted. Additionally, the Listener status for those listeners SHOULD
                  indicate which Listeners are conflicted and not Accepted.

                  A Gateway's Listeners are considered "compatible" if:

                  1. They are distinct.
                  2. The implementation can serve them in compliance with the Addresses
                     requirement that all Listeners are available on all assigned
                     addresses.

                  Compatible combinations in Extended support are expected to vary across
                  implementations. A combination that is compatible for one implementation
                  may not be compatible for another.

                  For example, an implementation that cannot serve both TCP and UDP listeners
                  on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                  would not consider those cases compatible, even though they are distinct.

                  Note that requests SHOULD match at most one Listener. For example, if
                  Listeners are defined for "foo.example.com" and "*.example.com", a
                  request to "foo.example.com" SHOULD only be routed using routes attached
                  to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                  This concept is known as "Listener Isolation". Implementations that do
                  not support Listener Isolation MUST clearly document this.

                  Implementations MAY merge separate Gateways onto a single set of
                  Addresses if all Listeners across all Gateways are compatible.

                  Support: Core
                items:
                  description: |-
                    Listener embodies the concept of a logical endpoint where a Gateway accepts
                    network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: |-
                        AllowedRoutes defines the types of routes that MAY be attached to a
                        Listener and the trusted namespaces where those Route resources MAY be
                        present.

                        Although a client request may match multiple route rules, only one rule
                        may ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria:

                        * The most specific match as defined by the Route type.
                        * The oldest Route based on creation timestamp. For example, a Route with
                          a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                          a Route with a creation timestamp of "2020-09-08 01:02:04".
                        * If everything else is equivalent, the Route appearing first in
                          alphabetical order (namespace/name) should be given precedence. For
                          example, foo/bar is given precedence over foo/baz.

                        All valid rules within a Route attached to this Listener should be
                        implemented. Invalid Route rules can be ignored (sometimes that will mean
                        the full Route). If a Route rule transitions from valid to invalid,
                        support for that Route rule should be dropped to ensure consistency. For
                        example, even if a filter specified by a Route rule is invalid, the rest
                        of the rules within that Route should still be supported.

                        Support: Core
                      properties:
                        kinds:
                          description: |-
                            Kinds specifies the groups and kinds of Routes that are allowed to bind
                            to this Gateway Listener. When unspecified or empty, the kinds of Routes
                            selected are determined using the Listener protocol.

                            A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's Protocol field.
                            If an implementation does not support or recognize this resource type, it
                            MUST set the "ResolvedRefs" condition to False for this Listener with the
                            "InvalidRouteKinds" reason.

                            Support: Core
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: |-
                            Namespaces indicates namespaces from which Routes may be attached to this
                            Listener. This is restricted to the namespace of this Gateway by default.

                            Support: Core
                          properties:
                            from:
                              default: Same
                              description: |-
                                From indicates where Routes will be selected for this Gateway. Possible
                                values are:

                                * All: Routes in all namespaces may be used by this Gateway.
                                * Selector: Routes in namespaces selected by the selector may be used by
                                  this Gateway.
                                * Same: Only Routes in the same namespace may be used by this Gateway.

                                Support: Core
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: |-
                                Selector must be specified when From is set to "Selector". In that case,
                                only Routes in Namespaces matching this Selector will be selected by this
                                Gateway. This field is ignored for other values of "From".

                                Support: Core
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: |-
                        Hostname specifies the virtual hostname to match for protocol types that
                        define this concept. When unspecified, all hostnames are matched. This
                        field is ignored for protocols that don't require hostname based
                        matching.

                        Implementations MUST apply Hostname matching appropriately for each of
                        the following protocols:

                        * TLS: The Listener Hostname MUST match the SNI.
                        * HTTP: The Listener Hostname MUST match the Host header of the request.
                        * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                          protocol layers as described above. If an implementation does not
                          ensure that both the SNI and Host header match the Listener hostname,
                          it MUST clearly document that.

                        For HTTPRoute and TLSRoute resources, there is an interaction with the
                        `spec.hostnames` array. When both listener and route specify hostnames,
                        there MUST be an intersection between the values for a Route to be
                        accepted. For more information, refer to the Route specific Hostnames
                        documentation.

                        Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com` would match
                        both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: |-
                        Name is the name of the Listener. This name MUST be unique within a
                        Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: |-
                        Port is the network port. Multiple listeners may use the
                        same port, subject to the Listener compatibility rules.

                        Support: Core
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: |-
                        Protocol specifies the network protocol this listener expects to receive.

                        Support: Core
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: |-
                        TLS is the TLS configuration for the Listener. This field is required if
                        the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                        if the Protocol field is "HTTP", "TCP", or "UDP".

                        The association of SNIs to Certificate defined in GatewayTLSConfig is
                        defined based on the Hostname field for this listener.

                        The GatewayClass MUST use the longest matching SNI out of all
                        available certificates for any TLS handshake.

                        Support: Core
                      properties:
                        certificateRefs:
                          description: |-
                            CertificateRefs contains a series of references to Kubernetes objects that
                            contains TLS certificates and private keys. These certificates are used to
                            establish a TLS handshake for requests that match the hostname of the
                            associated listener.

                            A single CertificateRef to a Kubernetes Secret has "Core" support.
                            Implementations MAY choose to support attaching multiple certificates to
                            a Listener, but this behavior is implementation-specific.

                            References to a resource in different namespace are invalid UNLESS there
                            is a ReferenceGrant in the target namespace that allows the certificate
                            to be attached. If a ReferenceGrant does not allow this reference, the
                            "ResolvedRefs" condition MUST be set to False for this listener with the
                            "RefNotPermitted" reason.

                            This field is required to have at least one element when the mode is set
                            to "Terminate" (default) and is optional otherwise.

                            CertificateRefs can reference to standard Kubernetes resources, i.e.
                            Secret, or implementation-specific custom resources.

                            Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls

                            Support: Implementation-specific (More than one reference or other resource types)
                          items:
                            description: |-
                              SecretObjectReference identifies an API object including its namespace,
                              defaulting to Secret.

                              The API object must be valid in the cluster; the Group and Kind must
                              be registered in the cluster for this reference to be valid.

                              References to objects with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate Conditions set
                              on the containing object.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.

                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.

                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        frontendValidation:
                          description: |+
                            FrontendValidation holds configuration information for validating the frontend (client).
                            Setting this field will require clients to send a client certificate
                            required for validation during the TLS handshake. In browsers this may result in a dialog appearing
                            that requests a user to specify the client certificate.
                            The maximum depth of a certificate chain accepted in verification is Implementation specific.

                            Support: Extended

                          properties:
                            caCertificateRefs:
                              description: |-
                                CACertificateRefs contains one or more references to
                                Kubernetes objects that contain TLS certificates of
                                the Certificate Authorities that can be used
                                as a trust anchor to validate the certificates presented by the client.

                                A single CA certificate reference to a Kubernetes ConfigMap
                                has "Core" support.
                                Implementations MAY choose to support attaching multiple CA certificates to
                                a Listener, but this behavior is implementation-specific.

                                Support: Core - A single reference to a Kubernetes ConfigMap
                                with the CA certificate in a key named `ca.crt`.

                                Support: Implementation-specific (More than one reference, or other kinds
                                of resources).

                                References to a resource in a different namespace are invalid UNLESS there
                                is a ReferenceGrant in the target namespace that allows the certificate
                                to be attached. If a ReferenceGrant does not allow this reference, the
                                "ResolvedRefs" condition MUST be set to False for this listener with the
                                "RefNotPermitted" reason.
                              items:
                                description: |-
                                  ObjectReference identifies an API object including its namespace.

                                  The API object must be valid in the cluster; the Group and Kind must
                                  be registered in the cluster for this reference to be valid.

                                  References to objects with invalid Group and Kind are not valid, and must
                                  be rejected by the implementation, with appropriate Conditions set
                                  on the containing object.
                                properties:
                                  group:
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    description: Kind is kind of the referent. For
                                      example "ConfigMap" or "Service".
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the referenced object. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - group
                                - kind
                                - name
                                type: object
                              maxItems: 8
                              minItems: 1
                              type: array
                          type: object
                        mode:
                          default: Terminate
                          description: |-
                            Mode defines the TLS behavior for the TLS session initiated by the client.
                            There are two possible modes:

                            - Terminate: The TLS session between the downstream client and the
                              Gateway is terminated at the Gateway. This mode requires certificates
                              to be specified in some way, such as populating the certificateRefs
                              field.
                            - Passthrough: The TLS session is NOT terminated by the Gateway. This
                              implies that the Gateway can't decipher the TLS stream except for
                              the ClientHello message of the TLS protocol. The certificateRefs field
                              is ignored in this mode.

                            Support: Core
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: |-
                              AnnotationValue is the value of an annotation in Gateway API. This is used
                              for validation of maps such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation in that case is based
                              on the entire size of the annotations struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: |-
                            Options are a list of key/value pairs to enable extended TLS
                            configuration for each implementation. For example, configuring the
                            minimum TLS version or supported cipher suites.

                            A set of common keys MAY be defined by the API in the future. To avoid
                            any ambiguity, implementation-specific definitions MUST use
                            domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by Gateway API.

                            Support: Implementation-specific
                          maxProperties: 16
                          type: object
                      type: object
                      x-kubernetes-validations:
                      - message: certificateRefs or options must be specified when
                          mode is Terminate
                        rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                          > 0 || size(self.options) > 0 : true'
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: tls must not be specified for protocols ['HTTP', 'TCP',
                    'UDP']
                  rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'', ''UDP''] ?
                    !has(l.tls) : true)'
                - message: tls mode must be Terminate for protocol HTTPS
                  rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls)) ? (l.tls.mode
                    == '''' || l.tls.mode == ''Terminate'') : true)'
                - message: hostname must not be specified for protocols ['TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ? (!has(l.hostname)
                    || l.hostname == '''') : true)'
                - message: Listener name must be unique within the Gateway
                  rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                - message: Combination of port, protocol and hostname must be unique
                    for each listener
                  rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol
                    == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname
                    == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))'
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses lists the network addresses that have been bound to the
                  Gateway.

                  This list may differ from the addresses provided in the spec under some
                  conditions:

                    * no addresses are specified, all addresses are dynamically assigned
                    * a combination of specified and dynamic addresses are assigned
                    * a specified address was unusable (e.g. already in use)

                items:
                  description: GatewayStatusAddress describes a network address that
                    is bound to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.

                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the Gateway.

                  Implementations should prefer to express Gateway conditions
                  using the `GatewayConditionType` and `GatewayConditionReason`
                  constants so that operators and tools can converge on a common
                  vocabulary to describe Gateway state.

                  Known condition types are:

                  * "Accepted"
                  * "Programmed"
                  * "Ready"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: |-
                        AttachedRoutes represents the total number of Routes that have been
                        successfully attached to this Listener.

                        Successful attachment of a Route to a Listener is based solely on the
                        combination of the AllowedRoutes field on the corresponding Listener
                        and the Route's ParentRefs field. A Route is successfully attached to
                        a Listener when it is selected by the Listener's AllowedRoutes field
                        AND the Route has a valid ParentRef selecting the whole Gateway
                        resource or a specific Listener as a parent resource (more detail on
                        attachment semantics can be found in the documentation on the various
                        Route kinds ParentRefs fields). Listener or Route status does not impact
                        successful attachment, i.e. the AttachedRoutes field count MUST be set
                        for Listeners with condition Accepted: false and MUST count successfully
                        attached Routes that may themselves have Accepted: false conditions.

                        Uses for this field include troubleshooting Route attachment and
                        measuring blast radius/impact of changes to a Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: |-
                        SupportedKinds is the list indicating the Kinds supported by this
                        listener. This MUST represent the kinds an implementation supports for
                        that Listener configuration.

                        If kinds are specified in Spec that are not supported, they MUST NOT
                        appear in this list and an implementation MUST set the "ResolvedRefs"
                        condition to "False" with the "InvalidRouteKinds" reason. If both valid
                        and invalid Route kinds are specified, the implementation MUST
                        reference the valid Route kinds that have been specified.
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: gateways.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
    - gw
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting edge load balancer. See more details
              at: https://istio.io/docs/reference/config/networking/gateway.html'
            properties:
              selector:
                additionalProperties:
                  type: string
                description: One or more labels that indicate a specific set of pods/VMs
                  on which this gateway configuration should be applied.
                type: object
              servers:
                description: A list of server specifications.
                items:
                  properties:
                    bind:
                      description: The ip or the Unix domain socket to which the listener
                        should be bound to.
                      type: string
                    defaultEndpoint:
                      type: string
                    hosts:
                      description: One or more hosts exposed by this gateway.
                      items:
                        type: string
                      type: array
                    name:
                      description: An optional name of the server, when set must be
                        unique across all servers.
                      type: string
                    port:
                      description: The Port on which the proxy should listen for incoming
                        connections.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - number
                      - protocol
                      - name
                      type: object
                    tls:
                      description: Set of TLS related options that govern the server's
                        behavior.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  - hosts
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting edge load balancer. See more details
              at: https://istio.io/docs/reference/config/networking/gateway.html'
            properties:
              selector:
                additionalProperties:
                  type: string
                description: One or more labels that indicate a specific set of pods/VMs
                  on which this gateway configuration should be applied.
                type: object
              servers:
                description: A list of server specifications.
                items:
                  properties:
                    bind:
                      description: The ip or the Unix domain socket to which the listener
                        should be bound to.
                      type: string
                    defaultEndpoint:
                      type: string
                    hosts:
                      description: One or more hosts exposed by this gateway.
                      items:
                        type: string
                      type: array
                    name:
                      description: An optional name of the server, when set must be
                        unique across all servers.
                      type: string
                    port:
                      description: The Port on which the proxy should listen for incoming
                        connections.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - number
                      - protocol
                      - name
                      type: object
                    tls:
                      description: Set of TLS related options that govern the server's
                        behavior.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  - hosts
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting edge load balancer. See more details
              at: https://istio.io/docs/reference/config/networking/gateway.html'
            properties:
              selector:
                additionalProperties:
                  type: string
                description: One or more labels that indicate a specific set of pods/VMs
                  on which this gateway configuration should be applied.
                type: object
              servers:
                description: A list of server specifications.
                items:
                  properties:
                    bind:
                      description: The ip or the Unix domain socket to which the listener
                        should be bound to.
                      type: string
                    defaultEndpoint:
                      type: string
                    hosts:
                      description: One or more hosts exposed by this gateway.
                      items:
                        type: string
                      type: array
                    name:
                      description: An optional name of the server, when set must be
                        unique across all servers.
                      type: string
                    port:
                      description: The Port on which the proxy should listen for incoming
                        connections.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - number
                      - protocol
                      - name
                      type: object
                    tls:
                      description: Set of TLS related options that govern the server's
                        behavior.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  - hosts
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: grpcroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GRPCRoute
    listKind: GRPCRouteList
    plural: grpcroutes
    singular: grpcroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GRPCRoute provides a way to route gRPC requests. This includes the capability
          to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests will be routed.

          GRPCRoute falls under extended support within the Gateway API. Within the
          following specification, the word "MUST" indicates that an implementation
          supporting GRPCRoute must conform to the indicated requirement, but an
          implementation not supporting this route type need not follow the requirement
          unless explicitly indicated.

          Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
          accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
          ALPN. If the implementation does not support this, then it MUST set the
          "Accepted" condition to "False" for the affected listener with a reason of
          "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
          with an upgrade from HTTP/1.

          Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
          support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
          upgrade from HTTP/1.1, i.e. with prior knowledge
          (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
          does not support this, then it MUST set the "Accepted" condition to "False"
          for the affected listener with a reason of "UnsupportedProtocol".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames to match against the GRPC
                  Host header to select a GRPCRoute to process the request. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:

                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label MUST appear by itself as the first label.

                  If a hostname is specified by both the Listener and GRPCRoute, there
                  MUST be at least one intersecting hostname for the GRPCRoute to be
                  attached to the Listener. For example:

                  * A Listener with `test.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.

                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                  If both the Listener and GRPCRoute have specified hostnames, any
                  GRPCRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  GRPCRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` MUST NOT be considered for a match.

                  If both the Listener and GRPCRoute have specified hostnames, and none
                  match with the criteria above, then the GRPCRoute MUST NOT be accepted by
                  the implementation. The implementation MUST raise an 'Accepted' Condition
                  with a status of `False` in the corresponding RouteParentStatus.

                  If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
                  Listener and that listener already has another Route (B) of the other
                  type attached and the intersection of the hostnames of A and B is
                  non-empty, then the implementation MUST accept exactly one of these two
                  routes, determined by the following criteria, in order:

                  * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by
                    "{namespace}/{name}".

                  The rejected Route MUST raise an 'Accepted' condition with a status of
                  'False' in the corresponding RouteParentStatus.

                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:

                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.

                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).

                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: |+
                  Rules are a list of GRPC matchers, filters and actions.

                items:
                  description: |-
                    GRPCRouteRule defines the semantics for matching a gRPC request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.

                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.

                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive an `UNAVAILABLE` status.

                        See the GRPCBackendRef definition for the rules about what makes a single
                        GRPCBackendRef invalid.

                        When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive an `UNAVAILABLE` status.

                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                        Implementations may choose how that 50 percent is determined.

                        Support: Core for Kubernetes Service

                        Support: Implementation-specific for any other resource

                        Support for weight: Core
                      items:
                        description: |-
                          GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level MUST be executed if and only if the
                              request is being forwarded to the backend defined here.

                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in GRPCRouteRule.)
                            items:
                              description: |-
                                GRPCRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.

                                    Support: Implementation-specific

                                    This filter can be used multiple times within the same rule.
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.

                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |+
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.

                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.

                                    Support: Extended

                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.

                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.

                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.

                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.

                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.

                                        Support: Extended for Kubernetes Service

                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".

                                            Defaults to "Service" when not specified.

                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.

                                            Support: Core (Services with a type other than ExternalName)

                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.

                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.

                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                    fraction:
                                      description: |+
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                      x-kubernetes-validations:
                                      - message: numerator must be less than or equal
                                          to denominator
                                        rule: self.numerator <= self.denominator
                                    percent:
                                      description: |+
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Only one of percent or fraction may be
                                      specified in HTTPRequestMirrorFilter
                                    rule: '!(has(self.percent) && has(self.fraction))'
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.

                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |+
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:

                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations supporting GRPCRoute MUST support core filters.

                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.

                                    - Implementation-specific: Filters that are defined and supported by specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` MUST be set to
                                      "ExtensionRef" for custom filters.

                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.

                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.

                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.

                        The effects of ordering of multiple behaviors are currently unspecified.
                        This can change in the future based on feedback during the alpha stage.

                        Conformance-levels at this level are defined based on the type of filter:

                        - ALL core filters MUST be supported by all implementations that support
                          GRPCRoute.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.

                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.

                        If an implementation can not support a combination of filters, it must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.

                        Support: Core
                      items:
                        description: |-
                          GRPCRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. GRPCRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.

                              Support: Implementation-specific

                              This filter can be used multiple times within the same rule.
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.

                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |+
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.

                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.

                              Support: Extended

                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.

                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.

                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.

                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.

                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.

                                  Support: Extended for Kubernetes Service

                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".

                                      Defaults to "Service" when not specified.

                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.

                                      Support: Core (Services with a type other than ExternalName)

                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              fraction:
                                description: |+
                                  Fraction represents the fraction of requests that should be
                                  mirrored to BackendRef.

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                properties:
                                  denominator:
                                    default: 100
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  numerator:
                                    format: int32
                                    minimum: 0
                                    type: integer
                                required:
                                - numerator
                                type: object
                                x-kubernetes-validations:
                                - message: numerator must be less than or equal to
                                    denominator
                                  rule: self.numerator <= self.denominator
                              percent:
                                description: |+
                                  Percent represents the percentage of requests that should be
                                  mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                  requests) and its maximum value is 100 (indicating 100% of requests).

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                format: int32
                                maximum: 100
                                minimum: 0
                                type: integer
                            required:
                            - backendRef
                            type: object
                            x-kubernetes-validations:
                            - message: Only one of percent or fraction may be specified
                                in HTTPRequestMirrorFilter
                              rule: '!(has(self.percent) && has(self.fraction))'
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.

                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |+
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:

                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations supporting GRPCRoute MUST support core filters.

                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.

                              - Implementation-specific: Filters that are defined and supported by specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` MUST be set to
                                "ExtensionRef" for custom filters.

                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.

                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.

                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                    matches:
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        gRPC requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.

                        For example, take the following matches configuration:

                        ```
                        matches:
                        - method:
                            service: foo.bar
                          headers:
                            values:
                              version: 2
                        - method:
                            service: foo.bar.v2
                        ```

                        For a request to match against this rule, it MUST satisfy
                        EITHER of the two conditions:

                        - service of foo.bar AND contains the header `version: 2`
                        - service of foo.bar.v2

                        See the documentation for GRPCRouteMatch on how to specify multiple
                        match conditions to be ANDed together.

                        If no matches are specified, the implementation MUST match every gRPC request.

                        Proxy or Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing on
                        ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number of:

                        * Characters in a matching non-wildcard hostname.
                        * Characters in a matching hostname.
                        * Characters in a matching service.
                        * Characters in a matching method.
                        * Header matches.

                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:

                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".

                        If ties still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching rule meeting
                        the above criteria.
                      items:
                        description: |-
                          GRPCRouteMatch defines the predicate used to match requests to a given
                          action. Multiple match types are ANDed together, i.e. the match will
                          evaluate to true only if all conditions are satisfied.

                          For example, the match below will match a gRPC request only if its service
                          is `foo` AND it contains the `version: v1` header:

                          ```
                          matches:
                            - method:
                              type: Exact
                              service: "foo"
                              headers:
                            - name: "version"
                              value "v1"

                          ```
                        properties:
                          headers:
                            description: |-
                              Headers specifies gRPC request header matchers. Multiple match values are
                              ANDed together, meaning, a request MUST match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the gRPC Header to be matched.

                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies a gRPC request service/method matcher. If this field is
                              not specified, all services and methods will match.
                            properties:
                              method:
                                description: |-
                                  Value of the method to match against. If left empty or omitted, will
                                  match all services.

                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              service:
                                description: |-
                                  Value of the service to match against. If left empty or omitted, will
                                  match any service.

                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: |-
                                  Type specifies how to match against the service and/or method.
                                  Support: Core (Exact with service and method specified)

                                  Support: Implementation-specific (Exact with method specified but no service specified)

                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: One or both of 'service' or 'method' must be
                                specified
                              rule: 'has(self.type) ? has(self.service) || has(self.method)
                                : true'
                            - message: service must only contain valid characters
                                (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""):
                                true'
                            - message: method must only contain valid characters (matching
                                ^[A-Za-z_][A-Za-z_0-9]*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""):
                                true'
                        type: object
                      maxItems: 8
                      type: array
                    name:
                      description: |
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.

                        Support: Extended

                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.

                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.

                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.

                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.

                                Support: Core for "Session" type

                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.

                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.

                            Support: Core for "Cookie" type

                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                  type: object
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: While 16 rules and 64 matches per rule are allowed, the
                    total number of matches across all rules in a route must be less
                    than 128
                  rule: '(self.size() > 0 ? (has(self[0].matches) ? self[0].matches.size()
                    : 0) : 0) + (self.size() > 1 ? (has(self[1].matches) ? self[1].matches.size()
                    : 0) : 0) + (self.size() > 2 ? (has(self[2].matches) ? self[2].matches.size()
                    : 0) : 0) + (self.size() > 3 ? (has(self[3].matches) ? self[3].matches.size()
                    : 0) : 0) + (self.size() > 4 ? (has(self[4].matches) ? self[4].matches.size()
                    : 0) : 0) + (self.size() > 5 ? (has(self[5].matches) ? self[5].matches.size()
                    : 0) : 0) + (self.size() > 6 ? (has(self[6].matches) ? self[6].matches.size()
                    : 0) : 0) + (self.size() > 7 ? (has(self[7].matches) ? self[7].matches.size()
                    : 0) : 0) + (self.size() > 8 ? (has(self[8].matches) ? self[8].matches.size()
                    : 0) : 0) + (self.size() > 9 ? (has(self[9].matches) ? self[9].matches.size()
                    : 0) : 0) + (self.size() > 10 ? (has(self[10].matches) ? self[10].matches.size()
                    : 0) : 0) + (self.size() > 11 ? (has(self[11].matches) ? self[11].matches.size()
                    : 0) : 0) + (self.size() > 12 ? (has(self[12].matches) ? self[12].matches.size()
                    : 0) : 0) + (self.size() > 13 ? (has(self[13].matches) ? self[13].matches.size()
                    : 0) : 0) + (self.size() > 14 ? (has(self[14].matches) ? self[14].matches.size()
                    : 0) : 0) + (self.size() > 15 ? (has(self[15].matches) ? self[15].matches.size()
                    : 0) : 0) <= 128'
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.

                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:

                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.

                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:

                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.

                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.

                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.

                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:

                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.

                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.

                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:

                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.

                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).

                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: |+
                  Rules are a list of HTTP matchers, filters and actions.

                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.

                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.

                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.

                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.

                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.

                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.

                        When a HTTPBackendRef refers to a Service that has no ready endpoints,
                        implementations SHOULD return a 503 for requests to that backend instead.
                        If an implementation chooses to do this, all of the above rules for 500 responses
                        MUST also apply for responses that return a 503.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.

                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.

                                    This filter can be used multiple times within the same rule.

                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.

                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |+
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.

                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.

                                    Support: Extended

                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.

                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.

                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.

                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.

                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.

                                        Support: Extended for Kubernetes Service

                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".

                                            Defaults to "Service" when not specified.

                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.

                                            Support: Core (Services with a type other than ExternalName)

                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.

                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.

                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                    fraction:
                                      description: |+
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                      x-kubernetes-validations:
                                      - message: numerator must be less than or equal
                                          to denominator
                                        rule: self.numerator <= self.denominator
                                    percent:
                                      description: |+
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Only one of percent or fraction may be
                                      specified in HTTPRequestMirrorFilter
                                    rule: '!(has(self.percent) && has(self.fraction))'
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.

                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.

                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.

                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".

                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.

                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.

                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.

                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:

                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.

                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:

                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.

                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.

                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.

                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.

                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.

                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.

                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.

                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.

                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.

                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:

                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.

                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.

                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.

                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.

                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.

                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.

                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.

                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.

                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.

                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".

                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.

                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.

                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.

                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.

                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.

                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.

                        Conformance-levels at this level are defined based on the type of filter:

                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.

                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.

                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.

                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.

                              This filter can be used multiple times within the same rule.

                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.

                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |+
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.

                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.

                              Support: Extended

                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.

                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.

                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.

                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.

                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.

                                  Support: Extended for Kubernetes Service

                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".

                                      Defaults to "Service" when not specified.

                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.

                                      Support: Core (Services with a type other than ExternalName)

                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              fraction:
                                description: |+
                                  Fraction represents the fraction of requests that should be
                                  mirrored to BackendRef.

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                properties:
                                  denominator:
                                    default: 100
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  numerator:
                                    format: int32
                                    minimum: 0
                                    type: integer
                                required:
                                - numerator
                                type: object
                                x-kubernetes-validations:
                                - message: numerator must be less than or equal to
                                    denominator
                                  rule: self.numerator <= self.denominator
                              percent:
                                description: |+
                                  Percent represents the percentage of requests that should be
                                  mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                  requests) and its maximum value is 100 (indicating 100% of requests).

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                format: int32
                                maximum: 100
                                minimum: 0
                                type: integer
                            required:
                            - backendRef
                            type: object
                            x-kubernetes-validations:
                            - message: Only one of percent or fraction may be specified
                                in HTTPRequestMirrorFilter
                              rule: '!(has(self.percent) && has(self.fraction))'
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.

                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.

                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.

                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".

                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.

                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.

                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.

                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:

                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.

                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:

                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.

                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.

                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.

                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.

                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.

                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.

                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.

                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.

                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.

                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:

                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.

                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.

                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.

                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.

                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.

                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.

                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.

                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.

                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.

                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".

                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.

                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.

                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.

                        For example, take the following matches configuration:

                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```

                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:

                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`

                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.

                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.

                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:

                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.

                        Note: The precedence of RegularExpression path matches are implementation-specific.

                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:

                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".

                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.

                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\nFor example, the
                          match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n```\nmatch:\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.

                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.

                                    Support: Core (Exact)

                                    Support: Implementation-specific (RegularExpression)

                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.

                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.

                                  Support: Core (Exact, PathPrefix)

                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.

                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).

                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.

                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.

                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.

                                    Support: Extended (Exact)

                                    Support: Implementation-specific (RegularExpression)

                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 64
                      type: array
                    name:
                      description: |
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    retry:
                      description: |+
                        Retry defines the configuration for when to retry an HTTP request.

                        Support: Extended

                      properties:
                        attempts:
                          description: |-
                            Attempts specifies the maxmimum number of times an individual request
                            from the gateway to a backend should be retried.

                            If the maximum number of retries has been attempted without a successful
                            response from the backend, the Gateway MUST return an error.

                            When this field is unspecified, the number of times to attempt to retry
                            a backend request is implementation-specific.

                            Support: Extended
                          type: integer
                        backoff:
                          description: |-
                            Backoff specifies the minimum duration a Gateway should wait between
                            retry attempts and is represented in Gateway API Duration formatting.

                            For example, setting the `rules[].retry.backoff` field to the value
                            `100ms` will cause a backend request to first be retried approximately
                            100 milliseconds after timing out or receiving a response code configured
                            to be retryable.

                            An implementation MAY use an exponential or alternative backoff strategy
                            for subsequent retry attempts, MAY cap the maximum backoff duration to
                            some amount greater than the specified minimum, and MAY add arbitrary
                            jitter to stagger requests, as long as unsuccessful backend requests are
                            not retried before the configured minimum duration.

                            If a Request timeout (`rules[].timeouts.request`) is configured on the
                            route, the entire duration of the initial request and any retry attempts
                            MUST not exceed the Request timeout duration. If any retry attempts are
                            still in progress when the Request timeout duration has been reached,
                            these SHOULD be canceled if possible and the Gateway MUST immediately
                            return a timeout error.

                            If a BackendRequest timeout (`rules[].timeouts.backendRequest`) is
                            configured on the route, any retry attempts which reach the configured
                            BackendRequest timeout duration without a response SHOULD be canceled if
                            possible and the Gateway should wait for at least the specified backoff
                            duration before attempting to retry the backend request again.

                            If a BackendRequest timeout is _not_ configured on the route, retry
                            attempts MAY time out after an implementation default duration, or MAY
                            remain pending until a configured Request timeout or implementation
                            default duration for total request time is reached.

                            When this field is unspecified, the time to wait between retry attempts
                            is implementation-specific.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        codes:
                          description: |-
                            Codes defines the HTTP response status codes for which a backend request
                            should be retried.

                            Support: Extended
                          items:
                            description: |-
                              HTTPRouteRetryStatusCode defines an HTTP response status code for
                              which a backend request should be retried.

                              Implementations MUST support the following status codes as retryable:

                              * 500
                              * 502
                              * 503
                              * 504

                              Implementations MAY support specifying additional discrete values in the
                              500-599 range.

                              Implementations MAY support specifying discrete values in the 400-499 range,
                              which are often inadvisable to retry.

                              <gateway:experimental>
                            maximum: 599
                            minimum: 400
                            type: integer
                          type: array
                      type: object
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.

                        Support: Extended

                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.

                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.

                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.

                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.

                                Support: Core for "Session" type

                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.

                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.

                            Support: Core for "Cookie" type

                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                    timeouts:
                      description: |-
                        Timeouts defines the timeouts that can be configured for an HTTP request.

                        Support: Extended
                      properties:
                        backendRequest:
                          description: |-
                            BackendRequest specifies a timeout for an individual request from the gateway
                            to a backend. This covers the time from when the request first starts being
                            sent from the gateway to when the full response has been received from the backend.

                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.

                            An entire client HTTP transaction with a gateway, covered by the Request timeout,
                            may result in more than one call from the gateway to the destination backend,
                            for example, if automatic retries are supported.

                            The value of BackendRequest must be a Gateway API Duration string as defined by
                            GEP-2257.  When this field is unspecified, its behavior is implementation-specific;
                            when specified, the value of BackendRequest must be no more than the value of the
                            Request timeout (since the Request timeout encompasses the BackendRequest timeout).

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        request:
                          description: |-
                            Request specifies the maximum duration for a gateway to respond to an HTTP request.
                            If the gateway has not been able to respond before this deadline is met, the gateway
                            MUST return a timeout error.

                            For example, setting the `rules.timeouts.request` field to the value `10s` in an
                            `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                            to complete.

                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.

                            This timeout is intended to cover as close to the whole request-response transaction
                            as possible although an implementation MAY choose to start the timeout after the entire
                            request stream has been received instead of immediately after the transaction is
                            initiated by the client.

                            The value of Request is a Gateway API Duration string as defined by GEP-2257. When this
                            field is unspecified, request timeout behavior is implementation-specific.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: backendRequest timeout cannot be longer than request
                          timeout
                        rule: '!(has(self.request) && has(self.backendRequest) &&
                          duration(self.request) != duration(''0s'') && duration(self.backendRequest)
                          > duration(self.request))'
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: While 16 rules and 64 matches per rule are allowed, the
                    total number of matches across all rules in a route must be less
                    than 128
                  rule: '(self.size() > 0 ? self[0].matches.size() : 0) + (self.size()
                    > 1 ? self[1].matches.size() : 0) + (self.size() > 2 ? self[2].matches.size()
                    : 0) + (self.size() > 3 ? self[3].matches.size() : 0) + (self.size()
                    > 4 ? self[4].matches.size() : 0) + (self.size() > 5 ? self[5].matches.size()
                    : 0) + (self.size() > 6 ? self[6].matches.size() : 0) + (self.size()
                    > 7 ? self[7].matches.size() : 0) + (self.size() > 8 ? self[8].matches.size()
                    : 0) + (self.size() > 9 ? self[9].matches.size() : 0) + (self.size()
                    > 10 ? self[10].matches.size() : 0) + (self.size() > 11 ? self[11].matches.size()
                    : 0) + (self.size() > 12 ? self[12].matches.size() : 0) + (self.size()
                    > 13 ? self[13].matches.size() : 0) + (self.size() > 14 ? self[14].matches.size()
                    : 0) + (self.size() > 15 ? self[15].matches.size() : 0) <= 128'
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.

                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:

                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.

                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:

                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.

                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.

                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.

                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:

                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.

                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.

                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:

                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.

                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).

                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: |+
                  Rules are a list of HTTP matchers, filters and actions.

                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.

                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.

                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.

                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.

                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.

                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.

                        When a HTTPBackendRef refers to a Service that has no ready endpoints,
                        implementations SHOULD return a 503 for requests to that backend instead.
                        If an implementation chooses to do this, all of the above rules for 500 responses
                        MUST also apply for responses that return a 503.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.

                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.

                                    This filter can be used multiple times within the same rule.

                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.

                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |+
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.

                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.

                                    Support: Extended

                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.

                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.

                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.

                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.

                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.

                                        Support: Extended for Kubernetes Service

                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".

                                            Defaults to "Service" when not specified.

                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.

                                            Support: Core (Services with a type other than ExternalName)

                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.

                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.

                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                    fraction:
                                      description: |+
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                      x-kubernetes-validations:
                                      - message: numerator must be less than or equal
                                          to denominator
                                        rule: self.numerator <= self.denominator
                                    percent:
                                      description: |+
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).

                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.

                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Only one of percent or fraction may be
                                      specified in HTTPRequestMirrorFilter
                                    rule: '!(has(self.percent) && has(self.fraction))'
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.

                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.

                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.

                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".

                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.

                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.

                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.

                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:

                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.

                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:

                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.

                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.

                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.

                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.

                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.

                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.

                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.

                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.

                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.

                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz

                                        Config:
                                          remove: ["my-header1", "my-header3"]

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.

                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo

                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"

                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:

                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.

                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.

                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.

                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.

                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.

                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.

                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.

                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.

                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.

                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".

                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.

                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.

                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.

                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.

                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.

                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.

                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.

                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.

                        Conformance-levels at this level are defined based on the type of filter:

                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.

                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.

                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.

                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.

                              This filter can be used multiple times within the same rule.

                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.

                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |+
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.

                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.

                              Support: Extended

                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.

                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.

                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.

                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.

                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.

                                  Support: Extended for Kubernetes Service

                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".

                                      Defaults to "Service" when not specified.

                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.

                                      Support: Core (Services with a type other than ExternalName)

                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.

                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                              fraction:
                                description: |+
                                  Fraction represents the fraction of requests that should be
                                  mirrored to BackendRef.

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                properties:
                                  denominator:
                                    default: 100
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  numerator:
                                    format: int32
                                    minimum: 0
                                    type: integer
                                required:
                                - numerator
                                type: object
                                x-kubernetes-validations:
                                - message: numerator must be less than or equal to
                                    denominator
                                  rule: self.numerator <= self.denominator
                              percent:
                                description: |+
                                  Percent represents the percentage of requests that should be
                                  mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                  requests) and its maximum value is 100 (indicating 100% of requests).

                                  Only one of Fraction or Percent may be specified. If neither field
                                  is specified, 100% of requests will be mirrored.

                                format: int32
                                maximum: 100
                                minimum: 0
                                type: integer
                            required:
                            - backendRef
                            type: object
                            x-kubernetes-validations:
                            - message: Only one of percent or fraction may be specified
                                in HTTPRequestMirrorFilter
                              rule: '!(has(self.percent) && has(self.fraction))'
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.

                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.

                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.

                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".

                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.

                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.

                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.

                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:

                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.

                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:

                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.

                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.

                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.

                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.

                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.

                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.

                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.

                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.

                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.

                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz

                                  Config:
                                    remove: ["my-header1", "my-header3"]

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.

                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo

                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"

                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:

                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.

                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.

                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.

                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.

                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.

                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.

                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.

                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.

                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.

                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".

                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.

                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.

                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.

                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.

                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.

                        For example, take the following matches configuration:

                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```

                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:

                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`

                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.

                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.

                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:

                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.

                        Note: The precedence of RegularExpression path matches are implementation-specific.

                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:

                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".

                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.

                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\nFor example, the
                          match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n```\nmatch:\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).

                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.

                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.

                                    Support: Core (Exact)

                                    Support: Implementation-specific (RegularExpression)

                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.

                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.

                                  Support: Core (Exact, PathPrefix)

                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.

                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).

                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.

                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.

                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.

                                    Support: Extended (Exact)

                                    Support: Implementation-specific (RegularExpression)

                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 64
                      type: array
                    name:
                      description: |
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    retry:
                      description: |+
                        Retry defines the configuration for when to retry an HTTP request.

                        Support: Extended

                      properties:
                        attempts:
                          description: |-
                            Attempts specifies the maxmimum number of times an individual request
                            from the gateway to a backend should be retried.

                            If the maximum number of retries has been attempted without a successful
                            response from the backend, the Gateway MUST return an error.

                            When this field is unspecified, the number of times to attempt to retry
                            a backend request is implementation-specific.

                            Support: Extended
                          type: integer
                        backoff:
                          description: |-
                            Backoff specifies the minimum duration a Gateway should wait between
                            retry attempts and is represented in Gateway API Duration formatting.

                            For example, setting the `rules[].retry.backoff` field to the value
                            `100ms` will cause a backend request to first be retried approximately
                            100 milliseconds after timing out or receiving a response code configured
                            to be retryable.

                            An implementation MAY use an exponential or alternative backoff strategy
                            for subsequent retry attempts, MAY cap the maximum backoff duration to
                            some amount greater than the specified minimum, and MAY add arbitrary
                            jitter to stagger requests, as long as unsuccessful backend requests are
                            not retried before the configured minimum duration.

                            If a Request timeout (`rules[].timeouts.request`) is configured on the
                            route, the entire duration of the initial request and any retry attempts
                            MUST not exceed the Request timeout duration. If any retry attempts are
                            still in progress when the Request timeout duration has been reached,
                            these SHOULD be canceled if possible and the Gateway MUST immediately
                            return a timeout error.

                            If a BackendRequest timeout (`rules[].timeouts.backendRequest`) is
                            configured on the route, any retry attempts which reach the configured
                            BackendRequest timeout duration without a response SHOULD be canceled if
                            possible and the Gateway should wait for at least the specified backoff
                            duration before attempting to retry the backend request again.

                            If a BackendRequest timeout is _not_ configured on the route, retry
                            attempts MAY time out after an implementation default duration, or MAY
                            remain pending until a configured Request timeout or implementation
                            default duration for total request time is reached.

                            When this field is unspecified, the time to wait between retry attempts
                            is implementation-specific.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        codes:
                          description: |-
                            Codes defines the HTTP response status codes for which a backend request
                            should be retried.

                            Support: Extended
                          items:
                            description: |-
                              HTTPRouteRetryStatusCode defines an HTTP response status code for
                              which a backend request should be retried.

                              Implementations MUST support the following status codes as retryable:

                              * 500
                              * 502
                              * 503
                              * 504

                              Implementations MAY support specifying additional discrete values in the
                              500-599 range.

                              Implementations MAY support specifying discrete values in the 400-499 range,
                              which are often inadvisable to retry.

                              <gateway:experimental>
                            maximum: 599
                            minimum: 400
                            type: integer
                          type: array
                      type: object
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.

                        Support: Extended

                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.

                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.

                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.

                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.

                                Support: Core for "Session" type

                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.

                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.

                            Support: Core for "Cookie" type

                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                    timeouts:
                      description: |-
                        Timeouts defines the timeouts that can be configured for an HTTP request.

                        Support: Extended
                      properties:
                        backendRequest:
                          description: |-
                            BackendRequest specifies a timeout for an individual request from the gateway
                            to a backend. This covers the time from when the request first starts being
                            sent from the gateway to when the full response has been received from the backend.

                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.

                            An entire client HTTP transaction with a gateway, covered by the Request timeout,
                            may result in more than one call from the gateway to the destination backend,
                            for example, if automatic retries are supported.

                            The value of BackendRequest must be a Gateway API Duration string as defined by
                            GEP-2257.  When this field is unspecified, its behavior is implementation-specific;
                            when specified, the value of BackendRequest must be no more than the value of the
                            Request timeout (since the Request timeout encompasses the BackendRequest timeout).

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        request:
                          description: |-
                            Request specifies the maximum duration for a gateway to respond to an HTTP request.
                            If the gateway has not been able to respond before this deadline is met, the gateway
                            MUST return a timeout error.

                            For example, setting the `rules.timeouts.request` field to the value `10s` in an
                            `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                            to complete.

                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.

                            This timeout is intended to cover as close to the whole request-response transaction
                            as possible although an implementation MAY choose to start the timeout after the entire
                            request stream has been received instead of immediately after the transaction is
                            initiated by the client.

                            The value of Request is a Gateway API Duration string as defined by GEP-2257. When this
                            field is unspecified, request timeout behavior is implementation-specific.

                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: backendRequest timeout cannot be longer than request
                          timeout
                        rule: '!(has(self.request) && has(self.backendRequest) &&
                          duration(self.request) != duration(''0s'') && duration(self.backendRequest)
                          > duration(self.request))'
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: While 16 rules and 64 matches per rule are allowed, the
                    total number of matches across all rules in a route must be less
                    than 128
                  rule: '(self.size() > 0 ? self[0].matches.size() : 0) + (self.size()
                    > 1 ? self[1].matches.size() : 0) + (self.size() > 2 ? self[2].matches.size()
                    : 0) + (self.size() > 3 ? self[3].matches.size() : 0) + (self.size()
                    > 4 ? self[4].matches.size() : 0) + (self.size() > 5 ? self[5].matches.size()
                    : 0) + (self.size() > 6 ? self[6].matches.size() : 0) + (self.size()
                    > 7 ? self[7].matches.size() : 0) + (self.size() > 8 ? self[8].matches.size()
                    : 0) + (self.size() > 9 ? self[9].matches.size() : 0) + (self.size()
                    > 10 ? self[10].matches.size() : 0) + (self.size() > 11 ? self[11].matches.size()
                    : 0) + (self.size() > 12 ? self[12].matches.size() : 0) + (self.size()
                    > 13 ? self[13].matches.size() : 0) + (self.size() > 14 ? self[14].matches.size()
                    : 0) + (self.size() > 15 ? self[15].matches.size() : 0) <= 128'
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: peerauthentications.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
    - istio-io
    - security-istio-io
    kind: PeerAuthentication
    listKind: PeerAuthenticationList
    plural: peerauthentications
    shortNames:
    - pa
    singular: peerauthentication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Defines the mTLS mode used for peer authentication.
      jsonPath: .spec.mtls.mode
      name: Mode
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Peer authentication configuration for workloads. See more
              details at: https://istio.io/docs/reference/config/security/peer_authentication.html'
            properties:
              mtls:
                description: Mutual TLS settings for workload.
                properties:
                  mode:
                    description: |-
                      Defines the mTLS mode used for peer authentication.

                      Valid Options: DISABLE, PERMISSIVE, STRICT
                    enum:
                    - UNSET
                    - DISABLE
                    - PERMISSIVE
                    - STRICT
                    type: string
                type: object
              portLevelMtls:
                additionalProperties:
                  properties:
                    mode:
                      description: |-
                        Defines the mTLS mode used for peer authentication.

                        Valid Options: DISABLE, PERMISSIVE, STRICT
                      enum:
                      - UNSET
                      - DISABLE
                      - PERMISSIVE
                      - STRICT
                      type: string
                  type: object
                description: Port specific mutual TLS settings.
                minProperties: 1
                type: object
                x-kubernetes-validations:
                - message: port must be between 1-65535
                  rule: self.all(key, 0 < int(key) && int(key) <= 65535)
              selector:
                description: The selector determines the workloads to apply the PeerAuthentication
                  on.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            type: object
            x-kubernetes-validations:
            - message: portLevelMtls requires selector
              rule: (has(self.selector) && has(self.selector.matchLabels) && self.selector.matchLabels.size()
                > 0) || !has(self.portLevelMtls)
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Defines the mTLS mode used for peer authentication.
      jsonPath: .spec.mtls.mode
      name: Mode
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Peer authentication configuration for workloads. See more
              details at: https://istio.io/docs/reference/config/security/peer_authentication.html'
            properties:
              mtls:
                description: Mutual TLS settings for workload.
                properties:
                  mode:
                    description: |-
                      Defines the mTLS mode used for peer authentication.

                      Valid Options: DISABLE, PERMISSIVE, STRICT
                    enum:
                    - UNSET
                    - DISABLE
                    - PERMISSIVE
                    - STRICT
                    type: string
                type: object
              portLevelMtls:
                additionalProperties:
                  properties:
                    mode:
                      description: |-
                        Defines the mTLS mode used for peer authentication.

                        Valid Options: DISABLE, PERMISSIVE, STRICT
                      enum:
                      - UNSET
                      - DISABLE
                      - PERMISSIVE
                      - STRICT
                      type: string
                  type: object
                description: Port specific mutual TLS settings.
                minProperties: 1
                type: object
                x-kubernetes-validations:
                - message: port must be between 1-65535
                  rule: self.all(key, 0 < int(key) && int(key) <= 65535)
              selector:
                description: The selector determines the workloads to apply the PeerAuthentication
                  on.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            type: object
            x-kubernetes-validations:
            - message: portLevelMtls requires selector
              rule: (has(self.selector) && has(self.selector.matchLabels) && self.selector.matchLabels.size()
                > 0) || !has(self.portLevelMtls)
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: proxyconfigs.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: ProxyConfig
    listKind: ProxyConfigList
    plural: proxyconfigs
    singular: proxyconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Provides configuration for individual workloads. See more
              details at: https://istio.io/docs/reference/config/networking/proxy-config.html'
            properties:
              concurrency:
                description: The number of worker threads to run.
                format: int32
                minimum: 0
                nullable: true
                type: integer
              environmentVariables:
                additionalProperties:
                  maxLength: 2048
                  type: string
                description: Additional environment variables for the proxy.
                type: object
              image:
                description: Specifies the details of the proxy image.
                properties:
                  imageType:
                    description: The image type of the image.
                    type: string
                type: object
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: referencegrants.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: ReferenceGrant
    listKind: ReferenceGrantList
    plural: referencegrants
    shortNames:
    - refgrant
    singular: referencegrant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          ReferenceGrant identifies kinds of resources in other namespaces that are
          trusted to reference the specified kinds of resources in the same namespace
          as the policy.

          Each ReferenceGrant can be used to represent a unique trust relationship.
          Additional Reference Grants can be used to add to the set of trusted
          sources of inbound references for the namespace they are defined within.

          All cross-namespace references in Gateway API (with the exception of cross-namespace
          Gateway-route attachment) require a ReferenceGrant.

          ReferenceGrant is a form of runtime verification allowing users to assert
          which cross-namespace object references are permitted. Implementations that
          support ReferenceGrant MUST NOT permit cross-namespace references which have
          no grant, and MUST respond to the removal of a grant by revoking the access
          that the grant allowed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferenceGrant.
            properties:
              from:
                description: |-
                  From describes the trusted namespaces and kinds that can reference the
                  resources described in "To". Each entry in this list MUST be considered
                  to be an additional place that references can be valid from, or to put
                  this another way, entries MUST be combined using OR.

                  Support: Core
                items:
                  description: ReferenceGrantFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field.

                        When used to permit a SecretObjectReference:

                        * Gateway

                        When used to permit a BackendObjectReference:

                        * GRPCRoute
                        * HTTPRoute
                        * TCPRoute
                        * TLSRoute
                        * UDPRoute
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent.

                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: |-
                  To describes the resources that may be referenced by the resources
                  described in "From". Each entry in this list MUST be considered to be an
                  additional place that references can be valid to, or to put this another
                  way, entries MUST be combined using OR.

                  Support: Core
                items:
                  description: |-
                    ReferenceGrantTo describes what Kinds are allowed as targets of the
                    references.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field:

                        * Secret when used to permit a SecretObjectReference
                        * Service when used to permit a BackendObjectReference
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent. When unspecified, this policy
                        refers to all resources of the specified Group and Kind in the local
                        namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: requestauthentications.security.istio.io
spec:
  group: security.istio.io
  names:
    categories:
    - istio-io
    - security-istio-io
    kind: RequestAuthentication
    listKind: RequestAuthenticationList
    plural: requestauthentications
    shortNames:
    - ra
    singular: requestauthentication
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Request authentication configuration for workloads. See
              more details at: https://istio.io/docs/reference/config/security/request_authentication.html'
            properties:
              jwtRules:
                description: Define the list of JWTs that can be validated at the
                  selected workloads' proxy.
                items:
                  properties:
                    audiences:
                      description: The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3)
                        that are allowed to access.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    forwardOriginalToken:
                      description: If set to true, the original token will be kept
                        for the upstream request.
                      type: boolean
                    fromCookies:
                      description: List of cookie names from which JWT is expected.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    fromHeaders:
                      description: List of header locations from which JWT is expected.
                      items:
                        properties:
                          name:
                            description: The HTTP header name.
                            minLength: 1
                            type: string
                          prefix:
                            description: The prefix that should be stripped before
                              decoding the token.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    fromParams:
                      description: List of query parameters from which JWT is expected.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    issuer:
                      description: Identifies the issuer that issued the JWT.
                      minLength: 1
                      type: string
                    jwks:
                      description: JSON Web Key Set of public keys to validate signature
                        of the JWT.
                      type: string
                    jwks_uri:
                      description: URL of the provider's public key set to validate
                        signature of the JWT.
                      maxLength: 2048
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                      - message: url must have scheme http:// or https://
                        rule: url(self).getScheme() in ['http', 'https']
                    jwksUri:
                      description: URL of the provider's public key set to validate
                        signature of the JWT.
                      maxLength: 2048
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                      - message: url must have scheme http:// or https://
                        rule: url(self).getScheme() in ['http', 'https']
                    outputClaimToHeaders:
                      description: This field specifies a list of operations to copy
                        the claim to HTTP headers on a successfully verified token.
                      items:
                        properties:
                          claim:
                            description: The name of the claim to be copied from.
                            minLength: 1
                            type: string
                          header:
                            description: The name of the header to be created.
                            minLength: 1
                            pattern: ^[-_A-Za-z0-9]+$
                            type: string
                        required:
                        - header
                        - claim
                        type: object
                      type: array
                    outputPayloadToHeader:
                      description: This field specifies the header name to output
                        a successfully verified JWT payload to the backend.
                      type: string
                    timeout:
                      description: The maximum amount of time that the resolver, determined
                        by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable,
                        will spend waiting for the JWKS to be fetched.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  required:
                  - issuer
                  type: object
                  x-kubernetes-validations:
                  - message: only one of jwks or jwksUri can be set
                    rule: (has(self.jwksUri)?1:0)+(has(self.jwks_uri)?1:0)+(has(self.jwks)?1:0)<=1
                maxItems: 4096
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Request authentication configuration for workloads. See
              more details at: https://istio.io/docs/reference/config/security/request_authentication.html'
            properties:
              jwtRules:
                description: Define the list of JWTs that can be validated at the
                  selected workloads' proxy.
                items:
                  properties:
                    audiences:
                      description: The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3)
                        that are allowed to access.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    forwardOriginalToken:
                      description: If set to true, the original token will be kept
                        for the upstream request.
                      type: boolean
                    fromCookies:
                      description: List of cookie names from which JWT is expected.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    fromHeaders:
                      description: List of header locations from which JWT is expected.
                      items:
                        properties:
                          name:
                            description: The HTTP header name.
                            minLength: 1
                            type: string
                          prefix:
                            description: The prefix that should be stripped before
                              decoding the token.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    fromParams:
                      description: List of query parameters from which JWT is expected.
                      items:
                        minLength: 1
                        type: string
                      type: array
                    issuer:
                      description: Identifies the issuer that issued the JWT.
                      minLength: 1
                      type: string
                    jwks:
                      description: JSON Web Key Set of public keys to validate signature
                        of the JWT.
                      type: string
                    jwks_uri:
                      description: URL of the provider's public key set to validate
                        signature of the JWT.
                      maxLength: 2048
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                      - message: url must have scheme http:// or https://
                        rule: url(self).getScheme() in ['http', 'https']
                    jwksUri:
                      description: URL of the provider's public key set to validate
                        signature of the JWT.
                      maxLength: 2048
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                      - message: url must have scheme http:// or https://
                        rule: url(self).getScheme() in ['http', 'https']
                    outputClaimToHeaders:
                      description: This field specifies a list of operations to copy
                        the claim to HTTP headers on a successfully verified token.
                      items:
                        properties:
                          claim:
                            description: The name of the claim to be copied from.
                            minLength: 1
                            type: string
                          header:
                            description: The name of the header to be created.
                            minLength: 1
                            pattern: ^[-_A-Za-z0-9]+$
                            type: string
                        required:
                        - header
                        - claim
                        type: object
                      type: array
                    outputPayloadToHeader:
                      description: This field specifies the header name to output
                        a successfully verified JWT payload to the backend.
                      type: string
                    timeout:
                      description: The maximum amount of time that the resolver, determined
                        by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable,
                        will spend waiting for the JWKS to be fetched.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  required:
                  - issuer
                  type: object
                  x-kubernetes-validations:
                  - message: only one of jwks or jwksUri can be set
                    rule: (has(self.jwksUri)?1:0)+(has(self.jwks_uri)?1:0)+(has(self.jwks)?1:0)<=1
                maxItems: 4096
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: serviceentries.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    shortNames:
    - se
    singular: serviceentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The hosts associated with the ServiceEntry
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: Whether the service is external to the mesh or part of the mesh
        (MESH_EXTERNAL or MESH_INTERNAL)
      jsonPath: .spec.location
      name: Location
      type: string
    - description: Service resolution mode for the hosts (NONE, STATIC, or DNS)
      jsonPath: .spec.resolution
      name: Resolution
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting service registry. See more details
              at: https://istio.io/docs/reference/config/networking/service-entry.html'
            properties:
              addresses:
                description: The virtual IP addresses associated with the service.
                items:
                  maxLength: 64
                  type: string
                maxItems: 256
                type: array
              endpoints:
                description: One or more endpoints associated with the service.
                items:
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.
                      maxLength: 256
                      type: string
                      x-kubernetes-validations:
                      - message: UDS must be an absolute path or abstract socket
                        rule: 'self.startsWith(''unix://'') ? (self.substring(7,8)
                          == ''/'' || self.substring(7,8) == ''@'') : true'
                      - message: UDS may not be a dir
                        rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                          : true'
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      maxProperties: 256
                      type: object
                    locality:
                      description: The locality associated with the endpoint.
                      maxLength: 2048
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network.
                      maxLength: 2048
                      type: string
                    ports:
                      additionalProperties:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      description: Set of ports associated with the endpoint.
                      maxProperties: 128
                      type: object
                      x-kubernetes-validations:
                      - message: port name must be valid
                        rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                    serviceAccount:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload.
                      maxLength: 253
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                  x-kubernetes-validations:
                  - message: Address is required
                    rule: has(self.address) || has(self.network)
                  - message: UDS may not include ports
                    rule: '(has(self.address) && self.address.startsWith(''unix://''))
                      ? !has(self.ports) : true'
                maxItems: 4096
                type: array
              exportTo:
                description: A list of namespaces to which this service is exported.
                items:
                  type: string
                type: array
              hosts:
                description: The hosts associated with the ServiceEntry.
                items:
                  type: string
                  x-kubernetes-validations:
                  - message: hostname cannot be wildcard
                    rule: self != '*'
                maxItems: 256
                minItems: 1
                type: array
              location:
                description: |-
                  Specify whether the service should be considered external to the mesh or part of the mesh.

                  Valid Options: MESH_EXTERNAL, MESH_INTERNAL
                enum:
                - MESH_EXTERNAL
                - MESH_INTERNAL
                type: string
              ports:
                description: The ports associated with the external service.
                items:
                  properties:
                    name:
                      description: Label assigned to the port.
                      maxLength: 256
                      type: string
                    number:
                      description: A valid non-negative integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    protocol:
                      description: The protocol exposed on the port.
                      maxLength: 256
                      type: string
                    targetPort:
                      description: The port number on the endpoint where the traffic
                        will be received.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                  required:
                  - number
                  - name
                  type: object
                maxItems: 256
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: port number cannot be duplicated
                  rule: self.all(l1, self.exists_one(l2, l1.number == l2.number))
              resolution:
                description: |-
                  Service resolution mode for the hosts.

                  Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
                enum:
                - NONE
                - STATIC
                - DNS
                - DNS_ROUND_ROBIN
                type: string
              subjectAltNames:
                description: If specified, the proxy will verify that the server certificate's
                  subject alternate name matches one of the specified values.
                items:
                  type: string
                type: array
              workloadSelector:
                description: Applicable only for MESH_INTERNAL services.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            required:
            - hosts
            type: object
            x-kubernetes-validations:
            - message: only one of WorkloadSelector or Endpoints can be set
              rule: (has(self.workloadSelector)?1:0)+(has(self.endpoints)?1:0)<=1
            - message: CIDR addresses are allowed only for NONE/STATIC resolution
                types
              rule: '!(has(self.addresses) && self.addresses.exists(k, k.contains(''/''))
                && (has(self.resolution) && self.resolution != ''STATIC'' && self.resolution
                != ''NONE''))'
            - message: NONE mode cannot set endpoints
              rule: '(!has(self.resolution) || self.resolution == ''NONE'') ? !has(self.endpoints)
                : true'
            - message: DNS_ROUND_ROBIN mode cannot have multiple endpoints
              rule: '(has(self.resolution) && self.resolution == ''DNS_ROUND_ROBIN'')
                ? (!has(self.endpoints) || size(self.endpoints) == 1) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The hosts associated with the ServiceEntry
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: Whether the service is external to the mesh or part of the mesh
        (MESH_EXTERNAL or MESH_INTERNAL)
      jsonPath: .spec.location
      name: Location
      type: string
    - description: Service resolution mode for the hosts (NONE, STATIC, or DNS)
      jsonPath: .spec.resolution
      name: Resolution
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting service registry. See more details
              at: https://istio.io/docs/reference/config/networking/service-entry.html'
            properties:
              addresses:
                description: The virtual IP addresses associated with the service.
                items:
                  maxLength: 64
                  type: string
                maxItems: 256
                type: array
              endpoints:
                description: One or more endpoints associated with the service.
                items:
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.
                      maxLength: 256
                      type: string
                      x-kubernetes-validations:
                      - message: UDS must be an absolute path or abstract socket
                        rule: 'self.startsWith(''unix://'') ? (self.substring(7,8)
                          == ''/'' || self.substring(7,8) == ''@'') : true'
                      - message: UDS may not be a dir
                        rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                          : true'
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      maxProperties: 256
                      type: object
                    locality:
                      description: The locality associated with the endpoint.
                      maxLength: 2048
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network.
                      maxLength: 2048
                      type: string
                    ports:
                      additionalProperties:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      description: Set of ports associated with the endpoint.
                      maxProperties: 128
                      type: object
                      x-kubernetes-validations:
                      - message: port name must be valid
                        rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                    serviceAccount:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload.
                      maxLength: 253
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                  x-kubernetes-validations:
                  - message: Address is required
                    rule: has(self.address) || has(self.network)
                  - message: UDS may not include ports
                    rule: '(has(self.address) && self.address.startsWith(''unix://''))
                      ? !has(self.ports) : true'
                maxItems: 4096
                type: array
              exportTo:
                description: A list of namespaces to which this service is exported.
                items:
                  type: string
                type: array
              hosts:
                description: The hosts associated with the ServiceEntry.
                items:
                  type: string
                  x-kubernetes-validations:
                  - message: hostname cannot be wildcard
                    rule: self != '*'
                maxItems: 256
                minItems: 1
                type: array
              location:
                description: |-
                  Specify whether the service should be considered external to the mesh or part of the mesh.

                  Valid Options: MESH_EXTERNAL, MESH_INTERNAL
                enum:
                - MESH_EXTERNAL
                - MESH_INTERNAL
                type: string
              ports:
                description: The ports associated with the external service.
                items:
                  properties:
                    name:
                      description: Label assigned to the port.
                      maxLength: 256
                      type: string
                    number:
                      description: A valid non-negative integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    protocol:
                      description: The protocol exposed on the port.
                      maxLength: 256
                      type: string
                    targetPort:
                      description: The port number on the endpoint where the traffic
                        will be received.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                  required:
                  - number
                  - name
                  type: object
                maxItems: 256
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: port number cannot be duplicated
                  rule: self.all(l1, self.exists_one(l2, l1.number == l2.number))
              resolution:
                description: |-
                  Service resolution mode for the hosts.

                  Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
                enum:
                - NONE
                - STATIC
                - DNS
                - DNS_ROUND_ROBIN
                type: string
              subjectAltNames:
                description: If specified, the proxy will verify that the server certificate's
                  subject alternate name matches one of the specified values.
                items:
                  type: string
                type: array
              workloadSelector:
                description: Applicable only for MESH_INTERNAL services.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            required:
            - hosts
            type: object
            x-kubernetes-validations:
            - message: only one of WorkloadSelector or Endpoints can be set
              rule: (has(self.workloadSelector)?1:0)+(has(self.endpoints)?1:0)<=1
            - message: CIDR addresses are allowed only for NONE/STATIC resolution
                types
              rule: '!(has(self.addresses) && self.addresses.exists(k, k.contains(''/''))
                && (has(self.resolution) && self.resolution != ''STATIC'' && self.resolution
                != ''NONE''))'
            - message: NONE mode cannot set endpoints
              rule: '(!has(self.resolution) || self.resolution == ''NONE'') ? !has(self.endpoints)
                : true'
            - message: DNS_ROUND_ROBIN mode cannot have multiple endpoints
              rule: '(has(self.resolution) && self.resolution == ''DNS_ROUND_ROBIN'')
                ? (!has(self.endpoints) || size(self.endpoints) == 1) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The hosts associated with the ServiceEntry
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: Whether the service is external to the mesh or part of the mesh
        (MESH_EXTERNAL or MESH_INTERNAL)
      jsonPath: .spec.location
      name: Location
      type: string
    - description: Service resolution mode for the hosts (NONE, STATIC, or DNS)
      jsonPath: .spec.resolution
      name: Resolution
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting service registry. See more details
              at: https://istio.io/docs/reference/config/networking/service-entry.html'
            properties:
              addresses:
                description: The virtual IP addresses associated with the service.
                items:
                  maxLength: 64
                  type: string
                maxItems: 256
                type: array
              endpoints:
                description: One or more endpoints associated with the service.
                items:
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.
                      maxLength: 256
                      type: string
                      x-kubernetes-validations:
                      - message: UDS must be an absolute path or abstract socket
                        rule: 'self.startsWith(''unix://'') ? (self.substring(7,8)
                          == ''/'' || self.substring(7,8) == ''@'') : true'
                      - message: UDS may not be a dir
                        rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                          : true'
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      maxProperties: 256
                      type: object
                    locality:
                      description: The locality associated with the endpoint.
                      maxLength: 2048
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network.
                      maxLength: 2048
                      type: string
                    ports:
                      additionalProperties:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      description: Set of ports associated with the endpoint.
                      maxProperties: 128
                      type: object
                      x-kubernetes-validations:
                      - message: port name must be valid
                        rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                    serviceAccount:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload.
                      maxLength: 253
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                  x-kubernetes-validations:
                  - message: Address is required
                    rule: has(self.address) || has(self.network)
                  - message: UDS may not include ports
                    rule: '(has(self.address) && self.address.startsWith(''unix://''))
                      ? !has(self.ports) : true'
                maxItems: 4096
                type: array
              exportTo:
                description: A list of namespaces to which this service is exported.
                items:
                  type: string
                type: array
              hosts:
                description: The hosts associated with the ServiceEntry.
                items:
                  type: string
                  x-kubernetes-validations:
                  - message: hostname cannot be wildcard
                    rule: self != '*'
                maxItems: 256
                minItems: 1
                type: array
              location:
                description: |-
                  Specify whether the service should be considered external to the mesh or part of the mesh.

                  Valid Options: MESH_EXTERNAL, MESH_INTERNAL
                enum:
                - MESH_EXTERNAL
                - MESH_INTERNAL
                type: string
              ports:
                description: The ports associated with the external service.
                items:
                  properties:
                    name:
                      description: Label assigned to the port.
                      maxLength: 256
                      type: string
                    number:
                      description: A valid non-negative integer port number.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    protocol:
                      description: The protocol exposed on the port.
                      maxLength: 256
                      type: string
                    targetPort:
                      description: The port number on the endpoint where the traffic
                        will be received.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                  required:
                  - number
                  - name
                  type: object
                maxItems: 256
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: port number cannot be duplicated
                  rule: self.all(l1, self.exists_one(l2, l1.number == l2.number))
              resolution:
                description: |-
                  Service resolution mode for the hosts.

                  Valid Options: NONE, STATIC, DNS, DNS_ROUND_ROBIN
                enum:
                - NONE
                - STATIC
                - DNS
                - DNS_ROUND_ROBIN
                type: string
              subjectAltNames:
                description: If specified, the proxy will verify that the server certificate's
                  subject alternate name matches one of the specified values.
                items:
                  type: string
                type: array
              workloadSelector:
                description: Applicable only for MESH_INTERNAL services.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            required:
            - hosts
            type: object
            x-kubernetes-validations:
            - message: only one of WorkloadSelector or Endpoints can be set
              rule: (has(self.workloadSelector)?1:0)+(has(self.endpoints)?1:0)<=1
            - message: CIDR addresses are allowed only for NONE/STATIC resolution
                types
              rule: '!(has(self.addresses) && self.addresses.exists(k, k.contains(''/''))
                && (has(self.resolution) && self.resolution != ''STATIC'' && self.resolution
                != ''NONE''))'
            - message: NONE mode cannot set endpoints
              rule: '(!has(self.resolution) || self.resolution == ''NONE'') ? !has(self.endpoints)
                : true'
            - message: DNS_ROUND_ROBIN mode cannot have multiple endpoints
              rule: '(has(self.resolution) && self.resolution == ''DNS_ROUND_ROBIN'')
                ? (!has(self.endpoints) || size(self.endpoints) == 1) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: sidecars.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: Sidecar
    listKind: SidecarList
    plural: sidecars
    singular: sidecar
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting network reachability of a sidecar.
              See more details at: https://istio.io/docs/reference/config/networking/sidecar.html'
            properties:
              egress:
                description: Egress specifies the configuration of the sidecar for
                  processing outbound traffic from the attached workload instance
                  to other services in the mesh.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) or the Unix domain socket
                        to which the listener should be bound to.
                      type: string
                    captureMode:
                      description: |-
                        When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    hosts:
                      description: One or more service hosts exposed by the listener
                        in `namespace/dnsName` format.
                      items:
                        type: string
                      type: array
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  required:
                  - hosts
                  type: object
                type: array
              inboundConnectionPool:
                description: Settings controlling the volume of connections Envoy
                  will accept from the network.
                properties:
                  http:
                    description: HTTP connection pool settings.
                    properties:
                      h2UpgradePolicy:
                        description: |-
                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                        enum:
                        - DEFAULT
                        - DO_NOT_UPGRADE
                        - UPGRADE
                        type: string
                      http1MaxPendingRequests:
                        description: Maximum number of requests that will be queued
                          while waiting for a ready connection pool connection.
                        format: int32
                        type: integer
                      http2MaxRequests:
                        description: Maximum number of active requests to a destination.
                        format: int32
                        type: integer
                      idleTimeout:
                        description: The idle timeout for upstream connection pool
                          connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConcurrentStreams:
                        description: The maximum number of concurrent streams allowed
                          for a peer on one HTTP/2 connection.
                        format: int32
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum number of requests per connection to
                          a backend.
                        format: int32
                        type: integer
                      maxRetries:
                        description: Maximum number of retries that can be outstanding
                          to all hosts in a cluster at a given time.
                        format: int32
                        type: integer
                      useClientProtocol:
                        description: If set to true, client protocol will be preserved
                          while initiating connection to backend.
                        type: boolean
                    type: object
                  tcp:
                    description: Settings common to both HTTP and TCP upstream connections.
                    properties:
                      connectTimeout:
                        description: TCP connection timeout.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      idleTimeout:
                        description: The idle timeout for TCP connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnectionDuration:
                        description: The maximum duration of a connection.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnections:
                        description: Maximum number of HTTP1 /TCP connections to a
                          destination host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: If set then set SO_KEEPALIVE on the socket to
                          enable TCP Keepalives.
                        properties:
                          interval:
                            description: The time duration between keep-alive probes.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          probes:
                            description: Maximum number of keepalive probes to send
                              without response before deciding the connection is dead.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: The time duration a connection needs to be
                              idle before keep-alive probes start being sent.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                        type: object
                    type: object
                type: object
              ingress:
                description: Ingress specifies the configuration of the sidecar for
                  processing inbound traffic to the attached workload instance.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) to which the listener should
                        be bound.
                      type: string
                    captureMode:
                      description: |-
                        The captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    connectionPool:
                      description: Settings controlling the volume of connections
                        Envoy will accept from the network.
                      properties:
                        http:
                          description: HTTP connection pool settings.
                          properties:
                            h2UpgradePolicy:
                              description: |-
                                Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                              enum:
                              - DEFAULT
                              - DO_NOT_UPGRADE
                              - UPGRADE
                              type: string
                            http1MaxPendingRequests:
                              description: Maximum number of requests that will be
                                queued while waiting for a ready connection pool connection.
                              format: int32
                              type: integer
                            http2MaxRequests:
                              description: Maximum number of active requests to a
                                destination.
                              format: int32
                              type: integer
                            idleTimeout:
                              description: The idle timeout for upstream connection
                                pool connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConcurrentStreams:
                              description: The maximum number of concurrent streams
                                allowed for a peer on one HTTP/2 connection.
                              format: int32
                              type: integer
                            maxRequestsPerConnection:
                              description: Maximum number of requests per connection
                                to a backend.
                              format: int32
                              type: integer
                            maxRetries:
                              description: Maximum number of retries that can be outstanding
                                to all hosts in a cluster at a given time.
                              format: int32
                              type: integer
                            useClientProtocol:
                              description: If set to true, client protocol will be
                                preserved while initiating connection to backend.
                              type: boolean
                          type: object
                        tcp:
                          description: Settings common to both HTTP and TCP upstream
                            connections.
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            idleTimeout:
                              description: The idle timeout for TCP connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnectionDuration:
                              description: The maximum duration of a connection.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                probes:
                                  description: Maximum number of keepalive probes
                                    to send without response before deciding the connection
                                    is dead.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                time:
                                  description: The time duration a connection needs
                                    to be idle before keep-alive probes start being
                                    sent.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                              type: object
                          type: object
                      type: object
                    defaultEndpoint:
                      description: The IP endpoint or Unix domain socket to which
                        traffic should be forwarded to.
                      type: string
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    tls:
                      description: Set of TLS related options that will enable TLS
                        termination on the sidecar for requests originating from outside
                        the mesh.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  type: object
                type: array
              outboundTrafficPolicy:
                description: Set the default behavior of the sidecar for handling
                  outbound traffic from the application.
                properties:
                  egressProxy:
                    properties:
                      host:
                        description: The name of a service from the service registry.
                        type: string
                      port:
                        description: Specifies the port on the host that is being
                          addressed.
                        properties:
                          number:
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      subset:
                        description: The name of a subset within the service.
                        type: string
                    required:
                    - host
                    type: object
                  mode:
                    description: |2-


                      Valid Options: REGISTRY_ONLY, ALLOW_ANY
                    enum:
                    - REGISTRY_ONLY
                    - ALLOW_ANY
                    type: string
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `Sidecar` configuration should be applied.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting network reachability of a sidecar.
              See more details at: https://istio.io/docs/reference/config/networking/sidecar.html'
            properties:
              egress:
                description: Egress specifies the configuration of the sidecar for
                  processing outbound traffic from the attached workload instance
                  to other services in the mesh.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) or the Unix domain socket
                        to which the listener should be bound to.
                      type: string
                    captureMode:
                      description: |-
                        When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    hosts:
                      description: One or more service hosts exposed by the listener
                        in `namespace/dnsName` format.
                      items:
                        type: string
                      type: array
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  required:
                  - hosts
                  type: object
                type: array
              inboundConnectionPool:
                description: Settings controlling the volume of connections Envoy
                  will accept from the network.
                properties:
                  http:
                    description: HTTP connection pool settings.
                    properties:
                      h2UpgradePolicy:
                        description: |-
                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                        enum:
                        - DEFAULT
                        - DO_NOT_UPGRADE
                        - UPGRADE
                        type: string
                      http1MaxPendingRequests:
                        description: Maximum number of requests that will be queued
                          while waiting for a ready connection pool connection.
                        format: int32
                        type: integer
                      http2MaxRequests:
                        description: Maximum number of active requests to a destination.
                        format: int32
                        type: integer
                      idleTimeout:
                        description: The idle timeout for upstream connection pool
                          connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConcurrentStreams:
                        description: The maximum number of concurrent streams allowed
                          for a peer on one HTTP/2 connection.
                        format: int32
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum number of requests per connection to
                          a backend.
                        format: int32
                        type: integer
                      maxRetries:
                        description: Maximum number of retries that can be outstanding
                          to all hosts in a cluster at a given time.
                        format: int32
                        type: integer
                      useClientProtocol:
                        description: If set to true, client protocol will be preserved
                          while initiating connection to backend.
                        type: boolean
                    type: object
                  tcp:
                    description: Settings common to both HTTP and TCP upstream connections.
                    properties:
                      connectTimeout:
                        description: TCP connection timeout.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      idleTimeout:
                        description: The idle timeout for TCP connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnectionDuration:
                        description: The maximum duration of a connection.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnections:
                        description: Maximum number of HTTP1 /TCP connections to a
                          destination host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: If set then set SO_KEEPALIVE on the socket to
                          enable TCP Keepalives.
                        properties:
                          interval:
                            description: The time duration between keep-alive probes.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          probes:
                            description: Maximum number of keepalive probes to send
                              without response before deciding the connection is dead.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: The time duration a connection needs to be
                              idle before keep-alive probes start being sent.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                        type: object
                    type: object
                type: object
              ingress:
                description: Ingress specifies the configuration of the sidecar for
                  processing inbound traffic to the attached workload instance.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) to which the listener should
                        be bound.
                      type: string
                    captureMode:
                      description: |-
                        The captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    connectionPool:
                      description: Settings controlling the volume of connections
                        Envoy will accept from the network.
                      properties:
                        http:
                          description: HTTP connection pool settings.
                          properties:
                            h2UpgradePolicy:
                              description: |-
                                Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                              enum:
                              - DEFAULT
                              - DO_NOT_UPGRADE
                              - UPGRADE
                              type: string
                            http1MaxPendingRequests:
                              description: Maximum number of requests that will be
                                queued while waiting for a ready connection pool connection.
                              format: int32
                              type: integer
                            http2MaxRequests:
                              description: Maximum number of active requests to a
                                destination.
                              format: int32
                              type: integer
                            idleTimeout:
                              description: The idle timeout for upstream connection
                                pool connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConcurrentStreams:
                              description: The maximum number of concurrent streams
                                allowed for a peer on one HTTP/2 connection.
                              format: int32
                              type: integer
                            maxRequestsPerConnection:
                              description: Maximum number of requests per connection
                                to a backend.
                              format: int32
                              type: integer
                            maxRetries:
                              description: Maximum number of retries that can be outstanding
                                to all hosts in a cluster at a given time.
                              format: int32
                              type: integer
                            useClientProtocol:
                              description: If set to true, client protocol will be
                                preserved while initiating connection to backend.
                              type: boolean
                          type: object
                        tcp:
                          description: Settings common to both HTTP and TCP upstream
                            connections.
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            idleTimeout:
                              description: The idle timeout for TCP connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnectionDuration:
                              description: The maximum duration of a connection.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                probes:
                                  description: Maximum number of keepalive probes
                                    to send without response before deciding the connection
                                    is dead.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                time:
                                  description: The time duration a connection needs
                                    to be idle before keep-alive probes start being
                                    sent.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                              type: object
                          type: object
                      type: object
                    defaultEndpoint:
                      description: The IP endpoint or Unix domain socket to which
                        traffic should be forwarded to.
                      type: string
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    tls:
                      description: Set of TLS related options that will enable TLS
                        termination on the sidecar for requests originating from outside
                        the mesh.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  type: object
                type: array
              outboundTrafficPolicy:
                description: Set the default behavior of the sidecar for handling
                  outbound traffic from the application.
                properties:
                  egressProxy:
                    properties:
                      host:
                        description: The name of a service from the service registry.
                        type: string
                      port:
                        description: Specifies the port on the host that is being
                          addressed.
                        properties:
                          number:
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      subset:
                        description: The name of a subset within the service.
                        type: string
                    required:
                    - host
                    type: object
                  mode:
                    description: |2-


                      Valid Options: REGISTRY_ONLY, ALLOW_ANY
                    enum:
                    - REGISTRY_ONLY
                    - ALLOW_ANY
                    type: string
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `Sidecar` configuration should be applied.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting network reachability of a sidecar.
              See more details at: https://istio.io/docs/reference/config/networking/sidecar.html'
            properties:
              egress:
                description: Egress specifies the configuration of the sidecar for
                  processing outbound traffic from the attached workload instance
                  to other services in the mesh.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) or the Unix domain socket
                        to which the listener should be bound to.
                      type: string
                    captureMode:
                      description: |-
                        When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    hosts:
                      description: One or more service hosts exposed by the listener
                        in `namespace/dnsName` format.
                      items:
                        type: string
                      type: array
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                  required:
                  - hosts
                  type: object
                type: array
              inboundConnectionPool:
                description: Settings controlling the volume of connections Envoy
                  will accept from the network.
                properties:
                  http:
                    description: HTTP connection pool settings.
                    properties:
                      h2UpgradePolicy:
                        description: |-
                          Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                          Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                        enum:
                        - DEFAULT
                        - DO_NOT_UPGRADE
                        - UPGRADE
                        type: string
                      http1MaxPendingRequests:
                        description: Maximum number of requests that will be queued
                          while waiting for a ready connection pool connection.
                        format: int32
                        type: integer
                      http2MaxRequests:
                        description: Maximum number of active requests to a destination.
                        format: int32
                        type: integer
                      idleTimeout:
                        description: The idle timeout for upstream connection pool
                          connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConcurrentStreams:
                        description: The maximum number of concurrent streams allowed
                          for a peer on one HTTP/2 connection.
                        format: int32
                        type: integer
                      maxRequestsPerConnection:
                        description: Maximum number of requests per connection to
                          a backend.
                        format: int32
                        type: integer
                      maxRetries:
                        description: Maximum number of retries that can be outstanding
                          to all hosts in a cluster at a given time.
                        format: int32
                        type: integer
                      useClientProtocol:
                        description: If set to true, client protocol will be preserved
                          while initiating connection to backend.
                        type: boolean
                    type: object
                  tcp:
                    description: Settings common to both HTTP and TCP upstream connections.
                    properties:
                      connectTimeout:
                        description: TCP connection timeout.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      idleTimeout:
                        description: The idle timeout for TCP connections.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnectionDuration:
                        description: The maximum duration of a connection.
                        type: string
                        x-kubernetes-validations:
                        - message: must be a valid duration greater than 1ms
                          rule: duration(self) >= duration('1ms')
                      maxConnections:
                        description: Maximum number of HTTP1 /TCP connections to a
                          destination host.
                        format: int32
                        type: integer
                      tcpKeepalive:
                        description: If set then set SO_KEEPALIVE on the socket to
                          enable TCP Keepalives.
                        properties:
                          interval:
                            description: The time duration between keep-alive probes.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                          probes:
                            description: Maximum number of keepalive probes to send
                              without response before deciding the connection is dead.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          time:
                            description: The time duration a connection needs to be
                              idle before keep-alive probes start being sent.
                            type: string
                            x-kubernetes-validations:
                            - message: must be a valid duration greater than 1ms
                              rule: duration(self) >= duration('1ms')
                        type: object
                    type: object
                type: object
              ingress:
                description: Ingress specifies the configuration of the sidecar for
                  processing inbound traffic to the attached workload instance.
                items:
                  properties:
                    bind:
                      description: The IP(IPv4 or IPv6) to which the listener should
                        be bound.
                      type: string
                    captureMode:
                      description: |-
                        The captureMode option dictates how traffic to the listener is expected to be captured (or not).

                        Valid Options: DEFAULT, IPTABLES, NONE
                      enum:
                      - DEFAULT
                      - IPTABLES
                      - NONE
                      type: string
                    connectionPool:
                      description: Settings controlling the volume of connections
                        Envoy will accept from the network.
                      properties:
                        http:
                          description: HTTP connection pool settings.
                          properties:
                            h2UpgradePolicy:
                              description: |-
                                Specify if http1.1 connection should be upgraded to http2 for the associated destination.

                                Valid Options: DEFAULT, DO_NOT_UPGRADE, UPGRADE
                              enum:
                              - DEFAULT
                              - DO_NOT_UPGRADE
                              - UPGRADE
                              type: string
                            http1MaxPendingRequests:
                              description: Maximum number of requests that will be
                                queued while waiting for a ready connection pool connection.
                              format: int32
                              type: integer
                            http2MaxRequests:
                              description: Maximum number of active requests to a
                                destination.
                              format: int32
                              type: integer
                            idleTimeout:
                              description: The idle timeout for upstream connection
                                pool connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConcurrentStreams:
                              description: The maximum number of concurrent streams
                                allowed for a peer on one HTTP/2 connection.
                              format: int32
                              type: integer
                            maxRequestsPerConnection:
                              description: Maximum number of requests per connection
                                to a backend.
                              format: int32
                              type: integer
                            maxRetries:
                              description: Maximum number of retries that can be outstanding
                                to all hosts in a cluster at a given time.
                              format: int32
                              type: integer
                            useClientProtocol:
                              description: If set to true, client protocol will be
                                preserved while initiating connection to backend.
                              type: boolean
                          type: object
                        tcp:
                          description: Settings common to both HTTP and TCP upstream
                            connections.
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            idleTimeout:
                              description: The idle timeout for TCP connections.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnectionDuration:
                              description: The maximum duration of a connection.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                                probes:
                                  description: Maximum number of keepalive probes
                                    to send without response before deciding the connection
                                    is dead.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                                time:
                                  description: The time duration a connection needs
                                    to be idle before keep-alive probes start being
                                    sent.
                                  type: string
                                  x-kubernetes-validations:
                                  - message: must be a valid duration greater than
                                      1ms
                                    rule: duration(self) >= duration('1ms')
                              type: object
                          type: object
                      type: object
                    defaultEndpoint:
                      description: The IP endpoint or Unix domain socket to which
                        traffic should be forwarded to.
                      type: string
                    port:
                      description: The port associated with the listener.
                      properties:
                        name:
                          description: Label assigned to the port.
                          type: string
                        number:
                          description: A valid non-negative integer port number.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        protocol:
                          description: The protocol exposed on the port.
                          type: string
                        targetPort:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    tls:
                      description: Set of TLS related options that will enable TLS
                        termination on the sidecar for requests originating from outside
                        the mesh.
                      properties:
                        caCertificates:
                          description: REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`.
                          type: string
                        caCrl:
                          description: 'OPTIONAL: The path to the file containing
                            the certificate revocation list (CRL) to use in verifying
                            a presented client side certificate.'
                          type: string
                        cipherSuites:
                          description: 'Optional: If specified, only support the specified
                            cipher list.'
                          items:
                            type: string
                          type: array
                        credentialName:
                          description: For gateways running on Kubernetes, the name
                            of the secret that holds the TLS certs including the CA
                            certificates.
                          type: string
                        httpsRedirect:
                          description: If set to true, the load balancer will send
                            a 301 redirect for all http connections, asking the clients
                            to use HTTPS.
                          type: boolean
                        maxProtocolVersion:
                          description: |-
                            Optional: Maximum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        minProtocolVersion:
                          description: |-
                            Optional: Minimum TLS protocol version.

                            Valid Options: TLS_AUTO, TLSV1_0, TLSV1_1, TLSV1_2, TLSV1_3
                          enum:
                          - TLS_AUTO
                          - TLSV1_0
                          - TLSV1_1
                          - TLSV1_2
                          - TLSV1_3
                          type: string
                        mode:
                          description: |-
                            Optional: Indicates whether connections to this port should be secured using TLS.

                            Valid Options: PASSTHROUGH, SIMPLE, MUTUAL, AUTO_PASSTHROUGH, ISTIO_MUTUAL, OPTIONAL_MUTUAL
                          enum:
                          - PASSTHROUGH
                          - SIMPLE
                          - MUTUAL
                          - AUTO_PASSTHROUGH
                          - ISTIO_MUTUAL
                          - OPTIONAL_MUTUAL
                          type: string
                        privateKey:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        serverCertificate:
                          description: REQUIRED if mode is `SIMPLE` or `MUTUAL`.
                          type: string
                        subjectAltNames:
                          description: A list of alternate names to verify the subject
                            identity in the certificate presented by the client.
                          items:
                            type: string
                          type: array
                        verifyCertificateHash:
                          description: An optional list of hex-encoded SHA-256 hashes
                            of the authorized client certificates.
                          items:
                            type: string
                          type: array
                        verifyCertificateSpki:
                          description: An optional list of base64-encoded SHA-256
                            hashes of the SPKIs of authorized client certificates.
                          items:
                            type: string
                          type: array
                      type: object
                  required:
                  - port
                  type: object
                type: array
              outboundTrafficPolicy:
                description: Set the default behavior of the sidecar for handling
                  outbound traffic from the application.
                properties:
                  egressProxy:
                    properties:
                      host:
                        description: The name of a service from the service registry.
                        type: string
                      port:
                        description: Specifies the port on the host that is being
                          addressed.
                        properties:
                          number:
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      subset:
                        description: The name of a subset within the service.
                        type: string
                    required:
                    - host
                    type: object
                  mode:
                    description: |2-


                      Valid Options: REGISTRY_ONLY, ALLOW_ANY
                    enum:
                    - REGISTRY_ONLY
                    - ALLOW_ANY
                    type: string
                type: object
              workloadSelector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this `Sidecar` configuration should be applied.
                properties:
                  labels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard is not supported in selector
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied.
                    maxProperties: 256
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tcproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TCPRoute
    listKind: TCPRouteList
    plural: tcproutes
    singular: tcproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          TCPRoute provides a way to route TCP requests. When combined with a Gateway
          listener, it can be used to forward connections on the port specified by the
          listener to a set of backends specified by the TCPRoute.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TCPRoute.
            properties:
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: |+
                  Rules are a list of TCP matchers and actions.

                items:
                  description: TCPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a non-existent resource or a
                        Service with no endpoints), the underlying implementation MUST actively
                        reject connection attempts to this backend. Connection rejections must
                        respect weight; if an invalid backend is requested to have 80% of
                        connections, then 80% of connections must be rejected instead.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Extended
                      items:
                        description: |-
                          BackendRef defines how a Route should forward a request to a Kubernetes
                          resource.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>

                          Note that when the BackendTLSPolicy object is enabled by the implementation,
                          there are some extra rules about validity to consider here. See the fields
                          where this struct is used for more information about the exact behavior.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TCPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: telemetries.telemetry.istio.io
spec:
  group: telemetry.istio.io
  names:
    categories:
    - istio-io
    - telemetry-istio-io
    kind: Telemetry
    listKind: TelemetryList
    plural: telemetries
    shortNames:
    - telemetry
    singular: telemetry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Telemetry configuration for workloads. See more details
              at: https://istio.io/docs/reference/config/telemetry.html'
            properties:
              accessLogging:
                description: Optional.
                items:
                  properties:
                    disabled:
                      description: Controls logging.
                      nullable: true
                      type: boolean
                    filter:
                      description: Optional.
                      properties:
                        expression:
                          description: CEL expression for selecting when requests/connections
                            should be logged.
                          type: string
                      type: object
                    match:
                      description: Allows tailoring of logging behavior to specific
                        conditions.
                      properties:
                        mode:
                          description: |-
                            This determines whether or not to apply the access logging configuration based on the direction of traffic relative to the proxied workload.

                            Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                          enum:
                          - CLIENT_AND_SERVER
                          - CLIENT
                          - SERVER
                          type: string
                      type: object
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                type: array
              metrics:
                description: Optional.
                items:
                  properties:
                    overrides:
                      description: Optional.
                      items:
                        properties:
                          disabled:
                            description: Optional.
                            nullable: true
                            type: boolean
                          match:
                            description: Match allows providing the scope of the override.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - metric
                                - required:
                                  - customMetric
                            - required:
                              - metric
                            - required:
                              - customMetric
                            properties:
                              customMetric:
                                description: Allows free-form specification of a metric.
                                minLength: 1
                                type: string
                              metric:
                                description: |-
                                  One of the well-known [Istio Standard Metrics](https://istio.io/latest/docs/reference/config/metrics/).

                                  Valid Options: ALL_METRICS, REQUEST_COUNT, REQUEST_DURATION, REQUEST_SIZE, RESPONSE_SIZE, TCP_OPENED_CONNECTIONS, TCP_CLOSED_CONNECTIONS, TCP_SENT_BYTES, TCP_RECEIVED_BYTES, GRPC_REQUEST_MESSAGES, GRPC_RESPONSE_MESSAGES
                                enum:
                                - ALL_METRICS
                                - REQUEST_COUNT
                                - REQUEST_DURATION
                                - REQUEST_SIZE
                                - RESPONSE_SIZE
                                - TCP_OPENED_CONNECTIONS
                                - TCP_CLOSED_CONNECTIONS
                                - TCP_SENT_BYTES
                                - TCP_RECEIVED_BYTES
                                - GRPC_REQUEST_MESSAGES
                                - GRPC_RESPONSE_MESSAGES
                                type: string
                              mode:
                                description: |-
                                  Controls which mode of metrics generation is selected: `CLIENT`, `SERVER`, or `CLIENT_AND_SERVER`.

                                  Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                                enum:
                                - CLIENT_AND_SERVER
                                - CLIENT
                                - SERVER
                                type: string
                            type: object
                          tagOverrides:
                            additionalProperties:
                              properties:
                                operation:
                                  description: |-
                                    Operation controls whether or not to update/add a tag, or to remove it.

                                    Valid Options: UPSERT, REMOVE
                                  enum:
                                  - UPSERT
                                  - REMOVE
                                  type: string
                                value:
                                  description: Value is only considered if the operation
                                    is `UPSERT`.
                                  type: string
                              type: object
                              x-kubernetes-validations:
                              - message: value must be set when operation is UPSERT
                                rule: '((has(self.operation) ? self.operation : '''')
                                  == ''UPSERT'') ? self.value != '''' : true'
                              - message: value must not be set when operation is REMOVE
                                rule: '((has(self.operation) ? self.operation : '''')
                                  == ''REMOVE'') ? !has(self.value) : true'
                            description: Optional.
                            type: object
                        type: object
                      type: array
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    reportingInterval:
                      description: Optional.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  type: object
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
              tracing:
                description: Optional.
                items:
                  properties:
                    customTags:
                      additionalProperties:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - literal
                            - required:
                              - environment
                            - required:
                              - header
                        - required:
                          - literal
                        - required:
                          - environment
                        - required:
                          - header
                        properties:
                          environment:
                            description: Environment adds the value of an environment
                              variable to each span.
                            properties:
                              defaultValue:
                                description: Optional.
                                type: string
                              name:
                                description: Name of the environment variable from
                                  which to extract the tag value.
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                          header:
                            description: RequestHeader adds the value of an header
                              from the request to each span.
                            properties:
                              defaultValue:
                                description: Optional.
                                type: string
                              name:
                                description: Name of the header from which to extract
                                  the tag value.
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                          literal:
                            description: Literal adds the same, hard-coded value to
                              each span.
                            properties:
                              value:
                                description: The tag value to use.
                                minLength: 1
                                type: string
                            required:
                            - value
                            type: object
                        type: object
                      description: Optional.
                      type: object
                    disableSpanReporting:
                      description: Controls span reporting.
                      nullable: true
                      type: boolean
                    match:
                      description: Allows tailoring of behavior to specific conditions.
                      properties:
                        mode:
                          description: |-
                            This determines whether or not to apply the tracing configuration based on the direction of traffic relative to the proxied workload.

                            Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                          enum:
                          - CLIENT_AND_SERVER
                          - CLIENT
                          - SERVER
                          type: string
                      type: object
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    randomSamplingPercentage:
                      description: Controls the rate at which traffic will be selected
                        for tracing if no prior sampling decision has been made.
                      format: double
                      maximum: 100
                      minimum: 0
                      nullable: true
                      type: number
                    useRequestIdForTraceSampling:
                      nullable: true
                      type: boolean
                  type: object
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Telemetry configuration for workloads. See more details
              at: https://istio.io/docs/reference/config/telemetry.html'
            properties:
              accessLogging:
                description: Optional.
                items:
                  properties:
                    disabled:
                      description: Controls logging.
                      nullable: true
                      type: boolean
                    filter:
                      description: Optional.
                      properties:
                        expression:
                          description: CEL expression for selecting when requests/connections
                            should be logged.
                          type: string
                      type: object
                    match:
                      description: Allows tailoring of logging behavior to specific
                        conditions.
                      properties:
                        mode:
                          description: |-
                            This determines whether or not to apply the access logging configuration based on the direction of traffic relative to the proxied workload.

                            Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                          enum:
                          - CLIENT_AND_SERVER
                          - CLIENT
                          - SERVER
                          type: string
                      type: object
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                type: array
              metrics:
                description: Optional.
                items:
                  properties:
                    overrides:
                      description: Optional.
                      items:
                        properties:
                          disabled:
                            description: Optional.
                            nullable: true
                            type: boolean
                          match:
                            description: Match allows providing the scope of the override.
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - metric
                                - required:
                                  - customMetric
                            - required:
                              - metric
                            - required:
                              - customMetric
                            properties:
                              customMetric:
                                description: Allows free-form specification of a metric.
                                minLength: 1
                                type: string
                              metric:
                                description: |-
                                  One of the well-known [Istio Standard Metrics](https://istio.io/latest/docs/reference/config/metrics/).

                                  Valid Options: ALL_METRICS, REQUEST_COUNT, REQUEST_DURATION, REQUEST_SIZE, RESPONSE_SIZE, TCP_OPENED_CONNECTIONS, TCP_CLOSED_CONNECTIONS, TCP_SENT_BYTES, TCP_RECEIVED_BYTES, GRPC_REQUEST_MESSAGES, GRPC_RESPONSE_MESSAGES
                                enum:
                                - ALL_METRICS
                                - REQUEST_COUNT
                                - REQUEST_DURATION
                                - REQUEST_SIZE
                                - RESPONSE_SIZE
                                - TCP_OPENED_CONNECTIONS
                                - TCP_CLOSED_CONNECTIONS
                                - TCP_SENT_BYTES
                                - TCP_RECEIVED_BYTES
                                - GRPC_REQUEST_MESSAGES
                                - GRPC_RESPONSE_MESSAGES
                                type: string
                              mode:
                                description: |-
                                  Controls which mode of metrics generation is selected: `CLIENT`, `SERVER`, or `CLIENT_AND_SERVER`.

                                  Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                                enum:
                                - CLIENT_AND_SERVER
                                - CLIENT
                                - SERVER
                                type: string
                            type: object
                          tagOverrides:
                            additionalProperties:
                              properties:
                                operation:
                                  description: |-
                                    Operation controls whether or not to update/add a tag, or to remove it.

                                    Valid Options: UPSERT, REMOVE
                                  enum:
                                  - UPSERT
                                  - REMOVE
                                  type: string
                                value:
                                  description: Value is only considered if the operation
                                    is `UPSERT`.
                                  type: string
                              type: object
                              x-kubernetes-validations:
                              - message: value must be set when operation is UPSERT
                                rule: '((has(self.operation) ? self.operation : '''')
                                  == ''UPSERT'') ? self.value != '''' : true'
                              - message: value must not be set when operation is REMOVE
                                rule: '((has(self.operation) ? self.operation : '''')
                                  == ''REMOVE'') ? !has(self.value) : true'
                            description: Optional.
                            type: object
                        type: object
                      type: array
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    reportingInterval:
                      description: Optional.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  type: object
                type: array
              selector:
                description: Optional.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
              tracing:
                description: Optional.
                items:
                  properties:
                    customTags:
                      additionalProperties:
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - literal
                            - required:
                              - environment
                            - required:
                              - header
                        - required:
                          - literal
                        - required:
                          - environment
                        - required:
                          - header
                        properties:
                          environment:
                            description: Environment adds the value of an environment
                              variable to each span.
                            properties:
                              defaultValue:
                                description: Optional.
                                type: string
                              name:
                                description: Name of the environment variable from
                                  which to extract the tag value.
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                          header:
                            description: RequestHeader adds the value of an header
                              from the request to each span.
                            properties:
                              defaultValue:
                                description: Optional.
                                type: string
                              name:
                                description: Name of the header from which to extract
                                  the tag value.
                                minLength: 1
                                type: string
                            required:
                            - name
                            type: object
                          literal:
                            description: Literal adds the same, hard-coded value to
                              each span.
                            properties:
                              value:
                                description: The tag value to use.
                                minLength: 1
                                type: string
                            required:
                            - value
                            type: object
                        type: object
                      description: Optional.
                      type: object
                    disableSpanReporting:
                      description: Controls span reporting.
                      nullable: true
                      type: boolean
                    match:
                      description: Allows tailoring of behavior to specific conditions.
                      properties:
                        mode:
                          description: |-
                            This determines whether or not to apply the tracing configuration based on the direction of traffic relative to the proxied workload.

                            Valid Options: CLIENT_AND_SERVER, CLIENT, SERVER
                          enum:
                          - CLIENT_AND_SERVER
                          - CLIENT
                          - SERVER
                          type: string
                      type: object
                    providers:
                      description: Optional.
                      items:
                        properties:
                          name:
                            description: Required.
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    randomSamplingPercentage:
                      description: Controls the rate at which traffic will be selected
                        for tracing if no prior sampling decision has been made.
                      format: double
                      maximum: 100
                      minimum: 0
                      nullable: true
                      type: number
                    useRequestIdForTraceSampling:
                      nullable: true
                      type: boolean
                  type: object
                type: array
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          The TLSRoute resource is similar to TCPRoute, but can be configured
          to match against TLS-specific metadata. This allows more flexibility
          in matching streams for a given TLS listener.

          If you need to forward traffic to a single target for a TLS listener, you
          could choose to use a TCPRoute with a TLS listener.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TLSRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of SNI names that should match against the
                  SNI attribute of TLS ClientHello message in TLS handshake. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:

                  1. IPs are not allowed in SNI names per RFC 6066.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.

                  If a hostname is specified by both the Listener and TLSRoute, there
                  must be at least one intersecting hostname for the TLSRoute to be
                  attached to the Listener. For example:

                  * A Listener with `test.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.

                  If both the Listener and TLSRoute have specified hostnames, any
                  TLSRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  TLSRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.

                  If both the Listener and TLSRoute have specified hostnames, and none
                  match with the criteria above, then the TLSRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.

                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:

                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.

                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).

                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: |+
                  Rules are a list of TLS matchers and actions.

                items:
                  description: TLSRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a non-existent resource or
                        a Service with no endpoints), the rule performs no forwarding; if no
                        filters are specified that would result in a response being sent, the
                        underlying implementation must actively reject request attempts to this
                        backend, by rejecting the connection or returning a 500 status code.
                        Request rejections must respect weight; if an invalid backend is
                        requested to have 80% of requests, then 80% of requests must be rejected
                        instead.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Extended
                      items:
                        description: |-
                          BackendRef defines how a Route should forward a request to a Kubernetes
                          resource.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>

                          Note that when the BackendTLSPolicy object is enabled by the implementation,
                          there are some extra rules about validity to consider here. See the fields
                          where this struct is used for more information about the exact behavior.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TLSRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/3328
    gateway.networking.k8s.io/bundle-version: v1.2.0
    gateway.networking.k8s.io/channel: experimental
  creationTimestamp: null
  name: udproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: UDPRoute
    listKind: UDPRouteList
    plural: udproutes
    singular: udproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          UDPRoute provides a way to route UDP traffic. When combined with a Gateway
          listener, it can be used to forward traffic on the port specified by the
          listener to a set of backends specified by the UDPRoute.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of UDPRoute.
            properties:
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.

                  There are two kinds of parent resources with "Core" support:

                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)

                  This API may be extended in the future to support additional kinds of parent
                  resources.

                  ParentRefs must be _distinct_. This means either that:

                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.

                  Some examples:

                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.

                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.

                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.


                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.

                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.





                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:

                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)

                    This API may be extended in the future to support additional kinds of parent
                    resources.

                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).

                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.

                        There are two kinds of parent resources with "Core" support:

                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)

                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.

                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.


                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.

                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.

                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.


                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.


                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.

                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.

                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:

                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.

                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.

                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.

                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: |+
                  Rules are a list of UDP matchers and actions.

                items:
                  description: UDPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a non-existent resource or a
                        Service with no endpoints), the underlying implementation MUST actively
                        reject connection attempts to this backend. Packet drops must
                        respect weight; if an invalid backend is requested to have 80% of
                        the packets, then 80% of packets must be dropped instead.

                        Support: Core for Kubernetes Service

                        Support: Extended for Kubernetes ServiceImport

                        Support: Implementation-specific for any other resource

                        Support for weight: Extended
                      items:
                        description: |-
                          BackendRef defines how a Route should forward a request to a Kubernetes
                          resource.

                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          <gateway:experimental:description>

                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.

                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.

                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.

                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.

                          </gateway:experimental:description>

                          Note that when the BackendTLSPolicy object is enabled by the implementation,
                          there are some extra rules about validity to consider here. See the fields
                          where this struct is used for more information about the exact behavior.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".

                              Defaults to "Service" when not specified.

                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.

                              Support: Core (Services with a type other than ExternalName)

                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.

                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.

                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.

                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.

                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is the name of the route rule. This name MUST be unique within a Route if it is set.

                        Support: Extended
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-validations:
                - message: Rule name must be unique within the route
                  rule: self.all(l1, !has(l1.name) || self.exists_one(l2, has(l2.name)
                    && l1.name == l2.name))
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of UDPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.

                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.

                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.

                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.

                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.

                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:

                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: Condition contains details for one aspect of
                          the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.

                        Example: "example.net/gateway-controller".

                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).

                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).

                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.

                            There are two kinds of parent resources with "Core" support:

                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)

                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.

                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.

                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.

                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.

                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.

                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:

                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.

                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.

                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.

                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: virtualservices.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    shortNames:
    - vs
    singular: virtualservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The names of gateways and sidecars that should apply these routes
      jsonPath: .spec.gateways
      name: Gateways
      type: string
    - description: The destination hosts to which traffic is being sent
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting label/content routing, sni routing,
              etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html'
            properties:
              exportTo:
                description: A list of namespaces to which this virtual service is
                  exported.
                items:
                  type: string
                type: array
              gateways:
                description: The names of gateways and sidecars that should apply
                  these routes.
                items:
                  type: string
                type: array
              hosts:
                description: The destination hosts to which traffic is being sent.
                items:
                  type: string
                type: array
              http:
                description: An ordered list of route rules for HTTP traffic.
                items:
                  properties:
                    corsPolicy:
                      description: Cross-Origin Resource Sharing policy (CORS).
                      properties:
                        allowCredentials:
                          description: Indicates whether the caller is allowed to
                            send the actual request (not the preflight) using credentials.
                          nullable: true
                          type: boolean
                        allowHeaders:
                          description: List of HTTP headers that can be used when
                            requesting the resource.
                          items:
                            type: string
                          type: array
                        allowMethods:
                          description: List of HTTP methods allowed to access the
                            resource.
                          items:
                            type: string
                          type: array
                        allowOrigin:
                          items:
                            type: string
                          type: array
                        allowOrigins:
                          description: String patterns that match allowed origins.
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          type: array
                        exposeHeaders:
                          description: A list of HTTP headers that the browsers are
                            allowed to access.
                          items:
                            type: string
                          type: array
                        maxAge:
                          description: Specifies how long the results of a preflight
                            request can be cached.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        unmatchedPreflights:
                          description: |-
                            Indicates whether preflight requests not matching the configured allowed origin shouldn't be forwarded to the upstream.

                            Valid Options: FORWARD, IGNORE
                          enum:
                          - UNSPECIFIED
                          - FORWARD
                          - IGNORE
                          type: string
                      type: object
                    delegate:
                      description: Delegate is used to specify the particular VirtualService
                        which can be used to define delegate HTTPRoute.
                      properties:
                        name:
                          description: Name specifies the name of the delegate VirtualService.
                          type: string
                        namespace:
                          description: Namespace specifies the namespace where the
                            delegate VirtualService resides.
                          type: string
                      type: object
                    directResponse:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      properties:
                        body:
                          description: Specifies the content of the response body.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - string
                              - required:
                                - bytes
                          - required:
                            - string
                          - required:
                            - bytes
                          properties:
                            bytes:
                              description: response body as base64 encoded bytes.
                              format: binary
                              type: string
                            string:
                              type: string
                          type: object
                        status:
                          description: Specifies the HTTP response status to be returned.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - status
                      type: object
                    fault:
                      description: Fault injection policy to apply on HTTP traffic
                        at the client side.
                      properties:
                        abort:
                          description: Abort Http request attempts and return error
                            codes back to downstream service, giving the impression
                            that the upstream service is faulty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpStatus
                              - required:
                                - grpcStatus
                              - required:
                                - http2Error
                          - required:
                            - httpStatus
                          - required:
                            - grpcStatus
                          - required:
                            - http2Error
                          properties:
                            grpcStatus:
                              description: GRPC status code to use to abort the request.
                              type: string
                            http2Error:
                              type: string
                            httpStatus:
                              description: HTTP status code to use to abort the Http
                                request.
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests to be aborted with
                                the error code provided.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                        delay:
                          description: Delay requests before forwarding, emulating
                            various failures such as network issues, overloaded upstream
                            service, etc.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - fixedDelay
                              - required:
                                - exponentialDelay
                          - required:
                            - fixedDelay
                          - required:
                            - exponentialDelay
                          properties:
                            exponentialDelay:
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            fixedDelay:
                              description: Add a fixed delay before forwarding the
                                request.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            percent:
                              description: Percentage of requests on which the delay
                                will be injected (0-100).
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests on which the delay
                                will be injected.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                      type: object
                    headers:
                      properties:
                        request:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        response:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                      type: object
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          authority:
                            description: 'HTTP Authority values are case-sensitive
                              and formatted as follows: - `exact: "value"` for exact
                              string match - `prefix: "value"` for prefix-based match
                              - `regex: "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          headers:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: The header keys must be lowercase and use
                              hyphen as the separator, e.g.
                            type: object
                          ignoreUriCase:
                            description: Flag to specify whether the URI matching
                              should be case-insensitive.
                            type: boolean
                          method:
                            description: 'HTTP Method values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          name:
                            description: The name assigned to a match.
                            type: string
                          port:
                            description: Specifies the ports on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          queryParams:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: Query parameters for matching.
                            type: object
                          scheme:
                            description: 'URI Scheme values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to source (client) workloads with the given
                              labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          statPrefix:
                            description: The human readable prefix to use when emitting
                              statistics for this route.
                            type: string
                          uri:
                            description: 'URI to match values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          withoutHeaders:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: withoutHeader has the same syntax with the
                              header, but has opposite meaning.
                            type: object
                        type: object
                      type: array
                    mirror:
                      description: Mirror HTTP traffic to a another destination in
                        addition to forwarding the requests to the intended destination.
                      properties:
                        host:
                          description: The name of a service from the service registry.
                          type: string
                        port:
                          description: Specifies the port on the host that is being
                            addressed.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        subset:
                          description: The name of a subset within the service.
                          type: string
                      required:
                      - host
                      type: object
                    mirror_percent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercentage:
                      description: Percentage of the traffic to be mirrored by the
                        `mirror` field.
                      properties:
                        value:
                          format: double
                          type: number
                      type: object
                    mirrors:
                      description: Specifies the destinations to mirror HTTP traffic
                        in addition to the original destination.
                      items:
                        properties:
                          destination:
                            description: Destination specifies the target of the mirror
                              operation.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          percentage:
                            description: Percentage of the traffic to be mirrored
                              by the `destination` field.
                            properties:
                              value:
                                format: double
                                type: number
                            type: object
                        required:
                        - destination
                        type: object
                      type: array
                    name:
                      description: The name assigned to the route for debugging purposes.
                      type: string
                    redirect:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - port
                          - required:
                            - derivePort
                      - required:
                        - port
                      - required:
                        - derivePort
                      properties:
                        authority:
                          description: On a redirect, overwrite the Authority/Host
                            portion of the URL with this value.
                          type: string
                        derivePort:
                          description: |-
                            On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.

                            Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
                          enum:
                          - FROM_PROTOCOL_DEFAULT
                          - FROM_REQUEST_PORT
                          type: string
                        port:
                          description: On a redirect, overwrite the port portion of
                            the URL with this value.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        redirectCode:
                          description: On a redirect, Specifies the HTTP status code
                            to use in the redirect response.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        scheme:
                          description: On a redirect, overwrite the scheme portion
                            of the URL with this value.
                          type: string
                        uri:
                          description: On a redirect, overwrite the Path portion of
                            the URL with this value.
                          type: string
                      type: object
                    retries:
                      description: Retry policy for HTTP requests.
                      properties:
                        attempts:
                          description: Number of retries to be allowed for a given
                            request.
                          format: int32
                          type: integer
                        perTryTimeout:
                          description: Timeout per attempt for a given request, including
                            the initial call and any retries.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        retryOn:
                          description: Specifies the conditions under which retry
                            takes place.
                          type: string
                        retryRemoteLocalities:
                          description: Flag to specify whether the retries should
                            retry to other localities.
                          nullable: true
                          type: boolean
                      type: object
                    rewrite:
                      description: Rewrite HTTP URIs and Authority headers.
                      properties:
                        authority:
                          description: rewrite the Authority/Host header with this
                            value.
                          type: string
                        uri:
                          description: rewrite the path (or the prefix) portion of
                            the URI with this value.
                          type: string
                        uriRegexRewrite:
                          description: rewrite the path portion of the URI with the
                            specified regex.
                          properties:
                            match:
                              description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                              type: string
                            rewrite:
                              description: The string that should replace into matching
                                portions of original URI.
                              type: string
                          type: object
                      type: object
                    route:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          headers:
                            properties:
                              request:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              response:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                    timeout:
                      description: Timeout for HTTP requests, default is disabled.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  type: object
                type: array
              tcp:
                description: An ordered list of route rules for opaque TCP traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          sourceSubnet:
                            type: string
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  type: object
                type: array
              tls:
                description: An ordered list of route rule for non-terminated TLS
                  & HTTPS traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sniHosts:
                            description: SNI (server name indicator) to match on.
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                        required:
                        - sniHosts
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  required:
                  - match
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The names of gateways and sidecars that should apply these routes
      jsonPath: .spec.gateways
      name: Gateways
      type: string
    - description: The destination hosts to which traffic is being sent
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting label/content routing, sni routing,
              etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html'
            properties:
              exportTo:
                description: A list of namespaces to which this virtual service is
                  exported.
                items:
                  type: string
                type: array
              gateways:
                description: The names of gateways and sidecars that should apply
                  these routes.
                items:
                  type: string
                type: array
              hosts:
                description: The destination hosts to which traffic is being sent.
                items:
                  type: string
                type: array
              http:
                description: An ordered list of route rules for HTTP traffic.
                items:
                  properties:
                    corsPolicy:
                      description: Cross-Origin Resource Sharing policy (CORS).
                      properties:
                        allowCredentials:
                          description: Indicates whether the caller is allowed to
                            send the actual request (not the preflight) using credentials.
                          nullable: true
                          type: boolean
                        allowHeaders:
                          description: List of HTTP headers that can be used when
                            requesting the resource.
                          items:
                            type: string
                          type: array
                        allowMethods:
                          description: List of HTTP methods allowed to access the
                            resource.
                          items:
                            type: string
                          type: array
                        allowOrigin:
                          items:
                            type: string
                          type: array
                        allowOrigins:
                          description: String patterns that match allowed origins.
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          type: array
                        exposeHeaders:
                          description: A list of HTTP headers that the browsers are
                            allowed to access.
                          items:
                            type: string
                          type: array
                        maxAge:
                          description: Specifies how long the results of a preflight
                            request can be cached.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        unmatchedPreflights:
                          description: |-
                            Indicates whether preflight requests not matching the configured allowed origin shouldn't be forwarded to the upstream.

                            Valid Options: FORWARD, IGNORE
                          enum:
                          - UNSPECIFIED
                          - FORWARD
                          - IGNORE
                          type: string
                      type: object
                    delegate:
                      description: Delegate is used to specify the particular VirtualService
                        which can be used to define delegate HTTPRoute.
                      properties:
                        name:
                          description: Name specifies the name of the delegate VirtualService.
                          type: string
                        namespace:
                          description: Namespace specifies the namespace where the
                            delegate VirtualService resides.
                          type: string
                      type: object
                    directResponse:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      properties:
                        body:
                          description: Specifies the content of the response body.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - string
                              - required:
                                - bytes
                          - required:
                            - string
                          - required:
                            - bytes
                          properties:
                            bytes:
                              description: response body as base64 encoded bytes.
                              format: binary
                              type: string
                            string:
                              type: string
                          type: object
                        status:
                          description: Specifies the HTTP response status to be returned.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - status
                      type: object
                    fault:
                      description: Fault injection policy to apply on HTTP traffic
                        at the client side.
                      properties:
                        abort:
                          description: Abort Http request attempts and return error
                            codes back to downstream service, giving the impression
                            that the upstream service is faulty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpStatus
                              - required:
                                - grpcStatus
                              - required:
                                - http2Error
                          - required:
                            - httpStatus
                          - required:
                            - grpcStatus
                          - required:
                            - http2Error
                          properties:
                            grpcStatus:
                              description: GRPC status code to use to abort the request.
                              type: string
                            http2Error:
                              type: string
                            httpStatus:
                              description: HTTP status code to use to abort the Http
                                request.
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests to be aborted with
                                the error code provided.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                        delay:
                          description: Delay requests before forwarding, emulating
                            various failures such as network issues, overloaded upstream
                            service, etc.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - fixedDelay
                              - required:
                                - exponentialDelay
                          - required:
                            - fixedDelay
                          - required:
                            - exponentialDelay
                          properties:
                            exponentialDelay:
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            fixedDelay:
                              description: Add a fixed delay before forwarding the
                                request.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            percent:
                              description: Percentage of requests on which the delay
                                will be injected (0-100).
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests on which the delay
                                will be injected.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                      type: object
                    headers:
                      properties:
                        request:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        response:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                      type: object
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          authority:
                            description: 'HTTP Authority values are case-sensitive
                              and formatted as follows: - `exact: "value"` for exact
                              string match - `prefix: "value"` for prefix-based match
                              - `regex: "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          headers:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: The header keys must be lowercase and use
                              hyphen as the separator, e.g.
                            type: object
                          ignoreUriCase:
                            description: Flag to specify whether the URI matching
                              should be case-insensitive.
                            type: boolean
                          method:
                            description: 'HTTP Method values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          name:
                            description: The name assigned to a match.
                            type: string
                          port:
                            description: Specifies the ports on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          queryParams:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: Query parameters for matching.
                            type: object
                          scheme:
                            description: 'URI Scheme values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to source (client) workloads with the given
                              labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          statPrefix:
                            description: The human readable prefix to use when emitting
                              statistics for this route.
                            type: string
                          uri:
                            description: 'URI to match values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          withoutHeaders:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: withoutHeader has the same syntax with the
                              header, but has opposite meaning.
                            type: object
                        type: object
                      type: array
                    mirror:
                      description: Mirror HTTP traffic to a another destination in
                        addition to forwarding the requests to the intended destination.
                      properties:
                        host:
                          description: The name of a service from the service registry.
                          type: string
                        port:
                          description: Specifies the port on the host that is being
                            addressed.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        subset:
                          description: The name of a subset within the service.
                          type: string
                      required:
                      - host
                      type: object
                    mirror_percent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercentage:
                      description: Percentage of the traffic to be mirrored by the
                        `mirror` field.
                      properties:
                        value:
                          format: double
                          type: number
                      type: object
                    mirrors:
                      description: Specifies the destinations to mirror HTTP traffic
                        in addition to the original destination.
                      items:
                        properties:
                          destination:
                            description: Destination specifies the target of the mirror
                              operation.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          percentage:
                            description: Percentage of the traffic to be mirrored
                              by the `destination` field.
                            properties:
                              value:
                                format: double
                                type: number
                            type: object
                        required:
                        - destination
                        type: object
                      type: array
                    name:
                      description: The name assigned to the route for debugging purposes.
                      type: string
                    redirect:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - port
                          - required:
                            - derivePort
                      - required:
                        - port
                      - required:
                        - derivePort
                      properties:
                        authority:
                          description: On a redirect, overwrite the Authority/Host
                            portion of the URL with this value.
                          type: string
                        derivePort:
                          description: |-
                            On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.

                            Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
                          enum:
                          - FROM_PROTOCOL_DEFAULT
                          - FROM_REQUEST_PORT
                          type: string
                        port:
                          description: On a redirect, overwrite the port portion of
                            the URL with this value.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        redirectCode:
                          description: On a redirect, Specifies the HTTP status code
                            to use in the redirect response.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        scheme:
                          description: On a redirect, overwrite the scheme portion
                            of the URL with this value.
                          type: string
                        uri:
                          description: On a redirect, overwrite the Path portion of
                            the URL with this value.
                          type: string
                      type: object
                    retries:
                      description: Retry policy for HTTP requests.
                      properties:
                        attempts:
                          description: Number of retries to be allowed for a given
                            request.
                          format: int32
                          type: integer
                        perTryTimeout:
                          description: Timeout per attempt for a given request, including
                            the initial call and any retries.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        retryOn:
                          description: Specifies the conditions under which retry
                            takes place.
                          type: string
                        retryRemoteLocalities:
                          description: Flag to specify whether the retries should
                            retry to other localities.
                          nullable: true
                          type: boolean
                      type: object
                    rewrite:
                      description: Rewrite HTTP URIs and Authority headers.
                      properties:
                        authority:
                          description: rewrite the Authority/Host header with this
                            value.
                          type: string
                        uri:
                          description: rewrite the path (or the prefix) portion of
                            the URI with this value.
                          type: string
                        uriRegexRewrite:
                          description: rewrite the path portion of the URI with the
                            specified regex.
                          properties:
                            match:
                              description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                              type: string
                            rewrite:
                              description: The string that should replace into matching
                                portions of original URI.
                              type: string
                          type: object
                      type: object
                    route:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          headers:
                            properties:
                              request:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              response:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                    timeout:
                      description: Timeout for HTTP requests, default is disabled.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  type: object
                type: array
              tcp:
                description: An ordered list of route rules for opaque TCP traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          sourceSubnet:
                            type: string
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  type: object
                type: array
              tls:
                description: An ordered list of route rule for non-terminated TLS
                  & HTTPS traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sniHosts:
                            description: SNI (server name indicator) to match on.
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                        required:
                        - sniHosts
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  required:
                  - match
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: The names of gateways and sidecars that should apply these routes
      jsonPath: .spec.gateways
      name: Gateways
      type: string
    - description: The destination hosts to which traffic is being sent
      jsonPath: .spec.hosts
      name: Hosts
      type: string
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting label/content routing, sni routing,
              etc. See more details at: https://istio.io/docs/reference/config/networking/virtual-service.html'
            properties:
              exportTo:
                description: A list of namespaces to which this virtual service is
                  exported.
                items:
                  type: string
                type: array
              gateways:
                description: The names of gateways and sidecars that should apply
                  these routes.
                items:
                  type: string
                type: array
              hosts:
                description: The destination hosts to which traffic is being sent.
                items:
                  type: string
                type: array
              http:
                description: An ordered list of route rules for HTTP traffic.
                items:
                  properties:
                    corsPolicy:
                      description: Cross-Origin Resource Sharing policy (CORS).
                      properties:
                        allowCredentials:
                          description: Indicates whether the caller is allowed to
                            send the actual request (not the preflight) using credentials.
                          nullable: true
                          type: boolean
                        allowHeaders:
                          description: List of HTTP headers that can be used when
                            requesting the resource.
                          items:
                            type: string
                          type: array
                        allowMethods:
                          description: List of HTTP methods allowed to access the
                            resource.
                          items:
                            type: string
                          type: array
                        allowOrigin:
                          items:
                            type: string
                          type: array
                        allowOrigins:
                          description: String patterns that match allowed origins.
                          items:
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          type: array
                        exposeHeaders:
                          description: A list of HTTP headers that the browsers are
                            allowed to access.
                          items:
                            type: string
                          type: array
                        maxAge:
                          description: Specifies how long the results of a preflight
                            request can be cached.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        unmatchedPreflights:
                          description: |-
                            Indicates whether preflight requests not matching the configured allowed origin shouldn't be forwarded to the upstream.

                            Valid Options: FORWARD, IGNORE
                          enum:
                          - UNSPECIFIED
                          - FORWARD
                          - IGNORE
                          type: string
                      type: object
                    delegate:
                      description: Delegate is used to specify the particular VirtualService
                        which can be used to define delegate HTTPRoute.
                      properties:
                        name:
                          description: Name specifies the name of the delegate VirtualService.
                          type: string
                        namespace:
                          description: Namespace specifies the namespace where the
                            delegate VirtualService resides.
                          type: string
                      type: object
                    directResponse:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      properties:
                        body:
                          description: Specifies the content of the response body.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - string
                              - required:
                                - bytes
                          - required:
                            - string
                          - required:
                            - bytes
                          properties:
                            bytes:
                              description: response body as base64 encoded bytes.
                              format: binary
                              type: string
                            string:
                              type: string
                          type: object
                        status:
                          description: Specifies the HTTP response status to be returned.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      required:
                      - status
                      type: object
                    fault:
                      description: Fault injection policy to apply on HTTP traffic
                        at the client side.
                      properties:
                        abort:
                          description: Abort Http request attempts and return error
                            codes back to downstream service, giving the impression
                            that the upstream service is faulty.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - httpStatus
                              - required:
                                - grpcStatus
                              - required:
                                - http2Error
                          - required:
                            - httpStatus
                          - required:
                            - grpcStatus
                          - required:
                            - http2Error
                          properties:
                            grpcStatus:
                              description: GRPC status code to use to abort the request.
                              type: string
                            http2Error:
                              type: string
                            httpStatus:
                              description: HTTP status code to use to abort the Http
                                request.
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests to be aborted with
                                the error code provided.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                        delay:
                          description: Delay requests before forwarding, emulating
                            various failures such as network issues, overloaded upstream
                            service, etc.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - fixedDelay
                              - required:
                                - exponentialDelay
                          - required:
                            - fixedDelay
                          - required:
                            - exponentialDelay
                          properties:
                            exponentialDelay:
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            fixedDelay:
                              description: Add a fixed delay before forwarding the
                                request.
                              type: string
                              x-kubernetes-validations:
                              - message: must be a valid duration greater than 1ms
                                rule: duration(self) >= duration('1ms')
                            percent:
                              description: Percentage of requests on which the delay
                                will be injected (0-100).
                              format: int32
                              type: integer
                            percentage:
                              description: Percentage of requests on which the delay
                                will be injected.
                              properties:
                                value:
                                  format: double
                                  type: number
                              type: object
                          type: object
                      type: object
                    headers:
                      properties:
                        request:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        response:
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              type: object
                            remove:
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                      type: object
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          authority:
                            description: 'HTTP Authority values are case-sensitive
                              and formatted as follows: - `exact: "value"` for exact
                              string match - `prefix: "value"` for prefix-based match
                              - `regex: "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          headers:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: The header keys must be lowercase and use
                              hyphen as the separator, e.g.
                            type: object
                          ignoreUriCase:
                            description: Flag to specify whether the URI matching
                              should be case-insensitive.
                            type: boolean
                          method:
                            description: 'HTTP Method values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          name:
                            description: The name assigned to a match.
                            type: string
                          port:
                            description: Specifies the ports on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          queryParams:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: Query parameters for matching.
                            type: object
                          scheme:
                            description: 'URI Scheme values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to source (client) workloads with the given
                              labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          statPrefix:
                            description: The human readable prefix to use when emitting
                              statistics for this route.
                            type: string
                          uri:
                            description: 'URI to match values are case-sensitive and
                              formatted as follows: - `exact: "value"` for exact string
                              match - `prefix: "value"` for prefix-based match - `regex:
                              "value"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - exact
                                - required:
                                  - prefix
                                - required:
                                  - regex
                            - required:
                              - exact
                            - required:
                              - prefix
                            - required:
                              - regex
                            properties:
                              exact:
                                type: string
                              prefix:
                                type: string
                              regex:
                                description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                type: string
                            type: object
                          withoutHeaders:
                            additionalProperties:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  type: string
                                prefix:
                                  type: string
                                regex:
                                  description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                                  type: string
                              type: object
                            description: withoutHeader has the same syntax with the
                              header, but has opposite meaning.
                            type: object
                        type: object
                      type: array
                    mirror:
                      description: Mirror HTTP traffic to a another destination in
                        addition to forwarding the requests to the intended destination.
                      properties:
                        host:
                          description: The name of a service from the service registry.
                          type: string
                        port:
                          description: Specifies the port on the host that is being
                            addressed.
                          properties:
                            number:
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        subset:
                          description: The name of a subset within the service.
                          type: string
                      required:
                      - host
                      type: object
                    mirror_percent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercent:
                      maximum: 4294967295
                      minimum: 0
                      nullable: true
                      type: integer
                    mirrorPercentage:
                      description: Percentage of the traffic to be mirrored by the
                        `mirror` field.
                      properties:
                        value:
                          format: double
                          type: number
                      type: object
                    mirrors:
                      description: Specifies the destinations to mirror HTTP traffic
                        in addition to the original destination.
                      items:
                        properties:
                          destination:
                            description: Destination specifies the target of the mirror
                              operation.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          percentage:
                            description: Percentage of the traffic to be mirrored
                              by the `destination` field.
                            properties:
                              value:
                                format: double
                                type: number
                            type: object
                        required:
                        - destination
                        type: object
                      type: array
                    name:
                      description: The name assigned to the route for debugging purposes.
                      type: string
                    redirect:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - port
                          - required:
                            - derivePort
                      - required:
                        - port
                      - required:
                        - derivePort
                      properties:
                        authority:
                          description: On a redirect, overwrite the Authority/Host
                            portion of the URL with this value.
                          type: string
                        derivePort:
                          description: |-
                            On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS.

                            Valid Options: FROM_PROTOCOL_DEFAULT, FROM_REQUEST_PORT
                          enum:
                          - FROM_PROTOCOL_DEFAULT
                          - FROM_REQUEST_PORT
                          type: string
                        port:
                          description: On a redirect, overwrite the port portion of
                            the URL with this value.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        redirectCode:
                          description: On a redirect, Specifies the HTTP status code
                            to use in the redirect response.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        scheme:
                          description: On a redirect, overwrite the scheme portion
                            of the URL with this value.
                          type: string
                        uri:
                          description: On a redirect, overwrite the Path portion of
                            the URL with this value.
                          type: string
                      type: object
                    retries:
                      description: Retry policy for HTTP requests.
                      properties:
                        attempts:
                          description: Number of retries to be allowed for a given
                            request.
                          format: int32
                          type: integer
                        perTryTimeout:
                          description: Timeout per attempt for a given request, including
                            the initial call and any retries.
                          type: string
                          x-kubernetes-validations:
                          - message: must be a valid duration greater than 1ms
                            rule: duration(self) >= duration('1ms')
                        retryOn:
                          description: Specifies the conditions under which retry
                            takes place.
                          type: string
                        retryRemoteLocalities:
                          description: Flag to specify whether the retries should
                            retry to other localities.
                          nullable: true
                          type: boolean
                      type: object
                    rewrite:
                      description: Rewrite HTTP URIs and Authority headers.
                      properties:
                        authority:
                          description: rewrite the Authority/Host header with this
                            value.
                          type: string
                        uri:
                          description: rewrite the path (or the prefix) portion of
                            the URI with this value.
                          type: string
                        uriRegexRewrite:
                          description: rewrite the path portion of the URI with the
                            specified regex.
                          properties:
                            match:
                              description: '[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).'
                              type: string
                            rewrite:
                              description: The string that should replace into matching
                                portions of original URI.
                              type: string
                          type: object
                      type: object
                    route:
                      description: A HTTP rule can either return a direct_response,
                        redirect or forward (default) traffic.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          headers:
                            properties:
                              request:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              response:
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  remove:
                                    items:
                                      type: string
                                    type: array
                                  set:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                    timeout:
                      description: Timeout for HTTP requests, default is disabled.
                      type: string
                      x-kubernetes-validations:
                      - message: must be a valid duration greater than 1ms
                        rule: duration(self) >= duration('1ms')
                  type: object
                type: array
              tcp:
                description: An ordered list of route rules for opaque TCP traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                          sourceSubnet:
                            type: string
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  type: object
                type: array
              tls:
                description: An ordered list of route rule for non-terminated TLS
                  & HTTPS traffic.
                items:
                  properties:
                    match:
                      description: Match conditions to be satisfied for the rule to
                        be activated.
                      items:
                        properties:
                          destinationSubnets:
                            description: IPv4 or IPv6 ip addresses of destination
                              with optional subnet.
                            items:
                              type: string
                            type: array
                          gateways:
                            description: Names of gateways where the rule should be
                              applied.
                            items:
                              type: string
                            type: array
                          port:
                            description: Specifies the port on the host that is being
                              addressed.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          sniHosts:
                            description: SNI (server name indicator) to match on.
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            additionalProperties:
                              type: string
                            description: One or more labels that constrain the applicability
                              of a rule to workloads with the given labels.
                            type: object
                          sourceNamespace:
                            description: Source namespace constraining the applicability
                              of a rule to workloads in that namespace.
                            type: string
                        required:
                        - sniHosts
                        type: object
                      type: array
                    route:
                      description: The destination to which the connection should
                        be forwarded to.
                      items:
                        properties:
                          destination:
                            description: Destination uniquely identifies the instances
                              of a service to which the request/connection should
                              be forwarded to.
                            properties:
                              host:
                                description: The name of a service from the service
                                  registry.
                                type: string
                              port:
                                description: Specifies the port on the host that is
                                  being addressed.
                                properties:
                                  number:
                                    maximum: 4294967295
                                    minimum: 0
                                    type: integer
                                type: object
                              subset:
                                description: The name of a subset within the service.
                                type: string
                            required:
                            - host
                            type: object
                          weight:
                            description: Weight specifies the relative proportion
                              of traffic to be forwarded to the destination.
                            format: int32
                            type: integer
                        required:
                        - destination
                        type: object
                      type: array
                  required:
                  - match
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: wasmplugins.extensions.istio.io
spec:
  group: extensions.istio.io
  names:
    categories:
    - istio-io
    - extensions-istio-io
    kind: WasmPlugin
    listKind: WasmPluginList
    plural: wasmplugins
    singular: wasmplugin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Extend the functionality provided by the Istio proxy through
              WebAssembly filters. See more details at: https://istio.io/docs/reference/config/proxy_extensions/wasm-plugin.html'
            properties:
              failStrategy:
                description: |-
                  Specifies the failure behavior for the plugin due to fatal errors.

                  Valid Options: FAIL_CLOSE, FAIL_OPEN
                enum:
                - FAIL_CLOSE
                - FAIL_OPEN
                type: string
              imagePullPolicy:
                description: |-
                  The pull behaviour to be applied when fetching Wasm module by either OCI image or `http/https`.

                  Valid Options: IfNotPresent, Always
                enum:
                - UNSPECIFIED_POLICY
                - IfNotPresent
                - Always
                type: string
              imagePullSecret:
                description: Credentials to use for OCI image pulling.
                maxLength: 253
                minLength: 1
                type: string
              match:
                description: Specifies the criteria to determine which traffic is
                  passed to WasmPlugin.
                items:
                  properties:
                    mode:
                      description: |-
                        Criteria for selecting traffic by their direction.

                        Valid Options: CLIENT, SERVER, CLIENT_AND_SERVER
                      enum:
                      - UNDEFINED
                      - CLIENT
                      - SERVER
                      - CLIENT_AND_SERVER
                      type: string
                    ports:
                      description: Criteria for selecting traffic by their destination
                        port.
                      items:
                        properties:
                          number:
                            maximum: 65535
                            minimum: 1
                            type: integer
                        required:
                        - number
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - number
                      x-kubernetes-list-type: map
                  type: object
                type: array
              phase:
                description: |-
                  Determines where in the filter chain this `WasmPlugin` is to be injected.

                  Valid Options: AUTHN, AUTHZ, STATS
                enum:
                - UNSPECIFIED_PHASE
                - AUTHN
                - AUTHZ
                - STATS
                type: string
              pluginConfig:
                description: The configuration that will be passed on to the plugin.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              pluginName:
                description: The plugin name to be used in the Envoy configuration
                  (used to be called `rootID`).
                maxLength: 256
                minLength: 1
                type: string
              priority:
                description: Determines ordering of `WasmPlugins` in the same `phase`.
                format: int32
                nullable: true
                type: integer
              selector:
                description: Criteria used to select the specific set of pods/VMs
                  on which this plugin configuration should be applied.
                properties:
                  matchLabels:
                    additionalProperties:
                      maxLength: 63
                      type: string
                      x-kubernetes-validations:
                      - message: wildcard not allowed in label value match
                        rule: '!self.contains(''*'')'
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which a policy should be applied.
                    maxProperties: 4096
                    type: object
                    x-kubernetes-validations:
                    - message: wildcard not allowed in label key match
                      rule: self.all(key, !key.contains('*'))
                    - message: key must not be empty
                      rule: self.all(key, key.size() != 0)
                type: object
              sha256:
                description: SHA256 checksum that will be used to verify Wasm module
                  or OCI container.
                pattern: (^$|^[a-f0-9]{64}$)
                type: string
              targetRef:
                properties:
                  group:
                    description: group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: namespace is the namespace of the referent.
                    type: string
                    x-kubernetes-validations:
                    - message: cross namespace referencing is not currently supported
                      rule: self.size() == 0
                required:
                - kind
                - name
                type: object
                x-kubernetes-validations:
                - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                    gateway.networking.k8s.io/Gateway
                  rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                    [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
              targetRefs:
                description: Optional.
                items:
                  properties:
                    group:
                      description: group is the group of the target resource.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: kind is kind of the target resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: name is the name of the target resource.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: namespace is the namespace of the referent.
                      type: string
                      x-kubernetes-validations:
                      - message: cross namespace referencing is not currently supported
                        rule: self.size() == 0
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-validations:
                  - message: Support kinds are core/Service, networking.istio.io/ServiceEntry,
                      gateway.networking.k8s.io/Gateway
                    rule: '[self.group, self.kind] in [[''core'',''Service''], ['''',''Service''],
                      [''gateway.networking.k8s.io'',''Gateway''], [''networking.istio.io'',''ServiceEntry'']]'
                maxItems: 16
                type: array
              type:
                description: |-
                  Specifies the type of Wasm Extension to be used.

                  Valid Options: HTTP, NETWORK
                enum:
                - UNSPECIFIED_PLUGIN_TYPE
                - HTTP
                - NETWORK
                type: string
              url:
                description: URL of a Wasm module or OCI container.
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: url must have schema one of [http, https, file, oci]
                  rule: 'isURL(self) ? (url(self).getScheme() in ['''', ''http'',
                    ''https'', ''oci'', ''file'']) : (isURL(''http://'' + self) &&
                    url(''http://'' +self).getScheme() in ['''', ''http'', ''https'',
                    ''oci'', ''file''])'
              verificationKey:
                type: string
              vmConfig:
                description: Configuration for a Wasm VM.
                properties:
                  env:
                    description: Specifies environment variables to be injected to
                      this VM.
                    items:
                      properties:
                        name:
                          description: Name of the environment variable.
                          maxLength: 256
                          minLength: 1
                          type: string
                        value:
                          description: Value for the environment variable.
                          maxLength: 2048
                          type: string
                        valueFrom:
                          description: |-
                            Source for the environment variable's value.

                            Valid Options: INLINE, HOST
                          enum:
                          - INLINE
                          - HOST
                          type: string
                      required:
                      - name
                      type: object
                      x-kubernetes-validations:
                      - message: value may only be set when valueFrom is INLINE
                        rule: '(has(self.valueFrom) ? self.valueFrom : '''') != ''HOST''
                          || !has(self.value)'
                    maxItems: 256
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                type: object
            required:
            - url
            type: object
            x-kubernetes-validations:
            - message: only one of targetRefs or selector can be set
              rule: (has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: workloadentries.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: WorkloadEntry
    listKind: WorkloadEntryList
    plural: workloadentries
    shortNames:
    - we
    singular: workloadentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Address associated with the network endpoint.
      jsonPath: .spec.address
      name: Address
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting VMs onboarded into the mesh. See
              more details at: https://istio.io/docs/reference/config/networking/workload-entry.html'
            properties:
              address:
                description: Address associated with the network endpoint without
                  the port.
                maxLength: 256
                type: string
                x-kubernetes-validations:
                - message: UDS must be an absolute path or abstract socket
                  rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) == ''/''
                    || self.substring(7,8) == ''@'') : true'
                - message: UDS may not be a dir
                  rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'') : true'
              labels:
                additionalProperties:
                  type: string
                description: One or more labels associated with the endpoint.
                maxProperties: 256
                type: object
              locality:
                description: The locality associated with the endpoint.
                maxLength: 2048
                type: string
              network:
                description: Network enables Istio to group endpoints resident in
                  the same L3 domain/network.
                maxLength: 2048
                type: string
              ports:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                  x-kubernetes-validations:
                  - message: port must be between 1-65535
                    rule: 0 < self && self <= 65535
                description: Set of ports associated with the endpoint.
                maxProperties: 128
                type: object
                x-kubernetes-validations:
                - message: port name must be valid
                  rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
              serviceAccount:
                description: The service account associated with the workload if a
                  sidecar is present in the workload.
                maxLength: 253
                type: string
              weight:
                description: The load balancing weight associated with the endpoint.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
            x-kubernetes-validations:
            - message: Address is required
              rule: has(self.address) || has(self.network)
            - message: UDS may not include ports
              rule: '(has(self.address) && self.address.startsWith(''unix://'')) ?
                !has(self.ports) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Address associated with the network endpoint.
      jsonPath: .spec.address
      name: Address
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting VMs onboarded into the mesh. See
              more details at: https://istio.io/docs/reference/config/networking/workload-entry.html'
            properties:
              address:
                description: Address associated with the network endpoint without
                  the port.
                maxLength: 256
                type: string
                x-kubernetes-validations:
                - message: UDS must be an absolute path or abstract socket
                  rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) == ''/''
                    || self.substring(7,8) == ''@'') : true'
                - message: UDS may not be a dir
                  rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'') : true'
              labels:
                additionalProperties:
                  type: string
                description: One or more labels associated with the endpoint.
                maxProperties: 256
                type: object
              locality:
                description: The locality associated with the endpoint.
                maxLength: 2048
                type: string
              network:
                description: Network enables Istio to group endpoints resident in
                  the same L3 domain/network.
                maxLength: 2048
                type: string
              ports:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                  x-kubernetes-validations:
                  - message: port must be between 1-65535
                    rule: 0 < self && self <= 65535
                description: Set of ports associated with the endpoint.
                maxProperties: 128
                type: object
                x-kubernetes-validations:
                - message: port name must be valid
                  rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
              serviceAccount:
                description: The service account associated with the workload if a
                  sidecar is present in the workload.
                maxLength: 253
                type: string
              weight:
                description: The load balancing weight associated with the endpoint.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
            x-kubernetes-validations:
            - message: Address is required
              rule: has(self.address) || has(self.network)
            - message: UDS may not include ports
              rule: '(has(self.address) && self.address.startsWith(''unix://'')) ?
                !has(self.ports) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Address associated with the network endpoint.
      jsonPath: .spec.address
      name: Address
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Configuration affecting VMs onboarded into the mesh. See
              more details at: https://istio.io/docs/reference/config/networking/workload-entry.html'
            properties:
              address:
                description: Address associated with the network endpoint without
                  the port.
                maxLength: 256
                type: string
                x-kubernetes-validations:
                - message: UDS must be an absolute path or abstract socket
                  rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) == ''/''
                    || self.substring(7,8) == ''@'') : true'
                - message: UDS may not be a dir
                  rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'') : true'
              labels:
                additionalProperties:
                  type: string
                description: One or more labels associated with the endpoint.
                maxProperties: 256
                type: object
              locality:
                description: The locality associated with the endpoint.
                maxLength: 2048
                type: string
              network:
                description: Network enables Istio to group endpoints resident in
                  the same L3 domain/network.
                maxLength: 2048
                type: string
              ports:
                additionalProperties:
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                  x-kubernetes-validations:
                  - message: port must be between 1-65535
                    rule: 0 < self && self <= 65535
                description: Set of ports associated with the endpoint.
                maxProperties: 128
                type: object
                x-kubernetes-validations:
                - message: port name must be valid
                  rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
              serviceAccount:
                description: The service account associated with the workload if a
                  sidecar is present in the workload.
                maxLength: 253
                type: string
              weight:
                description: The load balancing weight associated with the endpoint.
                maximum: 4294967295
                minimum: 0
                type: integer
            type: object
            x-kubernetes-validations:
            - message: Address is required
              rule: has(self.address) || has(self.network)
            - message: UDS may not include ports
              rule: '(has(self.address) && self.address.startsWith(''unix://'')) ?
                !has(self.ports) : true'
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
  name: workloadgroups.networking.istio.io
spec:
  group: networking.istio.io
  names:
    categories:
    - istio-io
    - networking-istio-io
    kind: WorkloadGroup
    listKind: WorkloadGroupList
    plural: workloadgroups
    shortNames:
    - wg
    singular: workloadgroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Describes a collection of workload instances. See more details
              at: https://istio.io/docs/reference/config/networking/workload-group.html'
            properties:
              metadata:
                description: Metadata that will be used for all corresponding `WorkloadEntries`.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                type: object
              probe:
                description: '`ReadinessProbe` describes the configuration the user
                  must provide for healthchecking on their workload.'
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - httpGet
                    - required:
                      - tcpSocket
                    - required:
                      - exec
                - required:
                  - httpGet
                - required:
                  - tcpSocket
                - required:
                  - exec
                properties:
                  exec:
                    description: Health is determined by how the command that is executed
                      exited.
                    properties:
                      command:
                        description: Command to run.
                        items:
                          minLength: 1
                          type: string
                        type: array
                    required:
                    - command
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded.
                    format: int32
                    minimum: 0
                    type: integer
                  httpGet:
                    description: '`httpGet` is performed to a given endpoint and the
                      status/able to connect determines health.'
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP.
                        type: string
                      httpHeaders:
                        description: Headers the proxy will pass on to make the request.
                        items:
                          properties:
                            name:
                              pattern: ^[-_A-Za-z0-9]+$
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        description: Port on which the endpoint lives.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      scheme:
                        type: string
                        x-kubernetes-validations:
                        - message: scheme must be one of [HTTP, HTTPS]
                          rule: self in ['', 'HTTP', 'HTTPS']
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: Number of seconds after the container has started
                      before readiness probes are initiated.
                    format: int32
                    minimum: 0
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    format: int32
                    minimum: 0
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed.
                    format: int32
                    minimum: 0
                    type: integer
                  tcpSocket:
                    description: Health is determined by if the proxy is able to connect.
                    properties:
                      host:
                        type: string
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                    required:
                    - port
                    type: object
                  timeoutSeconds:
                    description: Number of seconds after which the probe times out.
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              template:
                description: Template to be used for the generation of `WorkloadEntry`
                  resources that belong to this `WorkloadGroup`.
                properties:
                  address:
                    description: Address associated with the network endpoint without
                      the port.
                    maxLength: 256
                    type: string
                    x-kubernetes-validations:
                    - message: UDS must be an absolute path or abstract socket
                      rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) ==
                        ''/'' || self.substring(7,8) == ''@'') : true'
                    - message: UDS may not be a dir
                      rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                        : true'
                  labels:
                    additionalProperties:
                      type: string
                    description: One or more labels associated with the endpoint.
                    maxProperties: 256
                    type: object
                  locality:
                    description: The locality associated with the endpoint.
                    maxLength: 2048
                    type: string
                  network:
                    description: Network enables Istio to group endpoints resident
                      in the same L3 domain/network.
                    maxLength: 2048
                    type: string
                  ports:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    description: Set of ports associated with the endpoint.
                    maxProperties: 128
                    type: object
                    x-kubernetes-validations:
                    - message: port name must be valid
                      rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                  serviceAccount:
                    description: The service account associated with the workload
                      if a sidecar is present in the workload.
                    maxLength: 253
                    type: string
                  weight:
                    description: The load balancing weight associated with the endpoint.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
                x-kubernetes-validations:
                - message: UDS may not include ports
                  rule: '(has(self.address) && self.address.startsWith(''unix://''))
                    ? !has(self.ports) : true'
            required:
            - template
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha3
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Describes a collection of workload instances. See more details
              at: https://istio.io/docs/reference/config/networking/workload-group.html'
            properties:
              metadata:
                description: Metadata that will be used for all corresponding `WorkloadEntries`.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                type: object
              probe:
                description: '`ReadinessProbe` describes the configuration the user
                  must provide for healthchecking on their workload.'
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - httpGet
                    - required:
                      - tcpSocket
                    - required:
                      - exec
                - required:
                  - httpGet
                - required:
                  - tcpSocket
                - required:
                  - exec
                properties:
                  exec:
                    description: Health is determined by how the command that is executed
                      exited.
                    properties:
                      command:
                        description: Command to run.
                        items:
                          minLength: 1
                          type: string
                        type: array
                    required:
                    - command
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded.
                    format: int32
                    minimum: 0
                    type: integer
                  httpGet:
                    description: '`httpGet` is performed to a given endpoint and the
                      status/able to connect determines health.'
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP.
                        type: string
                      httpHeaders:
                        description: Headers the proxy will pass on to make the request.
                        items:
                          properties:
                            name:
                              pattern: ^[-_A-Za-z0-9]+$
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        description: Port on which the endpoint lives.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      scheme:
                        type: string
                        x-kubernetes-validations:
                        - message: scheme must be one of [HTTP, HTTPS]
                          rule: self in ['', 'HTTP', 'HTTPS']
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: Number of seconds after the container has started
                      before readiness probes are initiated.
                    format: int32
                    minimum: 0
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    format: int32
                    minimum: 0
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed.
                    format: int32
                    minimum: 0
                    type: integer
                  tcpSocket:
                    description: Health is determined by if the proxy is able to connect.
                    properties:
                      host:
                        type: string
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                    required:
                    - port
                    type: object
                  timeoutSeconds:
                    description: Number of seconds after which the probe times out.
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              template:
                description: Template to be used for the generation of `WorkloadEntry`
                  resources that belong to this `WorkloadGroup`.
                properties:
                  address:
                    description: Address associated with the network endpoint without
                      the port.
                    maxLength: 256
                    type: string
                    x-kubernetes-validations:
                    - message: UDS must be an absolute path or abstract socket
                      rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) ==
                        ''/'' || self.substring(7,8) == ''@'') : true'
                    - message: UDS may not be a dir
                      rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                        : true'
                  labels:
                    additionalProperties:
                      type: string
                    description: One or more labels associated with the endpoint.
                    maxProperties: 256
                    type: object
                  locality:
                    description: The locality associated with the endpoint.
                    maxLength: 2048
                    type: string
                  network:
                    description: Network enables Istio to group endpoints resident
                      in the same L3 domain/network.
                    maxLength: 2048
                    type: string
                  ports:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    description: Set of ports associated with the endpoint.
                    maxProperties: 128
                    type: object
                    x-kubernetes-validations:
                    - message: port name must be valid
                      rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                  serviceAccount:
                    description: The service account associated with the workload
                      if a sidecar is present in the workload.
                    maxLength: 253
                    type: string
                  weight:
                    description: The load balancing weight associated with the endpoint.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
                x-kubernetes-validations:
                - message: UDS may not include ports
                  rule: '(has(self.address) && self.address.startsWith(''unix://''))
                    ? !has(self.ports) : true'
            required:
            - template
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: 'Describes a collection of workload instances. See more details
              at: https://istio.io/docs/reference/config/networking/workload-group.html'
            properties:
              metadata:
                description: Metadata that will be used for all corresponding `WorkloadEntries`.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    maxProperties: 256
                    type: object
                type: object
              probe:
                description: '`ReadinessProbe` describes the configuration the user
                  must provide for healthchecking on their workload.'
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - httpGet
                    - required:
                      - tcpSocket
                    - required:
                      - exec
                - required:
                  - httpGet
                - required:
                  - tcpSocket
                - required:
                  - exec
                properties:
                  exec:
                    description: Health is determined by how the command that is executed
                      exited.
                    properties:
                      command:
                        description: Command to run.
                        items:
                          minLength: 1
                          type: string
                        type: array
                    required:
                    - command
                    type: object
                  failureThreshold:
                    description: Minimum consecutive failures for the probe to be
                      considered failed after having succeeded.
                    format: int32
                    minimum: 0
                    type: integer
                  httpGet:
                    description: '`httpGet` is performed to a given endpoint and the
                      status/able to connect determines health.'
                    properties:
                      host:
                        description: Host name to connect to, defaults to the pod
                          IP.
                        type: string
                      httpHeaders:
                        description: Headers the proxy will pass on to make the request.
                        items:
                          properties:
                            name:
                              pattern: ^[-_A-Za-z0-9]+$
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      path:
                        description: Path to access on the HTTP server.
                        type: string
                      port:
                        description: Port on which the endpoint lives.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                      scheme:
                        type: string
                        x-kubernetes-validations:
                        - message: scheme must be one of [HTTP, HTTPS]
                          rule: self in ['', 'HTTP', 'HTTPS']
                    required:
                    - port
                    type: object
                  initialDelaySeconds:
                    description: Number of seconds after the container has started
                      before readiness probes are initiated.
                    format: int32
                    minimum: 0
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the probe.
                    format: int32
                    minimum: 0
                    type: integer
                  successThreshold:
                    description: Minimum consecutive successes for the probe to be
                      considered successful after having failed.
                    format: int32
                    minimum: 0
                    type: integer
                  tcpSocket:
                    description: Health is determined by if the proxy is able to connect.
                    properties:
                      host:
                        type: string
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                        x-kubernetes-validations:
                        - message: port must be between 1-65535
                          rule: 0 < self && self <= 65535
                    required:
                    - port
                    type: object
                  timeoutSeconds:
                    description: Number of seconds after which the probe times out.
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              template:
                description: Template to be used for the generation of `WorkloadEntry`
                  resources that belong to this `WorkloadGroup`.
                properties:
                  address:
                    description: Address associated with the network endpoint without
                      the port.
                    maxLength: 256
                    type: string
                    x-kubernetes-validations:
                    - message: UDS must be an absolute path or abstract socket
                      rule: 'self.startsWith(''unix://'') ? (self.substring(7,8) ==
                        ''/'' || self.substring(7,8) == ''@'') : true'
                    - message: UDS may not be a dir
                      rule: 'self.startsWith(''unix://'') ? !self.endsWith(''/'')
                        : true'
                  labels:
                    additionalProperties:
                      type: string
                    description: One or more labels associated with the endpoint.
                    maxProperties: 256
                    type: object
                  locality:
                    description: The locality associated with the endpoint.
                    maxLength: 2048
                    type: string
                  network:
                    description: Network enables Istio to group endpoints resident
                      in the same L3 domain/network.
                    maxLength: 2048
                    type: string
                  ports:
                    additionalProperties:
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                      x-kubernetes-validations:
                      - message: port must be between 1-65535
                        rule: 0 < self && self <= 65535
                    description: Set of ports associated with the endpoint.
                    maxProperties: 128
                    type: object
                    x-kubernetes-validations:
                    - message: port name must be valid
                      rule: self.all(key, size(key) < 63 && key.matches('^[a-zA-Z0-9](?:[-a-zA-Z0-9]*[a-zA-Z0-9])?$'))
                  serviceAccount:
                    description: The service account associated with the workload
                      if a sidecar is present in the workload.
                    maxLength: 253
                    type: string
                  weight:
                    description: The load balancing weight associated with the endpoint.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
                x-kubernetes-validations:
                - message: UDS may not include ports
                  rule: '(has(self.address) && self.address.startsWith(''unix://''))
                    ? !has(self.ports) : true'
            required:
            - template
            type: object
          status:
            properties:
              conditions:
                description: Current service state of the resource.
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  type: object
                type: array
              observedGeneration:
                anyOf:
                - type: integer
                - type: string
                description: Resource Generation to which the Reconciled Condition
                  refers.
                x-kubernetes-int-or-string: true
              validationMessages:
                description: Includes any errors or warnings detected by Istio's analyzers.
                items:
                  properties:
                    documentationUrl:
                      description: A url pointing to the Istio documentation for this
                        specific error type.
                      type: string
                    level:
                      description: |-
                        Represents how severe a message is.

                        Valid Options: UNKNOWN, ERROR, WARNING, INFO
                      enum:
                      - UNKNOWN
                      - ERROR
                      - WARNING
                      - INFO
                      type: string
                    type:
                      properties:
                        code:
                          description: A 7 character code matching `^IST[0-9]{4}$`
                            intended to uniquely identify the message type.
                          type: string
                        name:
                          description: A human-readable name for the message type.
                          type: string
                      type: object
                  type: object
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istio-reader
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-reader
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
    release: istio-base
  name: istio-reader-service-account
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ztunnel
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ztunnel
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: ztunnel-1.24.0
  name: ztunnel
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod
  namespace: istio-system
rules:
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - watch
  - list
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - update
  - patch
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-ambient
rules:
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-repair-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istio-reader
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-reader
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istio-reader-clusterrole-istio-system
rules:
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  - telemetry.istio.io
  - extensions.istio.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - nodes
  - replicationcontrollers
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.x-k8s.io
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - list
  - watch
  - create
  - delete
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod-clusterrole-istio-system
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - config.istio.io
  - security.istio.io
  - networking.istio.io
  - authentication.istio.io
  - rbac.istio.io
  - telemetry.istio.io
  - extensions.istio.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - networking.istio.io
  resources:
  - workloadentries/status
  - serviceentries/status
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - security.istio.io
  resources:
  - authorizationpolicies/status
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - services
  - namespaces
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - backendtlspolicies/status
  - gatewayclasses/status
  - gateways/status
  - grpcroutes/status
  - httproutes/status
  - referencegrants/status
  - tcproutes/status
  - tlsroutes/status
  - udproutes/status
  verbs:
  - update
  - patch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceexports
  verbs:
  - get
  - watch
  - list
  - create
  - delete
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod-gateway-controller-istio-system
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - watch
  - list
  - update
  - patch
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingress
subjects:
- kind: ServiceAccount
  name: istio-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istiod
subjects:
- kind: ServiceAccount
  name: istiod
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    k8s-app: istio-cni-repair
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-ambient
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni-ambient
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    k8s-app: istio-cni-repair
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-repair-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-cni-repair-role
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istio-reader
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-reader
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istio-reader-clusterrole-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-reader-clusterrole-istio-system
subjects:
- kind: ServiceAccount
  name: istio-reader-service-account
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod-clusterrole-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-clusterrole-istio-system
subjects:
- kind: ServiceAccount
  name: istiod
  namespace: istio-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    release: istiod
  name: istiod-gateway-controller-istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istiod-gateway-controller-istio-system
subjects:
- kind: ServiceAccount
  name: istiod
  namespace: istio-system
---
apiVersion: v1
data:
  mesh: |-
    defaultConfig:
      discoveryAddress: istiod.istio-system.svc:15012
      image:
        imageType: distroless
      proxyMetadata:
        ISTIO_META_ENABLE_HBONE: "true"
    defaultProviders:
      metrics:
      - prometheus
    enablePrometheusMerge: true
    rootNamespace: istio-system
    trustDomain: cluster.local
  meshNetworks: 'networks: {}'
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istio
  namespace: istio-system
---
apiVersion: v1
data:
  AMBIENT_DNS_CAPTURE: "false"
  AMBIENT_ENABLED: "true"
  AMBIENT_IPV6: "true"
  CHAINED_CNI_PLUGIN: "true"
  CURRENT_AGENT_VERSION: 1.24.0
  EXCLUDED_NAMESPACES: kube-system
  REPAIR_BROKEN_POD_LABEL_KEY: cni.istio.io/uninitialized
  REPAIR_BROKEN_POD_LABEL_VALUE: "true"
  REPAIR_DELETE_PODS: "false"
  REPAIR_ENABLED: "true"
  REPAIR_INIT_CONTAINER_NAME: istio-validation
  REPAIR_LABEL_PODS: "false"
  REPAIR_REPAIR_PODS: "true"
kind: ConfigMap
metadata:
  labels:
    app: istio-cni
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-config
  namespace: istio-system
---
apiVersion: v1
data:
  config: |-
    # defaultTemplates defines the default template to use for pods that do not explicitly specify a template
    defaultTemplates: [sidecar]
    policy: enabled
    alwaysInjectSelector:
      []
    neverInjectSelector:
      []
    injectedAnnotations:
    template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
    templates:
      sidecar: |
        {{- define "resources"  }}
          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
              requests:
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
                {{ end }}
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
                {{ end }}
            {{- end }}
            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
              limits:
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
                {{ end }}
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
                {{ end }}
            {{- end }}
          {{- else }}
            {{- if .Values.global.proxy.resources }}
              {{ toYaml .Values.global.proxy.resources | indent 6 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{ $nativeSidecar := (or (and (not (isset .ObjectMeta.Annotations `sidecar.istio.io/nativeSidecar`)) (eq (env "ENABLE_NATIVE_SIDECARS" "false") "true")) (eq (index .ObjectMeta.Annotations `sidecar.istio.io/nativeSidecar`) "true")) }}
        {{- $containers := list }}
        {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
        metadata:
          labels:
            security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
            {{- if eq (index .ProxyConfig.ProxyMetadata "ISTIO_META_ENABLE_HBONE") "true" }}
            networking.istio.io/tunnel: {{ index .ObjectMeta.Labels `networking.istio.io/tunnel` | default "http"  | quote }}
            {{- end }}
            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | trunc 63 | trimSuffix "-" | quote }}
            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
          annotations: {
            istio.io/rev: {{ .Revision | default "default" | quote }},
            {{- if ge (len $containers) 1 }}
            {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-logs-container`) }}
            kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
            {{- end }}
            {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-container`) }}
            kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
            {{- end }}
            {{- end }}
        {{- if .Values.pilot.cni.enabled }}
            {{- if eq .Values.pilot.cni.provider "multus" }}
            k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) `default/istio-cni` }}',
            {{- end }}
            sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
            {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}traffic.sidecar.istio.io/includeInboundPorts: "{{.}}",{{ end }}
            traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
            {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
            traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
            {{- end }}
            {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
            traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
            {{- end }}
            {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
            {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces` }}traffic.sidecar.istio.io/excludeInterfaces: "{{.}}",{{ end }}
        {{- end }}
          }
        spec:
          {{- $holdProxy := and
              (or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts)
              (not $nativeSidecar) }}
          initContainers:
          {{ if ne (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `NONE` }}
          {{ if .Values.pilot.cni.enabled -}}
          - name: istio-validation
          {{ else -}}
          - name: istio-init
          {{ end -}}
          {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image) }}
            image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy_init.image }}"
          {{- else }}
            image: "{{ .ProxyImage }}"
          {{- end }}
            args:
            - istio-iptables
            - "-p"
            - {{ .MeshConfig.ProxyListenPort | default "15001" | quote }}
            - "-z"
            - {{ .MeshConfig.ProxyInboundListenPort | default "15006" | quote }}
            - "-u"
            - {{ .ProxyUID | default "1337" | quote }}
            - "-m"
            - "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
            - "-i"
            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
            - "-x"
            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
            - "-b"
            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` .Values.global.proxy.includeInboundPorts }}"
            - "-d"
          {{- if excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}
            - "15090,15021,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
          {{- else }}
            - "15090,15021"
          {{- end }}
            {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") -}}
            - "-q"
            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}"
            {{ end -}}
            {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.excludeOutboundPorts "") "") -}}
            - "-o"
            - "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
            {{ end -}}
            {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces`) -}}
            - "-k"
            - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
            {{ end -}}
             {{ if (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces`) -}}
            - "-c"
            - "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeInterfaces` }}"
            {{ end -}}
            - "--log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}"
            {{ if .Values.global.logAsJson -}}
            - "--log_as_json"
            {{ end -}}
            {{ if .Values.pilot.cni.enabled -}}
            - "--run-validation"
            - "--skip-rule-apply"
            {{ else if .Values.global.proxy_init.forceApplyIptables -}}
            - "--force-apply"
            {{ end -}}
            {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
          {{- if .ProxyConfig.ProxyMetadata }}
            env:
            {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          {{- end }}
            resources:
          {{ template "resources" . }}
            securityContext:
              allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
              privileged: {{ .Values.global.proxy.privileged }}
              capabilities:
            {{- if not .Values.pilot.cni.enabled }}
                add:
                - NET_ADMIN
                - NET_RAW
            {{- end }}
                drop:
                - ALL
            {{- if not .Values.pilot.cni.enabled }}
              readOnlyRootFilesystem: false
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
            {{- else }}
              readOnlyRootFilesystem: true
              runAsGroup: {{ .ProxyGID | default "1337" }}
              runAsUser: {{ .ProxyUID | default "1337" }}
              runAsNonRoot: true
            {{- end }}
          {{ end -}}
          {{ if not $nativeSidecar }}
          containers:
          {{ end }}
          - name: istio-proxy
          {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
            image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
          {{- else }}
            image: "{{ .ProxyImage }}"
          {{- end }}
            {{ if $nativeSidecar }}restartPolicy: Always{{end}}
            ports:
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
            args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
            - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
            - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
            - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
          {{- if .Values.global.sts.servicePort }}
            - --stsPort={{ .Values.global.sts.servicePort }}
          {{- end }}
          {{- if .Values.global.logAsJson }}
            - --log_as_json
          {{- end }}
          {{- if .Values.global.proxy.outlierLogPath }}
            - --outlierLogPath={{ .Values.global.proxy.outlierLogPath }}
          {{- end}}
          {{- if .Values.global.proxy.lifecycle }}
            lifecycle:
              {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
          {{- else if $holdProxy }}
            lifecycle:
              postStart:
                exec:
                  command:
                  - pilot-agent
                  - wait
          {{- else if $nativeSidecar }}
            {{- /* preStop is called when the pod starts shutdown. Initialize drain. We will get SIGTERM once applications are torn down. */}}
            lifecycle:
              preStop:
                exec:
                  command:
                  - pilot-agent
                  - request
                  - --debug-port={{(annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort)}}
                  - POST
                  - drain
          {{- end }}
            env:
            {{- if eq .InboundTrafficPolicyMode "localhost" }}
            - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
              value: "true"
            {{- end }}
            - name: PILOT_CERT_PROVIDER
              value: {{ .Values.global.pilotCertProvider }}
            - name: CA_ADDR
            {{- if .Values.global.caAddress }}
              value: {{ .Values.global.caAddress }}
            {{- else }}
              value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ISTIO_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: PROXY_CONFIG
              value: |
                     {{ protoToJSON .ProxyConfig }}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                {{- $first := true }}
                {{- range $index1, $c := .Spec.Containers }}
                  {{- range $index2, $p := $c.Ports }}
                    {{- if (structToJSON $p) }}
                    {{if not $first}},{{end}}{{ structToJSON $p }}
                    {{- $first = false }}
                    {{- end }}
                  {{- end}}
                {{- end}}
                ]
            - name: ISTIO_META_APP_CONTAINERS
              value: "{{ $containers | join "," }}"
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            {{- if .CompliancePolicy }}
            - name: COMPLIANCE_POLICY
              value: "{{ .CompliancePolicy }}"
            {{- end }}
            - name: ISTIO_META_CLUSTER_ID
              value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
            - name: ISTIO_META_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ISTIO_META_INTERCEPTION_MODE
              value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
            {{- if .Values.global.network }}
            - name: ISTIO_META_NETWORK
              value: "{{ .Values.global.network }}"
            {{- end }}
            {{- if .DeploymentMeta.Name }}
            - name: ISTIO_META_WORKLOAD_NAME
              value: "{{ .DeploymentMeta.Name }}"
            {{ end }}
            {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
            {{- end}}
            {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
            - name: ISTIO_BOOTSTRAP_OVERRIDE
              value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
            {{- end }}
            {{- if .Values.global.meshID }}
            - name: ISTIO_META_MESH_ID
              value: "{{ .Values.global.meshID }}"
            {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
            - name: ISTIO_META_MESH_ID
              value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
            {{- end }}
            {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
            - name: TRUST_DOMAIN
              value: "{{ . }}"
            {{- end }}
            {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
            {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- end }}
            {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
            {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
          {{ if .Values.global.proxy.startupProbe.enabled }}
            startupProbe:
              httpGet:
                path: /healthz/ready
                port: 15021
              initialDelaySeconds: 0
              periodSeconds: 1
              timeoutSeconds: 3
              failureThreshold: {{ .Values.global.proxy.startupProbe.failureThreshold }}
          {{ end }}
            readinessProbe:
              httpGet:
                path: /healthz/ready
                port: 15021
              initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
              periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
              timeoutSeconds: 3
              failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
            {{ end -}}
            securityContext:
              {{- if eq (index .ProxyConfig.ProxyMetadata "IPTABLES_TRACE_LOGGING") "true" }}
              allowPrivilegeEscalation: true
              capabilities:
                add:
                - NET_ADMIN
                drop:
                - ALL
              privileged: true
              readOnlyRootFilesystem: true
              runAsGroup: {{ .ProxyGID | default "1337" }}
              runAsNonRoot: false
              runAsUser: 0
              {{- else }}
              allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
              capabilities:
                {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
                add:
                {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
                - NET_ADMIN
                {{- end }}
                {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
                - NET_BIND_SERVICE
                {{- end }}
                {{- end }}
                drop:
                - ALL
              privileged: {{ .Values.global.proxy.privileged }}
              readOnlyRootFilesystem: true
              runAsGroup: {{ .ProxyGID | default "1337" }}
              {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
              runAsNonRoot: false
              runAsUser: 0
              {{- else -}}
              runAsNonRoot: true
              runAsUser: {{ .ProxyUID | default "1337" }}
              {{- end }}
              {{- end }}
            resources:
          {{ template "resources" . }}
            volumeMounts:
            - name: workload-socket
              mountPath: /var/run/secrets/workload-spiffe-uds
            - name: credential-socket
              mountPath: /var/run/secrets/credential-uds
            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
            - name: gke-workload-certificate
              mountPath: /var/run/secrets/workload-spiffe-credentials
              readOnly: true
            {{- else }}
            - name: workload-certs
              mountPath: /var/run/secrets/workload-spiffe-credentials
            {{- end }}
            {{- if eq .Values.global.pilotCertProvider "istiod" }}
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            {{- end }}
            - mountPath: /var/lib/istio/data
              name: istio-data
            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
            - mountPath: /etc/istio/custom-bootstrap
              name: custom-bootstrap-volume
            {{- end }}
            # SDS channel between istioagent and Envoy
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            {{- if .Values.global.mountMtlsCerts }}
            # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
            - mountPath: /etc/certs/
              name: istio-certs
              readOnly: true
            {{- end }}
            - name: istio-podinfo
              mountPath: /etc/istio/pod
             {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
            - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
              name: lightstep-certs
              readOnly: true
            {{- end }}
              {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
              {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
            - name: "{{  $index }}"
              {{ toYaml $value | indent 6 }}
              {{ end }}
              {{- end }}
          volumes:
          - emptyDir:
            name: workload-socket
          - emptyDir:
            name: credential-socket
          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
          - name: gke-workload-certificate
            csi:
              driver: workloadcertificates.security.cloud.google.com
          {{- else }}
          - emptyDir:
            name: workload-certs
          {{- end }}
          {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
          - name: custom-bootstrap-volume
            configMap:
              name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
          {{- end }}
          # SDS channel between istioagent and Envoy
          - emptyDir:
              medium: Memory
            name: istio-envoy
          - name: istio-data
            emptyDir: {}
          - name: istio-podinfo
            downwardAPI:
              items:
                - path: "labels"
                  fieldRef:
                    fieldPath: metadata.labels
                - path: "annotations"
                  fieldRef:
                    fieldPath: metadata.annotations
          - name: istio-token
            projected:
              sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: {{ .Values.global.sds.token.aud }}
          {{- if eq .Values.global.pilotCertProvider "istiod" }}
          - name: istiod-ca-cert
            configMap:
              name: istio-ca-root-cert
          {{- end }}
          {{- if .Values.global.mountMtlsCerts }}
          # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
          - name: istio-certs
            secret:
              optional: true
              {{ if eq .Spec.ServiceAccountName "" }}
              secretName: istio.default
              {{ else -}}
              secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
              {{  end -}}
          {{- end }}
            {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
            {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
          - name: "{{ $index }}"
            {{ toYaml $value | indent 4 }}
            {{ end }}
            {{ end }}
          {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
          - name: lightstep-certs
            secret:
              optional: true
              secretName: lightstep.cacert
          {{- end }}
          {{- if .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- range .Values.global.imagePullSecrets }}
            - name: {{ . }}
            {{- end }}
          {{- end }}
      gateway: |
        {{- $containers := list }}
        {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
        metadata:
          labels:
            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
          annotations: {
            istio.io/rev: {{ .Revision | default "default" | quote }},
            {{- if eq (len $containers) 1 }}
            kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
            kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
            {{ end }}
          }
        spec:
          securityContext:
          {{- if .Values.gateways.securityContext }}
            {{- toYaml .Values.gateways.securityContext | nindent 4 }}
          {{- else }}
            sysctls:
            - name: net.ipv4.ip_unprivileged_port_start
              value: "0"
          {{- end }}
          containers:
          - name: istio-proxy
          {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
            image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
          {{- else }}
            image: "{{ .ProxyImage }}"
          {{- end }}
            ports:
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
            args:
            - proxy
            - router
            - --domain
            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
            - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
            - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
            - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
          {{- if .Values.global.sts.servicePort }}
            - --stsPort={{ .Values.global.sts.servicePort }}
          {{- end }}
          {{- if .Values.global.logAsJson }}
            - --log_as_json
          {{- end }}
          {{- if .Values.global.proxy.lifecycle }}
            lifecycle:
              {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
          {{- end }}
            securityContext:
              runAsUser: {{ .ProxyUID | default "1337" }}
              runAsGroup: {{ .ProxyGID | default "1337" }}
            env:
            - name: PILOT_CERT_PROVIDER
              value: {{ .Values.global.pilotCertProvider }}
            - name: CA_ADDR
            {{- if .Values.global.caAddress }}
              value: {{ .Values.global.caAddress }}
            {{- else }}
              value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: ISTIO_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            - name: PROXY_CONFIG
              value: |
                     {{ protoToJSON .ProxyConfig }}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                {{- $first := true }}
                {{- range $index1, $c := .Spec.Containers }}
                  {{- range $index2, $p := $c.Ports }}
                    {{- if (structToJSON $p) }}
                    {{if not $first}},{{end}}{{ structToJSON $p }}
                    {{- $first = false }}
                    {{- end }}
                  {{- end}}
                {{- end}}
                ]
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
            {{- if .CompliancePolicy }}
            - name: COMPLIANCE_POLICY
              value: "{{ .CompliancePolicy }}"
            {{- end }}
            - name: ISTIO_META_APP_CONTAINERS
              value: "{{ $containers | join "," }}"
            - name: ISTIO_META_CLUSTER_ID
              value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
            - name: ISTIO_META_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: ISTIO_META_INTERCEPTION_MODE
              value: "{{ .ProxyConfig.InterceptionMode.String }}"
            {{- if .Values.global.network }}
            - name: ISTIO_META_NETWORK
              value: "{{ .Values.global.network }}"
            {{- end }}
            {{- if .DeploymentMeta.Name }}
            - name: ISTIO_META_WORKLOAD_NAME
              value: "{{ .DeploymentMeta.Name }}"
            {{ end }}
            {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
            {{- end}}
            {{- if .Values.global.meshID }}
            - name: ISTIO_META_MESH_ID
              value: "{{ .Values.global.meshID }}"
            {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
            - name: ISTIO_META_MESH_ID
              value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
            {{- end }}
            {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
            - name: TRUST_DOMAIN
              value: "{{ . }}"
            {{- end }}
            {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
            readinessProbe:
              httpGet:
                path: /healthz/ready
                port: 15021
              initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
              periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
              timeoutSeconds: 3
              failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
            volumeMounts:
            - name: workload-socket
              mountPath: /var/run/secrets/workload-spiffe-uds
            - name: credential-socket
              mountPath: /var/run/secrets/credential-uds
            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
            - name: gke-workload-certificate
              mountPath: /var/run/secrets/workload-spiffe-credentials
              readOnly: true
            {{- else }}
            - name: workload-certs
              mountPath: /var/run/secrets/workload-spiffe-credentials
            {{- end }}
            {{- if eq .Values.global.pilotCertProvider "istiod" }}
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            {{- end }}
            - mountPath: /var/lib/istio/data
              name: istio-data
            # SDS channel between istioagent and Envoy
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            {{- if .Values.global.mountMtlsCerts }}
            # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
            - mountPath: /etc/certs/
              name: istio-certs
              readOnly: true
            {{- end }}
            - name: istio-podinfo
              mountPath: /etc/istio/pod
          volumes:
          - emptyDir: {}
            name: workload-socket
          - emptyDir: {}
            name: credential-socket
          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
          - name: gke-workload-certificate
            csi:
              driver: workloadcertificates.security.cloud.google.com
          {{- else}}
          - emptyDir: {}
            name: workload-certs
          {{- end }}
          # SDS channel between istioagent and Envoy
          - emptyDir:
              medium: Memory
            name: istio-envoy
          - name: istio-data
            emptyDir: {}
          - name: istio-podinfo
            downwardAPI:
              items:
                - path: "labels"
                  fieldRef:
                    fieldPath: metadata.labels
                - path: "annotations"
                  fieldRef:
                    fieldPath: metadata.annotations
          - name: istio-token
            projected:
              sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: {{ .Values.global.sds.token.aud }}
          {{- if eq .Values.global.pilotCertProvider "istiod" }}
          - name: istiod-ca-cert
            configMap:
              name: istio-ca-root-cert
          {{- end }}
          {{- if .Values.global.mountMtlsCerts }}
          # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
          - name: istio-certs
            secret:
              optional: true
              {{ if eq .Spec.ServiceAccountName "" }}
              secretName: istio.default
              {{ else -}}
              secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
              {{  end -}}
          {{- end }}
          {{- if .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- range .Values.global.imagePullSecrets }}
            - name: {{ . }}
            {{- end }}
          {{- end }}
      grpc-simple: |
        metadata:
          annotations:
            sidecar.istio.io/rewriteAppHTTPProbers: "false"
        spec:
          initContainers:
            - name: grpc-bootstrap-init
              image: busybox:1.28
              volumeMounts:
                - mountPath: /var/lib/grpc/data/
                  name: grpc-io-proxyless-bootstrap
              env:
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ISTIO_NAMESPACE
                  value: |
                     {{ .Values.global.istioNamespace }}
              command:
                - sh
                - "-c"
                - |-
                  NODE_ID="sidecar~${INSTANCE_IP}~${POD_NAME}.${POD_NAMESPACE}~cluster.local"
                  SERVER_URI="dns:///istiod.${ISTIO_NAMESPACE}.svc:15010"
                  echo '
                  {
                    "xds_servers": [
                      {
                        "server_uri": "'${SERVER_URI}'",
                        "channel_creds": [{"type": "insecure"}],
                        "server_features" : ["xds_v3"]
                      }
                    ],
                    "node": {
                      "id": "'${NODE_ID}'",
                      "metadata": {
                        "GENERATOR": "grpc"
                      }
                    }
                  }' > /var/lib/grpc/data/bootstrap.json
          containers:
          {{- range $index, $container := .Spec.Containers }}
          - name: {{ $container.Name }}
            env:
              - name: GRPC_XDS_BOOTSTRAP
                value: /var/lib/grpc/data/bootstrap.json
              - name: GRPC_GO_LOG_VERBOSITY_LEVEL
                value: "99"
              - name: GRPC_GO_LOG_SEVERITY_LEVEL
                value: info
            volumeMounts:
              - mountPath: /var/lib/grpc/data/
                name: grpc-io-proxyless-bootstrap
          {{- end }}
          volumes:
            - name: grpc-io-proxyless-bootstrap
              emptyDir: {}
      grpc-agent: |
        {{- define "resources"  }}
          {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
              requests:
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
                {{ end }}
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
                {{ end }}
            {{- end }}
            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
              limits:
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
                cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
                {{ end }}
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
                memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
                {{ end }}
            {{- end }}
          {{- else }}
            {{- if .Values.global.proxy.resources }}
              {{ toYaml .Values.global.proxy.resources | indent 6 }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- $containers := list }}
        {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
        metadata:
          labels:
            {{/* security.istio.io/tlsMode: istio must be set by user, if gRPC is using mTLS initialization code. We can't set it automatically. */}}
            service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
            service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
          annotations: {
            istio.io/rev: {{ .Revision | default "default" | quote }},
            {{- if ge (len $containers) 1 }}
            {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-logs-container`) }}
            kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
            {{- end }}
            {{- if not (isset .ObjectMeta.Annotations `kubectl.kubernetes.io/default-container`) }}
            kubectl.kubernetes.io/default-container: "{{ index $containers 0 }}",
            {{- end }}
            {{- end }}
            sidecar.istio.io/rewriteAppHTTPProbers: "false",
          }
        spec:
          containers:
          - name: istio-proxy
          {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
            image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
          {{- else }}
            image: "{{ .ProxyImage }}"
          {{- end }}
            ports:
            - containerPort: 15020
              protocol: TCP
              name: mesh-metrics
            args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
            - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
            - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
            - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
          {{- if .Values.global.sts.servicePort }}
            - --stsPort={{ .Values.global.sts.servicePort }}
          {{- end }}
          {{- if .Values.global.logAsJson }}
            - --log_as_json
          {{- end }}
            lifecycle:
              postStart:
                exec:
                  command:
                  - pilot-agent
                  - wait
                  - --url=http://localhost:15020/healthz/ready
            env:
            - name: ISTIO_META_GENERATOR
              value: grpc
            - name: OUTPUT_CERTS
              value: /var/lib/istio/data
            {{- if eq .InboundTrafficPolicyMode "localhost" }}
            - name: REWRITE_PROBE_LEGACY_LOCALHOST_DESTINATION
              value: "true"
            {{- end }}
            - name: PILOT_CERT_PROVIDER
              value: {{ .Values.global.pilotCertProvider }}
            - name: CA_ADDR
            {{- if .Values.global.caAddress }}
              value: {{ .Values.global.caAddress }}
            {{- else }}
              value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: PROXY_CONFIG
              value: |
                     {{ protoToJSON .ProxyConfig }}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                {{- $first := true }}
                {{- range $index1, $c := .Spec.Containers }}
                  {{- range $index2, $p := $c.Ports }}
                    {{- if (structToJSON $p) }}
                    {{if not $first}},{{end}}{{ structToJSON $p }}
                    {{- $first = false }}
                    {{- end }}
                  {{- end}}
                {{- end}}
                ]
            - name: ISTIO_META_APP_CONTAINERS
              value: "{{ $containers | join "," }}"
            - name: ISTIO_META_CLUSTER_ID
              value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
            - name: ISTIO_META_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.global.network }}
            - name: ISTIO_META_NETWORK
              value: "{{ .Values.global.network }}"
            {{- end }}
            {{- if .DeploymentMeta.Name }}
            - name: ISTIO_META_WORKLOAD_NAME
              value: "{{ .DeploymentMeta.Name }}"
            {{ end }}
            {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
            {{- end}}
            {{- if .Values.global.meshID }}
            - name: ISTIO_META_MESH_ID
              value: "{{ .Values.global.meshID }}"
            {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
            - name: ISTIO_META_MESH_ID
              value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
            {{- end }}
            {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
            - name: TRUST_DOMAIN
              value: "{{ . }}"
            {{- end }}
            {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            # grpc uses xds:/// to resolve – no need to resolve VIP
            - name: ISTIO_META_DNS_CAPTURE
              value: "false"
            - name: DISABLE_ENVOY
              value: "true"
            {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
            {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
            readinessProbe:
              httpGet:
                path: /healthz/ready
                port: 15020
              initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
              periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
              timeoutSeconds: 3
              failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
            resources:
          {{ template "resources" . }}
            volumeMounts:
            - name: workload-socket
              mountPath: /var/run/secrets/workload-spiffe-uds
            {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
            - name: gke-workload-certificate
              mountPath: /var/run/secrets/workload-spiffe-credentials
              readOnly: true
            {{- else }}
            - name: workload-certs
              mountPath: /var/run/secrets/workload-spiffe-credentials
            {{- end }}
            {{- if eq .Values.global.pilotCertProvider "istiod" }}
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            {{- end }}
            - mountPath: /var/lib/istio/data
              name: istio-data
            # UDS channel between istioagent and gRPC client for XDS/SDS
            - mountPath: /etc/istio/proxy
              name: istio-xds
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            {{- if .Values.global.mountMtlsCerts }}
            # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
            - mountPath: /etc/certs/
              name: istio-certs
              readOnly: true
            {{- end }}
            - name: istio-podinfo
              mountPath: /etc/istio/pod
            {{- end }}
              {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
              {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
            - name: "{{  $index }}"
              {{ toYaml $value | indent 6 }}
              {{ end }}
              {{- end }}
        {{- range $index, $container := .Spec.Containers  }}
        {{ if not (eq $container.Name "istio-proxy") }}
          - name: {{ $container.Name }}
            env:
              - name: "GRPC_XDS_EXPERIMENTAL_SECURITY_SUPPORT"
                value: "true"
              - name: "GRPC_XDS_BOOTSTRAP"
                value: "/etc/istio/proxy/grpc-bootstrap.json"
            volumeMounts:
              - mountPath: /var/lib/istio/data
                name: istio-data
              # UDS channel between istioagent and gRPC client for XDS/SDS
              - mountPath: /etc/istio/proxy
                name: istio-xds
              {{- if eq $.Values.global.caName "GkeWorkloadCertificate" }}
              - name: gke-workload-certificate
                mountPath: /var/run/secrets/workload-spiffe-credentials
                readOnly: true
              {{- else }}
              - name: workload-certs
                mountPath: /var/run/secrets/workload-spiffe-credentials
              {{- end }}
        {{- end }}
        {{- end }}
          volumes:
          - emptyDir:
            name: workload-socket
          {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
          - name: gke-workload-certificate
            csi:
              driver: workloadcertificates.security.cloud.google.com
          {{- else }}
          - emptyDir:
            name: workload-certs
          {{- end }}
          {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
          - name: custom-bootstrap-volume
            configMap:
              name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
          {{- end }}
          # SDS channel between istioagent and Envoy
          - emptyDir:
              medium: Memory
            name: istio-xds
          - name: istio-data
            emptyDir: {}
          - name: istio-podinfo
            downwardAPI:
              items:
                - path: "labels"
                  fieldRef:
                    fieldPath: metadata.labels
                - path: "annotations"
                  fieldRef:
                    fieldPath: metadata.annotations
          - name: istio-token
            projected:
              sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: {{ .Values.global.sds.token.aud }}
          {{- if eq .Values.global.pilotCertProvider "istiod" }}
          - name: istiod-ca-cert
            configMap:
              name: istio-ca-root-cert
          {{- end }}
          {{- if .Values.global.mountMtlsCerts }}
          # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
          - name: istio-certs
            secret:
              optional: true
              {{ if eq .Spec.ServiceAccountName "" }}
              secretName: istio.default
              {{ else -}}
              secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
              {{  end -}}
          {{- end }}
            {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
            {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
          - name: "{{ $index }}"
            {{ toYaml $value | indent 4 }}
            {{ end }}
            {{ end }}
          {{- if .Values.global.imagePullSecrets }}
          imagePullSecrets:
            {{- range .Values.global.imagePullSecrets }}
            - name: {{ . }}
            {{- end }}
          {{- end }}
      waypoint: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: {{.ServiceAccount | quote}}
          namespace: {{.Namespace | quote}}
          annotations:
            {{- toJsonMap (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version") | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
              ) | nindent 4 }}
          {{- if ge .KubeVersion 128 }}
          # Safe since 1.28: https://github.com/kubernetes/kubernetes/pull/117412
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: "{{.Name}}"
            uid: "{{.UID}}"
          {{- end }}
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: {{.DeploymentName | quote}}
          namespace: {{.Namespace | quote}}
          annotations:
            {{- toJsonMap (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version") | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
                "gateway.istio.io/managed" "istio.io-mesh-controller"
              ) | nindent 4 }}
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: "{{.Name}}"
            uid: "{{.UID}}"
        spec:
          selector:
            matchLabels:
              "{{.GatewayNameLabel}}": "{{.Name}}"
          template:
            metadata:
              annotations:
                {{- toJsonMap
                  (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version")
                  (strdict "istio.io/rev" (.Revision | default "default"))
                  (strdict
                    "prometheus.io/path" "/stats/prometheus"
                    "prometheus.io/port" "15020"
                    "prometheus.io/scrape" "true"
                  ) | nindent 8 }}
              labels:
                {{- toJsonMap
                  (strdict
                    "sidecar.istio.io/inject" "false"
                    "istio.io/dataplane-mode" "none"
                    "service.istio.io/canonical-name" .DeploymentName
                    "service.istio.io/canonical-revision" "latest"
                   )
                  .InfrastructureLabels
                  (strdict
                    "gateway.networking.k8s.io/gateway-name" .Name
                    "gateway.istio.io/managed" "istio.io-mesh-controller"
                  ) | nindent 8}}
            spec:
              {{- if .Values.global.waypoint.affinity }}
              affinity:
              {{- toYaml .Values.global.waypoint.affinity | nindent 8 }}
              {{- end }}
              {{- if .Values.global.waypoint.topologySpreadConstraints }}
              topologySpreadConstraints:
              {{- toYaml .Values.global.waypoint.topologySpreadConstraints | nindent 8 }}
              {{- end }}
              {{- if .Values.global.waypoint.nodeSelector }}
              nodeSelector:
              {{- toYaml .Values.global.waypoint.nodeSelector | nindent 8 }}
              {{- end }}
              {{- if .Values.global.waypoint.tolerations }}
              tolerations:
              {{- toYaml .Values.global.waypoint.tolerations | nindent 8 }}
              {{- end }}
              terminationGracePeriodSeconds: 2
              serviceAccountName: {{.ServiceAccount | quote}}
              containers:
              - name: istio-proxy
                ports:
                - containerPort: 15020
                  name: metrics
                  protocol: TCP
                - containerPort: 15021
                  name: status-port
                  protocol: TCP
                - containerPort: 15090
                  protocol: TCP
                  name: http-envoy-prom
                {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
                image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
                {{- else }}
                image: "{{ .ProxyImage }}"
                {{- end }}
                {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
                args:
                - proxy
                - waypoint
                - --domain
                - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
                - --serviceCluster
                - {{.ServiceAccount}}.$(POD_NAMESPACE)
                - --proxyLogLevel
                - {{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel | quote}}
                - --proxyComponentLogLevel
                - {{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel | quote}}
                - --log_output_level
                - {{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level | quote}}
                {{- if .Values.global.logAsJson }}
                - --log_as_json
                {{- end }}
                env:
                - name: ISTIO_META_SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.serviceAccountName
                - name: ISTIO_META_NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: PILOT_CERT_PROVIDER
                  value: {{ .Values.global.pilotCertProvider }}
                - name: CA_ADDR
                {{- if .Values.global.caAddress }}
                  value: {{ .Values.global.caAddress }}
                {{- else }}
                  value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
                {{- end }}
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.serviceAccountName
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.hostIP
                - name: ISTIO_CPU_LIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.cpu
                - name: PROXY_CONFIG
                  value: |
                         {{ protoToJSON .ProxyConfig }}
                {{- if .ProxyConfig.ProxyMetadata }}
                {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
                - name: {{ $key }}
                  value: "{{ $value }}"
                {{- end }}
                {{- end }}
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                - name: GOMAXPROCS
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.cpu
                - name: ISTIO_META_CLUSTER_ID
                  value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
                {{- $network := valueOrDefault (index .InfrastructureLabels `topology.istio.io/network`) .Values.global.network }}
                {{- if $network }}
                - name: ISTIO_META_NETWORK
                  value: "{{ $network }}"
                {{- end }}
                - name: ISTIO_META_INTERCEPTION_MODE
                  value: REDIRECT
                - name: ISTIO_META_WORKLOAD_NAME
                  value: {{.DeploymentName}}
                - name: ISTIO_META_OWNER
                  value: kubernetes://apis/apps/v1/namespaces/{{.Namespace}}/deployments/{{.DeploymentName}}
                {{- if .Values.global.meshID }}
                - name: ISTIO_META_MESH_ID
                  value: "{{ .Values.global.meshID }}"
                {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
                - name: ISTIO_META_MESH_ID
                  value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
                {{- end }}
                {{- if .Values.global.waypoint.resources }}
                resources:
                {{- toYaml .Values.global.waypoint.resources | nindent 10 }}
                {{- end }}
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /healthz/ready
                    port: 15021
                    scheme: HTTP
                  initialDelaySeconds: 1
                  periodSeconds: 1
                  successThreshold: 1
                  timeoutSeconds: 1
                readinessProbe:
                  failureThreshold: 4
                  httpGet:
                    path: /healthz/ready
                    port: 15021
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 15
                  successThreshold: 1
                  timeoutSeconds: 1
                securityContext:
                  privileged: false
                {{- if not (eq .Values.global.platform "openshift") }}
                  runAsGroup: 1337
                  runAsUser: 1337
                {{- end }}
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  capabilities:
                    drop:
                    - ALL
        {{- if .Values.gateways.seccompProfile }}
                  seccompProfile:
        {{- toYaml .Values.gateways.seccompProfile | nindent 12 }}
        {{- end }}
                volumeMounts:
                - mountPath: /var/run/secrets/workload-spiffe-uds
                  name: workload-socket
                - mountPath: /var/run/secrets/istio
                  name: istiod-ca-cert
                - mountPath: /var/lib/istio/data
                  name: istio-data
                - mountPath: /etc/istio/proxy
                  name: istio-envoy
                - mountPath: /var/run/secrets/tokens
                  name: istio-token
                - mountPath: /etc/istio/pod
                  name: istio-podinfo
              volumes:
              - emptyDir: {}
                name: workload-socket
              - emptyDir:
                  medium: Memory
                name: istio-envoy
              - emptyDir:
                  medium: Memory
                name: go-proxy-envoy
              - emptyDir: {}
                name: istio-data
              - emptyDir: {}
                name: go-proxy-data
              - downwardAPI:
                  items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
                  - fieldRef:
                      fieldPath: metadata.annotations
                    path: annotations
                name: istio-podinfo
              - name: istio-token
                projected:
                  sources:
                  - serviceAccountToken:
                      audience: istio-ca
                      expirationSeconds: 43200
                      path: istio-token
              - configMap:
                  name: istio-ca-root-cert
                name: istiod-ca-cert
              {{- if .Values.global.imagePullSecrets }}
              imagePullSecrets:
                {{- range .Values.global.imagePullSecrets }}
                - name: {{ . }}
                {{- end }}
              {{- end }}
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            {{ toJsonMap
              (strdict "networking.istio.io/traffic-distribution" "PreferClose")
              (omit .InfrastructureAnnotations
                "kubectl.kubernetes.io/last-applied-configuration"
                "gateway.istio.io/name-override"
                "gateway.istio.io/service-account"
                "gateway.istio.io/controller-version"
              ) | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
              ) | nindent 4 }}
          name: {{.DeploymentName | quote}}
          namespace: {{.Namespace | quote}}
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: "{{.Name}}"
            uid: "{{.UID}}"
        spec:
          ipFamilyPolicy: PreferDualStack
          ports:
          {{- range $key, $val := .Ports }}
          - name: {{ $val.Name | quote }}
            port: {{ $val.Port }}
            protocol: TCP
            appProtocol: {{ $val.AppProtocol }}
          {{- end }}
          selector:
            "{{.GatewayNameLabel}}": "{{.Name}}"
          {{- if and (.Spec.Addresses) (eq .ServiceType "LoadBalancer") }}
          loadBalancerIP: {{ (index .Spec.Addresses 0).Value | quote}}
          {{- end }}
          type: {{ .ServiceType | quote }}
        ---
      kube-gateway: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: {{.ServiceAccount | quote}}
          namespace: {{.Namespace | quote}}
          annotations:
            {{- toJsonMap (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version") | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
              ) | nindent 4 }}
          {{- if ge .KubeVersion 128 }}
          # Safe since 1.28: https://github.com/kubernetes/kubernetes/pull/117412
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: "{{.Name}}"
            uid: "{{.UID}}"
          {{- end }}
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: {{.DeploymentName | quote}}
          namespace: {{.Namespace | quote}}
          annotations:
            {{- toJsonMap (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version") | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
                "gateway.istio.io/managed" "istio.io-gateway-controller"
              ) | nindent 4 }}
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: {{.Name}}
            uid: "{{.UID}}"
        spec:
          selector:
            matchLabels:
              "{{.GatewayNameLabel}}": {{.Name}}
          template:
            metadata:
              annotations:
                {{- toJsonMap
                  (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version")
                  (strdict "istio.io/rev" (.Revision | default "default"))
                  (strdict
                    "prometheus.io/path" "/stats/prometheus"
                    "prometheus.io/port" "15020"
                    "prometheus.io/scrape" "true"
                  ) | nindent 8 }}
              labels:
                {{- toJsonMap
                  (strdict
                    "sidecar.istio.io/inject" "false"
                    "service.istio.io/canonical-name" .DeploymentName
                    "service.istio.io/canonical-revision" "latest"
                   )
                  .InfrastructureLabels
                  (strdict
                    "gateway.networking.k8s.io/gateway-name" .Name
                    "gateway.istio.io/managed" "istio.io-gateway-controller"
                  ) | nindent 8 }}
            spec:
              securityContext:
              {{- if .Values.gateways.securityContext }}
                {{- toYaml .Values.gateways.securityContext | nindent 8 }}
              {{- else }}
                sysctls:
                - name: net.ipv4.ip_unprivileged_port_start
                  value: "0"
              {{- if .Values.gateways.seccompProfile }}
                seccompProfile:
              {{- toYaml .Values.gateways.seccompProfile | nindent 10 }}
              {{- end }}
              {{- end }}
              serviceAccountName: {{.ServiceAccount | quote}}
              containers:
              - name: istio-proxy
              {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
                image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
              {{- else }}
                image: "{{ .ProxyImage }}"
              {{- end }}
                {{- if .Values.global.proxy.resources }}
                resources:
                  {{- toYaml .Values.global.proxy.resources | nindent 10 }}
                {{- end }}
                {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  allowPrivilegeEscalation: false
                  privileged: false
                  readOnlyRootFilesystem: true
                  runAsUser: {{ .ProxyUID | default "1337" }}
                  runAsGroup: {{ .ProxyGID | default "1337" }}
                  runAsNonRoot: true
                ports:
                - containerPort: 15020
                  name: metrics
                  protocol: TCP
                - containerPort: 15021
                  name: status-port
                  protocol: TCP
                - containerPort: 15090
                  protocol: TCP
                  name: http-envoy-prom
                args:
                - proxy
                - router
                - --domain
                - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
                - --proxyLogLevel
                - {{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel | quote}}
                - --proxyComponentLogLevel
                - {{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel | quote}}
                - --log_output_level
                - {{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level | quote}}
              {{- if .Values.global.sts.servicePort }}
                - --stsPort={{ .Values.global.sts.servicePort }}
              {{- end }}
              {{- if .Values.global.logAsJson }}
                - --log_as_json
              {{- end }}
              {{- if .Values.global.proxy.lifecycle }}
                lifecycle:
                  {{- toYaml .Values.global.proxy.lifecycle | nindent 10 }}
              {{- end }}
                env:
                - name: PILOT_CERT_PROVIDER
                  value: {{ .Values.global.pilotCertProvider }}
                - name: CA_ADDR
                {{- if .Values.global.caAddress }}
                  value: {{ .Values.global.caAddress }}
                {{- else }}
                  value: istiod{{- if not (eq .Values.revision "") }}-{{ .Values.revision }}{{- end }}.{{ .Values.global.istioNamespace }}.svc:15012
                {{- end }}
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.serviceAccountName
                - name: HOST_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.hostIP
                - name: ISTIO_CPU_LIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.cpu
                - name: PROXY_CONFIG
                  value: |
                         {{ protoToJSON .ProxyConfig }}
                - name: ISTIO_META_POD_PORTS
                  value: "[]"
                - name: ISTIO_META_APP_CONTAINERS
                  value: ""
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.memory
                - name: GOMAXPROCS
                  valueFrom:
                    resourceFieldRef:
                      resource: limits.cpu
                - name: ISTIO_META_CLUSTER_ID
                  value: "{{ valueOrDefault .Values.global.multiCluster.clusterName .ClusterID }}"
                - name: ISTIO_META_NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: ISTIO_META_INTERCEPTION_MODE
                  value: "{{ .ProxyConfig.InterceptionMode.String }}"
                {{- with (valueOrDefault  (index .InfrastructureLabels "topology.istio.io/network") .Values.global.network) }}
                - name: ISTIO_META_NETWORK
                  value: {{.|quote}}
                {{- end }}
                - name: ISTIO_META_WORKLOAD_NAME
                  value: {{.DeploymentName|quote}}
                - name: ISTIO_META_OWNER
                  value: "kubernetes://apis/apps/v1/namespaces/{{.Namespace}}/deployments/{{.DeploymentName}}"
                {{- if .Values.global.meshID }}
                - name: ISTIO_META_MESH_ID
                  value: "{{ .Values.global.meshID }}"
                {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
                - name: ISTIO_META_MESH_ID
                  value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
                {{- end }}
                {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
                - name: TRUST_DOMAIN
                  value: "{{ . }}"
                {{- end }}
                {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
                - name: {{ $key }}
                  value: "{{ $value }}"
                {{- end }}
                {{- with (index .InfrastructureLabels "topology.istio.io/network") }}
                - name: ISTIO_META_REQUESTED_NETWORK_VIEW
                  value: {{.|quote}}
                {{- end }}
                startupProbe:
                  failureThreshold: 30
                  httpGet:
                    path: /healthz/ready
                    port: 15021
                    scheme: HTTP
                  initialDelaySeconds: 1
                  periodSeconds: 1
                  successThreshold: 1
                  timeoutSeconds: 1
                readinessProbe:
                  failureThreshold: 4
                  httpGet:
                    path: /healthz/ready
                    port: 15021
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 15
                  successThreshold: 1
                  timeoutSeconds: 1
                volumeMounts:
                - name: workload-socket
                  mountPath: /var/run/secrets/workload-spiffe-uds
                - name: credential-socket
                  mountPath: /var/run/secrets/credential-uds
                {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
                - name: gke-workload-certificate
                  mountPath: /var/run/secrets/workload-spiffe-credentials
                  readOnly: true
                {{- else }}
                - name: workload-certs
                  mountPath: /var/run/secrets/workload-spiffe-credentials
                {{- end }}
                {{- if eq .Values.global.pilotCertProvider "istiod" }}
                - mountPath: /var/run/secrets/istio
                  name: istiod-ca-cert
                {{- end }}
                - mountPath: /var/lib/istio/data
                  name: istio-data
                # SDS channel between istioagent and Envoy
                - mountPath: /etc/istio/proxy
                  name: istio-envoy
                - mountPath: /var/run/secrets/tokens
                  name: istio-token
                - name: istio-podinfo
                  mountPath: /etc/istio/pod
              volumes:
              - emptyDir: {}
                name: workload-socket
              - emptyDir: {}
                name: credential-socket
              {{- if eq .Values.global.caName "GkeWorkloadCertificate" }}
              - name: gke-workload-certificate
                csi:
                  driver: workloadcertificates.security.cloud.google.com
              {{- else}}
              - emptyDir: {}
                name: workload-certs
              {{- end }}
              # SDS channel between istioagent and Envoy
              - emptyDir:
                  medium: Memory
                name: istio-envoy
              - name: istio-data
                emptyDir: {}
              - name: istio-podinfo
                downwardAPI:
                  items:
                    - path: "labels"
                      fieldRef:
                        fieldPath: metadata.labels
                    - path: "annotations"
                      fieldRef:
                        fieldPath: metadata.annotations
              - name: istio-token
                projected:
                  sources:
                  - serviceAccountToken:
                      path: istio-token
                      expirationSeconds: 43200
                      audience: {{ .Values.global.sds.token.aud }}
              {{- if eq .Values.global.pilotCertProvider "istiod" }}
              - name: istiod-ca-cert
                configMap:
                  name: istio-ca-root-cert
              {{- end }}
              {{- if .Values.global.imagePullSecrets }}
              imagePullSecrets:
                {{- range .Values.global.imagePullSecrets }}
                - name: {{ . }}
                {{- end }}
              {{- end }}
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            {{ toJsonMap (omit .InfrastructureAnnotations "kubectl.kubernetes.io/last-applied-configuration" "gateway.istio.io/name-override" "gateway.istio.io/service-account" "gateway.istio.io/controller-version") | nindent 4 }}
          labels:
            {{- toJsonMap
              .InfrastructureLabels
              (strdict
                "gateway.networking.k8s.io/gateway-name" .Name
              ) | nindent 4 }}
          name: {{.DeploymentName | quote}}
          namespace: {{.Namespace | quote}}
          ownerReferences:
          - apiVersion: gateway.networking.k8s.io/v1beta1
            kind: Gateway
            name: {{.Name}}
            uid: {{.UID}}
        spec:
          ipFamilyPolicy: PreferDualStack
          ports:
          {{- range $key, $val := .Ports }}
          - name: {{ $val.Name | quote }}
            port: {{ $val.Port }}
            protocol: TCP
            appProtocol: {{ $val.AppProtocol }}
          {{- end }}
          selector:
            "{{.GatewayNameLabel}}": {{.Name}}
          {{- if and (.Spec.Addresses) (eq .ServiceType "LoadBalancer") }}
          loadBalancerIP: {{ (index .Spec.Addresses 0).Value | quote}}
          {{- end }}
          type: {{ .ServiceType | quote }}
        ---
  values: |-
    {
      "gateways": {
        "seccompProfile": {},
        "securityContext": {}
      },
      "global": {
        "caAddress": "",
        "caName": "",
        "certSigners": [],
        "configCluster": false,
        "configValidation": true,
        "defaultPodDisruptionBudget": {
          "enabled": true
        },
        "defaultResources": {
          "requests": {
            "cpu": "10m"
          }
        },
        "externalIstiod": false,
        "hub": "docker.io/istio",
        "imagePullPolicy": "",
        "imagePullSecrets": [],
        "istioNamespace": "istio-system",
        "istiod": {
          "enableAnalysis": false
        },
        "logAsJson": false,
        "logging": {
          "level": "default:info"
        },
        "meshID": "",
        "meshNetworks": {},
        "mountMtlsCerts": false,
        "multiCluster": {
          "clusterName": "",
          "enabled": false
        },
        "network": "",
        "omitSidecarInjectorConfigMap": false,
        "operatorManageWebhooks": false,
        "pilotCertProvider": "istiod",
        "priorityClassName": "",
        "proxy": {
          "autoInject": "enabled",
          "clusterDomain": "cluster.local",
          "componentLogLevel": "misc:error",
          "excludeIPRanges": "",
          "excludeInboundPorts": "",
          "excludeOutboundPorts": "",
          "image": "proxyv2",
          "includeIPRanges": "*",
          "includeInboundPorts": "*",
          "includeOutboundPorts": "",
          "logLevel": "warning",
          "outlierLogPath": "",
          "privileged": false,
          "readinessFailureThreshold": 4,
          "readinessInitialDelaySeconds": 0,
          "readinessPeriodSeconds": 15,
          "resources": {
            "limits": {
              "cpu": "2000m",
              "memory": "1024Mi"
            },
            "requests": {
              "cpu": "100m",
              "memory": "128Mi"
            }
          },
          "startupProbe": {
            "enabled": true,
            "failureThreshold": 600
          },
          "statusPort": 15020,
          "tracer": "none"
        },
        "proxy_init": {
          "forceApplyIptables": false,
          "image": "proxyv2"
        },
        "remotePilotAddress": "",
        "sds": {
          "token": {
            "aud": "istio-ca"
          }
        },
        "sts": {
          "servicePort": 0
        },
        "tag": "1.24.0",
        "variant": "distroless",
        "waypoint": {
          "affinity": {},
          "nodeSelector": {},
          "resources": {
            "limits": {
              "cpu": "2",
              "memory": "1Gi"
            },
            "requests": {
              "cpu": "100m",
              "memory": "128Mi"
            }
          },
          "tolerations": [],
          "topologySpreadConstraints": []
        }
      },
      "pilot": {
        "cni": {
          "ambient": {
            "enabled": true
          },
          "enabled": false,
          "provider": "default"
        }
      },
      "revision": "",
      "sidecarInjectorWebhook": {
        "alwaysInjectSelector": [],
        "defaultTemplates": [],
        "enableNamespacesByDefault": false,
        "injectedAnnotations": {},
        "neverInjectSelector": [],
        "reinvocationPolicy": "Never",
        "rewriteAppHTTPProbe": true,
        "templates": {}
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istio-sidecar-injector
  namespace: istio-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
spec:
  ports:
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  - name: http2
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: istio-ingress
    istio: ingress
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istiod
  namespace: istio-system
spec:
  ports:
  - name: grpc-xds
    port: 15010
    protocol: TCP
  - name: https-dns
    port: 15012
    protocol: TCP
  - name: https-webhook
    port: 443
    protocol: TCP
    targetPort: 15017
  - name: http-monitoring
    port: 15014
    protocol: TCP
  selector:
    app: istiod
    istio: pilot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
spec:
  selector:
    matchLabels:
      app: istio-ingress
      istio: ingress
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: istio-ingress
        app.kubernetes.io/instance: istio-ingress
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: istio-ingress
        app.kubernetes.io/part-of: istio
        app.kubernetes.io/version: 1.24.0
        helm.sh/chart: gateway-1.24.0
        istio: ingress
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env: null
        image: auto
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "0"
      serviceAccountName: istio-ingress
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istiod
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: pilot
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: istiod
        app.kubernetes.io/instance: istiod
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: istiod
        app.kubernetes.io/part-of: istio
        app.kubernetes.io/version: 1.24.0
        helm.sh/chart: istiod-1.24.0
        install.operator.istio.io/owning-resource: unknown
        istio: pilot
        istio.io/dataplane-mode: none
        istio.io/rev: default
        operator.istio.io/component: Pilot
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - discovery
        - --monitoringAddr=:15014
        - --log_output_level=default:info
        - --domain
        - cluster.local
        - --keepaliveMaxServerConnectionAge
        - 30m
        env:
        - name: REVISION
          value: default
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: KUBECONFIG
          value: /var/run/secrets/remote/config
        - name: CA_TRUSTED_NODE_ACCOUNTS
          value: istio-system/ztunnel
        - name: PILOT_ENABLE_AMBIENT
          value: "true"
        - name: PILOT_TRACE_SAMPLING
          value: "1"
        - name: PILOT_ENABLE_ANALYSIS
          value: "false"
        - name: CLUSTER_ID
          value: Kubernetes
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.cpu
        - name: PLATFORM
          value: ""
        image: docker.io/istio/pilot:1.24.0-distroless
        name: discovery
        ports:
        - containerPort: 8080
          name: http-debug
          protocol: TCP
        - containerPort: 15010
          name: grpc-xds
          protocol: TCP
        - containerPort: 15012
          name: tls-xds
          protocol: TCP
        - containerPort: 15017
          name: https-webhooks
          protocol: TCP
        - containerPort: 15014
          name: http-monitoring
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 3
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: istio-token
          readOnly: true
        - mountPath: /var/run/secrets/istio-dns
          name: local-certs
        - mountPath: /etc/cacerts
          name: cacerts
          readOnly: true
        - mountPath: /var/run/secrets/remote
          name: istio-kubeconfig
          readOnly: true
        - mountPath: /var/run/secrets/istiod/tls
          name: istio-csr-dns-cert
          readOnly: true
        - mountPath: /var/run/secrets/istiod/ca
          name: istio-csr-ca-configmap
          readOnly: true
      serviceAccountName: istiod
      tolerations:
      - key: cni.istio.io/not-ready
        operator: Exists
      volumes:
      - emptyDir:
          medium: Memory
        name: local-certs
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - name: cacerts
        secret:
          optional: true
          secretName: cacerts
      - name: istio-kubeconfig
        secret:
          optional: true
          secretName: istio-kubeconfig
      - name: istio-csr-dns-cert
        secret:
          optional: true
          secretName: istiod-tls
      - configMap:
          defaultMode: 420
          name: istio-ca-root-cert
          optional: true
        name: istio-csr-ca-configmap
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio: pilot
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istiod
  namespace: istio-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istiod
      istio: pilot
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: istio-cni
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-cni
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: cni-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    k8s-app: istio-cni-node
    operator.istio.io/component: Cni
    release: istio-cni
  name: istio-cni-node
  namespace: istio-system
spec:
  selector:
    matchLabels:
      k8s-app: istio-cni-node
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/instance: istio-cni
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: istio-cni
        app.kubernetes.io/part-of: istio
        app.kubernetes.io/version: 1.24.0
        helm.sh/chart: cni-1.24.0
        istio.io/dataplane-mode: none
        k8s-app: istio-cni-node
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - --log_output_level=info
        command:
        - install-cni
        env:
        - name: REPAIR_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: REPAIR_RUN_AS_DAEMON
          value: "true"
        - name: REPAIR_SIDECAR_ANNOTATION
          value: sidecar.istio.io/status
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: istio-cni-config
        image: docker.io/istio/install-cni:1.24.0-distroless
        name: install-cni
        ports:
        - containerPort: 15014
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            - SYS_PTRACE
            - SYS_ADMIN
            drop:
            - ALL
          privileged: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-bin-dir
        - mountPath: /host/proc
          name: cni-host-procfs
          readOnly: true
        - mountPath: /host/etc/cni/net.d
          name: cni-net-dir
        - mountPath: /var/run/istio-cni
          name: cni-socket-dir
        - mountPath: /host/var/run/netns
          mountPropagation: HostToContainer
          name: cni-netns-dir
        - mountPath: /var/run/ztunnel
          name: cni-ztunnel-sock-dir
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccountName: istio-cni
      terminationGracePeriodSeconds: 5
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - hostPath:
          path: /opt/cni/bin
        name: cni-bin-dir
      - hostPath:
          path: /proc
          type: Directory
        name: cni-host-procfs
      - hostPath:
          path: /var/run/ztunnel
          type: DirectoryOrCreate
        name: cni-ztunnel-sock-dir
      - hostPath:
          path: /etc/cni/net.d
        name: cni-net-dir
      - hostPath:
          path: /var/run/istio-cni
        name: cni-socket-dir
      - hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        name: cni-netns-dir
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: ztunnel
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ztunnel
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: ztunnel-1.24.0
  name: ztunnel
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: ztunnel
  template:
    metadata:
      annotations:
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: ztunnel
        app.kubernetes.io/instance: ztunnel
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ztunnel
        app.kubernetes.io/part-of: istio
        app.kubernetes.io/version: 1.24.0
        helm.sh/chart: ztunnel-1.24.0
        istio.io/dataplane-mode: none
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - args:
        - proxy
        - ztunnel
        env:
        - name: CA_ADDRESS
          value: istiod.istio-system.svc:15012
        - name: XDS_ADDRESS
          value: istiod.istio-system.svc:15012
        - name: RUST_LOG
          value: info
        - name: RUST_BACKTRACE
          value: "1"
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: INPOD_ENABLED
          value: "true"
        - name: TERMINATION_GRACE_PERIOD_SECONDS
          value: "30"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        image: docker.io/istio/ztunnel:1.24.0
        name: istio-proxy
        ports:
        - containerPort: 15020
          name: ztunnel-stats
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 15021
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - NET_RAW
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: false
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /var/run/ztunnel
          name: cni-ztunnel-sock-dir
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccountName: ztunnel
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      volumes:
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
      - configMap:
          name: istio-ca-root-cert
        name: istiod-ca-cert
      - hostPath:
          path: /var/run/ztunnel
          type: DirectoryOrCreate
        name: cni-ztunnel-sock-dir
      - emptyDir: {}
        name: tmp
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istio-ingress
    app.kubernetes.io/instance: istio-ingress
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istio-ingress
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: gateway-1.24.0
    istio: ingress
  name: istio-ingress
  namespace: istio-ingress
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istio-ingress
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istiod
  namespace: istio-system
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: istiod
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app: sidecar-injector
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    install.operator.istio.io/owning-resource: unknown
    istio.io/rev: default
    operator.istio.io/component: Pilot
    release: istiod
  name: istio-sidecar-injector
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /inject
      port: 443
  failurePolicy: Fail
  name: rev.namespace.sidecar-injector.istio.io
  namespaceSelector:
    matchExpressions:
    - key: istio.io/rev
      operator: In
      values:
      - default
    - key: istio-injection
      operator: DoesNotExist
  objectSelector:
    matchExpressions:
    - key: sidecar.istio.io/inject
      operator: NotIn
      values:
      - "false"
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /inject
      port: 443
  failurePolicy: Fail
  name: rev.object.sidecar-injector.istio.io
  namespaceSelector:
    matchExpressions:
    - key: istio.io/rev
      operator: DoesNotExist
    - key: istio-injection
      operator: DoesNotExist
  objectSelector:
    matchExpressions:
    - key: sidecar.istio.io/inject
      operator: NotIn
      values:
      - "false"
    - key: istio.io/rev
      operator: In
      values:
      - default
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /inject
      port: 443
  failurePolicy: Fail
  name: namespace.sidecar-injector.istio.io
  namespaceSelector:
    matchExpressions:
    - key: istio-injection
      operator: In
      values:
      - enabled
  objectSelector:
    matchExpressions:
    - key: sidecar.istio.io/inject
      operator: NotIn
      values:
      - "false"
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /inject
      port: 443
  failurePolicy: Fail
  name: object.sidecar-injector.istio.io
  namespaceSelector:
    matchExpressions:
    - key: istio-injection
      operator: DoesNotExist
    - key: istio.io/rev
      operator: DoesNotExist
  objectSelector:
    matchExpressions:
    - key: sidecar.istio.io/inject
      operator: In
      values:
      - "true"
    - key: istio.io/rev
      operator: DoesNotExist
  reinvocationPolicy: Never
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istiod
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: istiod-1.24.0
    istio: istiod
    istio.io/rev: default
    release: istiod
  name: istio-validator-istio-system
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /validate
  failurePolicy: Ignore
  name: rev.validation.istio.io
  objectSelector:
    matchExpressions:
    - key: istio.io/rev
      operator: In
      values:
      - default
  rules:
  - apiGroups:
    - security.istio.io
    - networking.istio.io
    - telemetry.istio.io
    - extensions.istio.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*'
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app: istiod
    app.kubernetes.io/instance: istio-base
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: istiod
    app.kubernetes.io/part-of: istio
    app.kubernetes.io/version: 1.24.0
    helm.sh/chart: base-1.24.0
    istio: istiod
    istio.io/rev: default
    release: istio-base
  name: istiod-default-validator
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: istiod
      namespace: istio-system
      path: /validate
  failurePolicy: Ignore
  name: validation.istio.io
  rules:
  - apiGroups:
    - security.istio.io
    - networking.istio.io
    - telemetry.istio.io
    - extensions.istio.io
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*'
  sideEffects: None
