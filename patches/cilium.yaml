cluster:
  inlineManifests:
    - name: kube-system
      contents: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-envoy
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-relay
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          - create
          - update
          - deletecollection
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgppeeringpolicies
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumpodippools
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-bgp-control-plane-secrets
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          agent-not-ready-taint-key: node.cilium.io/agent-not-ready
          arping-refresh-period: 30s
          auto-direct-node-routes: "false"
          bgp-secrets-namespace: kube-system
          bpf-events-drop-enabled: "true"
          bpf-events-policy-verdict-enabled: "true"
          bpf-events-trace-enabled: "true"
          bpf-lb-acceleration: disabled
          bpf-lb-external-clusterip: "false"
          bpf-lb-map-max: "65536"
          bpf-lb-sock: "false"
          bpf-lb-sock-terminate-pod-connections: "false"
          bpf-map-dynamic-size-ratio: "0.0025"
          bpf-policy-map-max: "16384"
          bpf-root: /sys/fs/bpf
          cgroup-root: /sys/fs/cgroup
          cilium-endpoint-gc-interval: 5m0s
          cluster-id: "0"
          cluster-name: default
          clustermesh-enable-endpoint-sync: "false"
          clustermesh-enable-mcs-api: "false"
          cni-exclusive: "false"
          cni-log-file: /var/run/cilium/cilium-cni.log
          custom-cni-conf: "false"
          datapath-mode: veth
          debug: "false"
          debug-verbose: ""
          direct-routing-skip-unreachable: "false"
          dnsproxy-enable-transparent-mode: "true"
          dnsproxy-socket-linger-timeout: "10"
          egress-gateway-reconciliation-trigger-interval: 1s
          enable-auto-protect-node-port-range: "true"
          enable-bgp-control-plane: "true"
          enable-bpf-clock-probe: "false"
          enable-endpoint-health-checking: "true"
          enable-health-check-loadbalancer-ip: "false"
          enable-health-check-nodeport: "true"
          enable-health-checking: "true"
          enable-hubble: "true"
          enable-ipv4: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv4-masquerade: "true"
          enable-ipv6: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-k8s-networkpolicy: "true"
          enable-k8s-terminating-endpoint: "true"
          enable-l2-neigh-discovery: "true"
          enable-l7-proxy: "true"
          enable-local-redirect-policy: "false"
          enable-masquerade-to-route-source: "false"
          enable-metrics: "true"
          enable-node-ipam: "true"
          enable-node-selector-labels: "false"
          enable-policy: default
          enable-runtime-device-detection: "true"
          enable-sctp: "false"
          enable-svc-source-range-check: "true"
          enable-tcx: "true"
          enable-vtep: "false"
          enable-well-known-identities: "false"
          enable-xt-socket-fallback: "true"
          envoy-base-id: "0"
          envoy-keep-cap-netbindservice: "true"
          external-envoy-proxy: "true"
          hubble-disable-tls: "false"
          hubble-export-file-max-backups: "5"
          hubble-export-file-max-size-mb: "10"
          hubble-listen-address: :4244
          hubble-socket-path: /var/run/cilium/hubble.sock
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          identity-allocation-mode: crd
          identity-gc-interval: 15m0s
          identity-heartbeat-timeout: 30m0s
          install-no-conntrack-iptables-rules: "false"
          ipam: kubernetes
          ipam-cilium-node-update-rate: 15s
          k8s-client-burst: "20"
          k8s-client-qps: "10"
          k8s-require-ipv4-pod-cidr: "false"
          k8s-require-ipv6-pod-cidr: "false"
          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          max-connected-clusters: "255"
          mesh-auth-enabled: "true"
          mesh-auth-gc-interval: 5m0s
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          monitor-aggregation: medium
          monitor-aggregation-flags: all
          monitor-aggregation-interval: 5s
          nat-map-stats-entries: "32"
          nat-map-stats-interval: 30s
          node-port-bind-protection: "true"
          nodeport-addresses: ""
          nodes-gc-interval: 5m0s
          operator-api-serve-addr: 127.0.0.1:9234
          operator-prometheus-serve-addr: :9963
          policy-cidr-match-mode: ""
          preallocate-bpf-maps: "false"
          procfs: /host/proc
          proxy-connect-timeout: "2"
          proxy-idle-timeout-seconds: "60"
          proxy-max-connection-duration-seconds: "0"
          proxy-max-requests-per-connection: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-xff-num-trusted-hops-ingress: "0"
          remove-cilium-node-taints: "true"
          routing-mode: tunnel
          service-no-backend-response: reject
          set-cilium-is-up-condition: "true"
          set-cilium-node-taints: "true"
          synchronize-k8s-nodes: "true"
          tofqdns-dns-reject-response-code: refused
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: 0s
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: 100ms
          tunnel-protocol: vxlan
          unmanaged-pod-watcher-interval: "15"
          vtep-cidr: ""
          vtep-endpoint: ""
          vtep-mac: ""
          vtep-mask: ""
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          bootstrap-config.json: |
            {
              "node": {
                "id": "host~127.0.0.1~no-id~localdomain",
                "cluster": "ingress-cluster"
              },
              "staticResources": {
                "listeners": [
                  {
                    "name": "envoy-prometheus-metrics-listener",
                    "address": {
                      "socket_address": {
                        "address": "0.0.0.0",
                        "port_value": 9964
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-prometheus-metrics-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "prometheus_metrics_route",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "prometheus_metrics_route",
                                        "match": {
                                          "prefix": "/metrics"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/stats/prometheus"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "envoy-health-listener",
                    "address": {
                      "socket_address": {
                        "address": "127.0.0.1",
                        "port_value": 9878
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-health-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "health",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "health",
                                        "match": {
                                          "prefix": "/healthz"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/ready"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "clusters": [
                  {
                    "name": "ingress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "egress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "egress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "ingress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "xds-grpc-cilium",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "xds-grpc-cilium",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/xds.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "explicitHttpConfig": {
                          "http2ProtocolOptions": {}
                        }
                      }
                    }
                  },
                  {
                    "name": "/envoy-admin",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "/envoy-admin",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "dynamicResources": {
                "ldsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                },
                "cdsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                }
              },
              "bootstrapExtensions": [
                {
                  "name": "envoy.bootstrap.internal_listener",
                  "typed_config": {
                    "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
                  }
                }
              ],
              "layeredRuntime": {
                "layers": [
                  {
                    "name": "static_layer_0",
                    "staticLayer": {
                      "overload": {
                        "global_downstream_max_connections": 50000
                      }
                    }
                  }
                ]
              },
              "admin": {
                "address": {
                  "pipe": {
                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                  }
                }
              }
            }
        kind: ConfigMap
        metadata:
          name: cilium-envoy-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
            :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
            \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
            /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
            true\n"
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
            \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
            1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
            X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
            \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
            *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
            content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
            range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
            \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
            \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
            \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
            \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
            \           # double `/index.html` is required here \n            try_files $uri
            $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
            /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
            \           return 200 'ok';\n        }\n    }\n}"
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1jcGMzekdRUk9hSTFCaUh0RHBnTW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE9UQTFNREV4TUZvWERUSTNNVEV4T1RBMQpNREV4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvNUFhWkJWTVlmS2ZqL1FIbkRrOXVMUDdUMFFaUVBFR1F4WmFpRlVZNVBVdDVieTgKd0UzbnJHS25JdG04alBYUEFBRVF4ZHR0MmlBMURsS1pYRnB6SVZQSzdwcm1rOGc1bGViemhZKzhKWVQ2ZXhnWAo5VW0xWk9IRkd4UTJ3UGM0ZCtXcWxjcFNaK2ZpUkl6Y2JlM0lqNUMzY3V2LytHRVhTUDRtb2dkYTJxSktBQ2tDCmhQWkYxRm0wcFlWL2EwT2tWOEtoNXlGV0REdHBGYVhVM3diRDZhM3V6NHJ4NzZUWGdWemZLaHE1UnFrYVFnQzEKMDY0cVBHb2I3TUwzRXBqM2hrUVZTZ1lsQnBQSWVxaGpvVlhjclR3elNRUjQ1R2JGWHhNZ0tTYVpzMHUvZ0ZzbQpEbUQ5OFhZT21aa3Y3N0NXUmNjYklSbUpTVXVlaytBMU5rQ3Y0UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDFld243emNTbktDVG9xUWE4Ry94RlJFbmxnTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmQ1OUc4S0d1d0ZCcFVzWW9ETkp4Z0F0czd0WWNiWUlQd1ErWHU5aTJNcWNNQ1RucWo4Y1dEClhzVmEzaVo0cS9EZzJEZERtV3BHRlQyYWFOT0QvajhyQ1MvQ0treWhtZzNlNXhyUDhrRmIwc2xSN1hsZ2RublAKMmorZnNUam1rZ0o2M054OG5CTXVJbXBSb2IrYVl3U3I3U1RneXplUGRaN0lCcS90ekIwUGVwYWUwd0FwVjk5MgpEYkc0UnloSU9yMmdTSjNaSDU3YmJNOHUrbU80TzFJL2ZkSmRqZ28ra2pEVW9wSVpDd2ZKc2RwWnRGQktTN2RuCm1kemxUVzlHQVF6ZmRrWGF2TGE1YW9jVFhMR0ozTUVjTngzTnpweVhUQlB3R0tZMWsvWm9IYkZORVk1d2FvY0UKQnBnVEpveG8yclZvOTduOXZTUURpMDdIRU1CalAxTDMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbzVBYVpCVk1ZZktmai9RSG5Eazl1TFA3VDBRWlFQRUdReFphaUZVWTVQVXQ1Ynk4CndFM25yR0tuSXRtOGpQWFBBQUVReGR0dDJpQTFEbEtaWEZweklWUEs3cHJtazhnNWxlYnpoWSs4SllUNmV4Z1gKOVVtMVpPSEZHeFEyd1BjNGQrV3FsY3BTWitmaVJJemNiZTNJajVDM2N1di8rR0VYU1A0bW9nZGEycUpLQUNrQwpoUFpGMUZtMHBZVi9hME9rVjhLaDV5RldERHRwRmFYVTN3YkQ2YTN1ejRyeDc2VFhnVnpmS2hxNVJxa2FRZ0MxCjA2NHFQR29iN01MM0VwajNoa1FWU2dZbEJwUEllcWhqb1ZYY3JUd3pTUVI0NUdiRlh4TWdLU2FaczB1L2dGc20KRG1EOThYWU9tWmt2NzdDV1JjY2JJUm1KU1V1ZWsrQTFOa0N2NFFJREFRQUJBb0lCQUVLL2x4V0szNDRGVG5xWApzdGRkUU1QMHB6VlU3QjFsZnhHM3VLQjBZZUZsOFNJVklNNDF2THJMMDd0VU1pOHdUUmFLV01iMTRtR216U0FZCk16L09KYmZQRXp6R2VCeU5GSHNKTWc0cWR6UzBqT2ZaRUVYb201OGN4NnhpVm1udk9kc3NIYTVkVDczWmtxdzQKOCtma3B2bDNySFc0dTlBb0J6R2hqakNIWWR0Z3dqWUtLa0J6UzJ4azZpeVZVeHhVdlF5NWxqb2tYbTk1R3pOUQpsM0xEeUYzbjdOT25MWVoyVUVQT2xFQ2c4MVlwR2pxYzhlYjg3MUNGRVlxNVVycW5MU2ZnM1pnUGpIYjJVQ056CmxTTmIrckg0YzFoaW5uS0oxRnBNOTJORHc0NExqM29WYjdmbjJ5UUwxR20yWitHc0JZbTl0ck8zRVYxTTlxb1YKWU9jSDJzRUNnWUVBMWZNMXJ4VU5yZElCNWQ5Tnc2WmRDZHhmSTFRY0I3SUw2WFppd2RBNkhwR2ZmY2dpMEkrYQp6c3ZLV0Z3dWRMelZubDMvTmxaMHN4NEJHLzlVckVPM00rSGhHZUdlNFE1S0VPSHZoSkQ4THl3VnkxNEVDdVpCCjFzMGZ1cFUzTHV0N0FUMXpkb1Y1VklGd2RSbVEweWdzR2JyZWZHdnRKRGhHcVc5Mm1DazQzSWtDZ1lFQXc3V3cKaWtUQTE4eVZoWkxHRFJoY0J4U0Rkd2pFc0xsYWhJZEpVOEF4WVEwemxUNVBuK2pJM3dxdGJyMGFhZ0xncEQwbApxa3VXRkhkMEpuNmIzb01YdHBOMEt5d1c3dWpEdGJrRk5nWmsrTmhqQXhiZXRhTUViVVdhTlg4QUJEZzUreWJJCm5nUFV4RHJ2dmh0OXlOclF1KzROUkRZRjBjQnVPRXhSTytsWlVwa0NnWUVBbVYyOWR1TXRxaE5udnVPQytDUVMKZjVZVU1Od0ROOVQreXYxTkw4ZlhVY0JyeHh1bk1VQXY1ZHVhRWhzS1JpNXpKeElVZDF3a1RaM05oOGRSYUNjbQpkYStPMENHMjVYZDd5bnhiV1BraGZhTXBnRjNGb2hhS3piSys4dDR4NzVWbjJHeTNqeGVBOFAzVW9teVFMMzJWCmwyQW9TcUtISExhbW1LREpMNndsRVprQ2dZRUFzdnBQcnNOZGtIeTZLT09uVjRaMWNzd2h4aFF3dkdWbUVGa2cKaUFUMW80bk5LS2xKYkRZWXJWRTRkbE5kK3FFVEMyQVlOL3JVRDNlR3MwV0tDaDNjNjgxQnFkR3lUMTV5ekplZAoybUJTcXZoSTVDUmdHOEF2WmpjRzVmRjA5R2J2TDIyeWZqK0dyc1l2UmE0aWhETUlQVFZnMElhUEg5bFpjd2JvCksyQWxuZEVDZ1lCODJLYnY5Y3M3cWFZRXZpM05aR1B1TzZJaktndUp5WFdkcE42bXp1Y3JkRnJxTGJ3QlpTTFAKdFJSV3ZudkgzcGM3WGtxTkJuOHpaNDc3OUVaYmRoNGxyMmFVTit2Tlc0enhpN2M2cmE5SFoxdUkrTytTVXQ2TQp2TklJQmZyVUhFTjFwVXNxR2JXcWFDdDU0eE5vMjZJdGdza2t0TFUrUjU0T2ZHOGFFTHdOelE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1jcGMzekdRUk9hSTFCaUh0RHBnTW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE9UQTFNREV4TUZvWERUSTNNVEV4T1RBMQpNREV4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvNUFhWkJWTVlmS2ZqL1FIbkRrOXVMUDdUMFFaUVBFR1F4WmFpRlVZNVBVdDVieTgKd0UzbnJHS25JdG04alBYUEFBRVF4ZHR0MmlBMURsS1pYRnB6SVZQSzdwcm1rOGc1bGViemhZKzhKWVQ2ZXhnWAo5VW0xWk9IRkd4UTJ3UGM0ZCtXcWxjcFNaK2ZpUkl6Y2JlM0lqNUMzY3V2LytHRVhTUDRtb2dkYTJxSktBQ2tDCmhQWkYxRm0wcFlWL2EwT2tWOEtoNXlGV0REdHBGYVhVM3diRDZhM3V6NHJ4NzZUWGdWemZLaHE1UnFrYVFnQzEKMDY0cVBHb2I3TUwzRXBqM2hrUVZTZ1lsQnBQSWVxaGpvVlhjclR3elNRUjQ1R2JGWHhNZ0tTYVpzMHUvZ0ZzbQpEbUQ5OFhZT21aa3Y3N0NXUmNjYklSbUpTVXVlaytBMU5rQ3Y0UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDFld243emNTbktDVG9xUWE4Ry94RlJFbmxnTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmQ1OUc4S0d1d0ZCcFVzWW9ETkp4Z0F0czd0WWNiWUlQd1ErWHU5aTJNcWNNQ1RucWo4Y1dEClhzVmEzaVo0cS9EZzJEZERtV3BHRlQyYWFOT0QvajhyQ1MvQ0treWhtZzNlNXhyUDhrRmIwc2xSN1hsZ2RublAKMmorZnNUam1rZ0o2M054OG5CTXVJbXBSb2IrYVl3U3I3U1RneXplUGRaN0lCcS90ekIwUGVwYWUwd0FwVjk5MgpEYkc0UnloSU9yMmdTSjNaSDU3YmJNOHUrbU80TzFJL2ZkSmRqZ28ra2pEVW9wSVpDd2ZKc2RwWnRGQktTN2RuCm1kemxUVzlHQVF6ZmRrWGF2TGE1YW9jVFhMR0ozTUVjTngzTnpweVhUQlB3R0tZMWsvWm9IYkZORVk1d2FvY0UKQnBnVEpveG8yclZvOTduOXZTUURpMDdIRU1CalAxTDMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRV1RwQUdWQkhybmhzYWUvQ21RcGI0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFNU1EVXdNVEV3V2hjTk1qY3hNVEU1TURVdwpNVEV3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQmhMYmFaVXJFcytRWFErTEVMNU03emNVZUdXcWEKbmorNWsyV2UwQ0pFN1gwVlNJRk5HLzQvZnI4VFRTdEsyM29CcVBNQWRQZ2ZLUGJNODZQRWdPTzEwZkR5aVlRUwpDT1F3RXhrTldDUFZZQjk5SXdhR2dxL2Z5QTVPRmNXYmN1alAxL1NwZ21lTk01cW5wa1VWZVpJYjRlaysvNUtICkdhSmNhbk5TNVUwSUxRdHJhVnNCaTFjUGlOc09JL1R5NE9YN054aWxNYUsram5kZmJiNHV3SldSQmRLZlBBWmcKMS9wSkIxWFJHbzNVZzV6ckN2YWtRN3F4dktMSFhyUm9OMTUzNG9QVmNPZDEvRzJmTFFtMVZ0SnBreitHTzZzWgo5M3J4Y1pVOGtpZ3VxZUR2VGpzamdFZ3huaDJiemk1T0VtaTZRdGlraWsxcGM4ZU96Q0czRmU1UEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQMWV3bjd6Y1NuS0NUb3FRYThHL3hGUgpFbmxnTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFudXF0eXFEVVRrY1JNMWhGbjRZTkFtRklWR1RTczdJNEw0b0pKbjlkZ0VLMjJwOHoKTGRodHNpaUhVVU5iS0h4ZDUzQ0IvNm1Ka3YrTURHVUNKT1RFNUl2akZ2bnRDV2tZbUUydW1mNDIvNk8yT01mSQpXREpUdmswV2VlTVEyb3cvRGx0eS94SzlRVW54RlF0enoyRFpLWGhPTkV0eDB6WHJKeGdjTkRsa1BocXRGUE5JCmlTSm1UZ2N0S0x4WVBLc3dDczRxcUdVUUNDOWxkVXhmQU5Ra2hsOXp0eERJMnhlNmw0M0kxclR1NzYwKzdJL0UKbVJxS3I4L05XNkhNdk9iTThXZjMyV2ZhamZGZmw3RFVERmovWjd5TWNRQ3dwK1dKTGFEUmxjc3dpYmZ5ZWM3SgpONVAxakhGZkdOUGVNM0hFZWdhaHAxdTEvbUNzdUkzYkpEZkFFZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1lTMjJtVkt4TFBrRjBQaXhDK1RPODNGSGhscW1wNC91Wk5sbnRBaVJPMTlGVWlCClRSditQMzYvRTAwclN0dDZBYWp6QUhUNEh5ajJ6UE9qeElEanRkSHc4b21FRWdqa01CTVpEVmdqMVdBZmZTTUcKaG9LdjM4Z09UaFhGbTNMb3o5ZjBxWUpualRPYXA2WkZGWG1TRytIcFB2K1NoeG1pWEdwelV1Vk5DQzBMYTJsYgpBWXRYRDRqYkRpUDA4dURsK3pjWXBUR2l2bzUzWDIyK0xzQ1ZrUVhTbnp3R1lOZjZTUWRWMFJxTjFJT2M2d3IyCnBFTzZzYnlpeDE2MGFEZGVkK0tEMVhEbmRmeHRueTBKdFZiU2FaTS9oanVyR2ZkNjhYR1ZQSklvTHFuZzcwNDcKSTRCSU1aNGRtODR1VGhKb3VrTFlwSXBOYVhQSGpzd2h0eFh1VHdJREFRQUJBb0lCQVFDdW9kbjB5YldvUG9JVgo4S0FCMU1EMEZlUE5IcmlSNFQ2MmMrb2ZYOG1kRkFkdG5tbDRzVXRGOTFYczBCWENUcjhTSW1sdnZ4NXQyQ1NuCm5USHJVVGlzU2xFNlBaaWVRY0hTRkZubUxlVGdXQWJ5Z1JvUlpudlo0UW52c3p3STVMQnRaMytWUEdYQUNaS0YKdWNqYjhVSkZ3UjhnUjdmdUROYjB1T2RySmh2V3hHVithM1ZCdUpqWVZJN0tKa0libXczWDh3cmxzNFlvamFjaQpuVFBRbmFaQTdKajZQOFVjbGtJRUw2VHd5cHAzVmFGTTJNSnM0NmdRc1Z6b0xtdHRZYi80bkVRVlJMTUs1VHZLCkpESnNwaDRrTUVLOFowc1pwV2ZkNWhsVk1RK240WjJuZGNGd3BWK3d5MEFybVViTHZnSGxBYmVaZmFIcEhVRDcKaGQvLzBMS1pBb0dCQU5lTjlTUmFDTDVGTUZvQnE3MUJ3Ryt3TDBhZHRYVmtVM2pWdTFwbUZIUGRUUHJEcGFXeApkOEdwdU5GMkREVEx5M1h2YWk3ajFYV3MyUzFRZW9xUVdyV1pRV2JmVWRjbWlXdWlyL1E4MGdxeUZIeE14K0pvCmc5ZVFPVmZLTkQ1LzNqaG9OTDYxRGNZTVdMTzgwZUVldzBMOFRNaFJ1RkMraDZoNW5pWHJOOXNyQW9HQkFPWFUKUTdRdkgyaHdtU3RLZnBSY0o2bTUyQnhmN1Ewa2lmRDcxM0RwMWg2NHNTU1owYlZ4VFRVS1k5a1dQdU5WbGo1SgpSM3ZPcDMrc3lrczdXNnVSckJ6STRaa2lmc0tJL2pOb3Q3VmdMQXhkQXd2TjNTVXBiQXhCekZvZmFscWZIYlNRCnVwL1hvQmVCS09SdXlRcEJYRVgvdmFpekNDcTBManQzY2RVdGRsZHRBb0dBWkZLWHM3R0x2REtyakZpV3UrRHMKVlk4a2tiTTVEMGdBYVk3Z1FmU2N0RWhkV2FEUmFjcXRPQjlyKzJENzBWN0FkVVZXb0RnOTB5VDlkMCtybU80UwpxYzZJVi82OE1teW5MTWR0S1RsZGNNanRLK1Q0YXZIRjJ3QXZFQ0wyS2RpTmJxZGhWUmtqTGZmMUdNSmExSEhpCjR6eFY2QzNRb1JQc1E0ZEhDZEx1RGowQ2dZQjlCUVIzUlpMdU95SDIzS1VTaXpiQUt1b1dOVkE3Ny81aGFuMTkKWEpZdlRBU0FoblAvSVUwQVoxQjlUSTZWRjMrTkRrdW1XM25lQjk1YklrVHhoV0o4bmdHcVRZdHF3eDZVVklocQpUNUJtZ1VvZzU3RStmOVBZcndvOGxBNUVrWDJWTlkxdldkb3FMd1pSakxvcnEvWkgxYUFUM3ArNHF4N2pGa3lECnpDRXQyUUtCZ1FDdk03cUN0ZUE1OVg4SFlkbkhoYkNWYmtlU2pIY1Rua3MrSjlGMHp6T2tmSDJLSEdydXZ2YWsKeE9yaWlYc2E1aE04bGQrN2hOdHJycTZmWlJDSE9rNWh1bVFmWVp3eC8xYXFzLytvdk9Ndm1kRlVobDlHMlFnagpCaXhaUThuc1lYSUxIYkV3WlB6dkp4ekdYOGpGemQ2SVdsWnFmWkVOcm5vQklsTlF0b2ZUV0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1jcGMzekdRUk9hSTFCaUh0RHBnTW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE9UQTFNREV4TUZvWERUSTNNVEV4T1RBMQpNREV4TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFvNUFhWkJWTVlmS2ZqL1FIbkRrOXVMUDdUMFFaUVBFR1F4WmFpRlVZNVBVdDVieTgKd0UzbnJHS25JdG04alBYUEFBRVF4ZHR0MmlBMURsS1pYRnB6SVZQSzdwcm1rOGc1bGViemhZKzhKWVQ2ZXhnWAo5VW0xWk9IRkd4UTJ3UGM0ZCtXcWxjcFNaK2ZpUkl6Y2JlM0lqNUMzY3V2LytHRVhTUDRtb2dkYTJxSktBQ2tDCmhQWkYxRm0wcFlWL2EwT2tWOEtoNXlGV0REdHBGYVhVM3diRDZhM3V6NHJ4NzZUWGdWemZLaHE1UnFrYVFnQzEKMDY0cVBHb2I3TUwzRXBqM2hrUVZTZ1lsQnBQSWVxaGpvVlhjclR3elNRUjQ1R2JGWHhNZ0tTYVpzMHUvZ0ZzbQpEbUQ5OFhZT21aa3Y3N0NXUmNjYklSbUpTVXVlaytBMU5rQ3Y0UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUDFld243emNTbktDVG9xUWE4Ry94RlJFbmxnTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmQ1OUc4S0d1d0ZCcFVzWW9ETkp4Z0F0czd0WWNiWUlQd1ErWHU5aTJNcWNNQ1RucWo4Y1dEClhzVmEzaVo0cS9EZzJEZERtV3BHRlQyYWFOT0QvajhyQ1MvQ0treWhtZzNlNXhyUDhrRmIwc2xSN1hsZ2RublAKMmorZnNUam1rZ0o2M054OG5CTXVJbXBSb2IrYVl3U3I3U1RneXplUGRaN0lCcS90ekIwUGVwYWUwd0FwVjk5MgpEYkc0UnloSU9yMmdTSjNaSDU3YmJNOHUrbU80TzFJL2ZkSmRqZ28ra2pEVW9wSVpDd2ZKc2RwWnRGQktTN2RuCm1kemxUVzlHQVF6ZmRrWGF2TGE1YW9jVFhMR0ozTUVjTngzTnpweVhUQlB3R0tZMWsvWm9IYkZORVk1d2FvY0UKQnBnVEpveG8yclZvOTduOXZTUURpMDdIRU1CalAxTDMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRZUd6aHhyRFRvTXVnRnZjU3Q0SGFGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFNU1EVXdNVEV3V2hjTk1qY3hNVEU1TURVdwpNVEV3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbUI4bDlWWVJiUlVPNVVISTNxNmcKUW5wZEZBcXJUZEN6Y1d5K0ZVN01jVW5XbmdxMDBnTUgrVWdYL0ZmYUF5eUtCNE1mSGtsZlpaTDZhbk81RGFxUwpQUU1IUHkwQzBHSjVrOFZtcnRqTGgzMzlNS29XaStjeStiUWZrdS9UeUtmbWJSUUtRcWlmYTJiY00vMEt1SGZwCnNObHRyVWcxZ2szMlRLcXgwM3FNOWZReGhnbXZnMG84bnVjdVRlbW9EZEl4UzJ1dEw0aEErWFRLdFpUMUFPRkYKU0h1aE56NUwzUEZMcFpBWi9sZzIyRDhVeXcvTTM2WS93R29kSWNJUkFZL2ZLY3FONGQzK1ZycDV6M2tlc1FGSgpESFl6aGVIdkE0N0QzenpFQnRoQVRzRmJSZVhXQUhKa1cyM28rdlFlajRaWWNDYmpzRWE2bzJKMm5Gd2U5VUVECll3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUOVhzSis4M0VweWdrNgpLa0d2QnY4UlVSSjVZREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCVUw4L0xOazkramJ0SzBlK0pqMGJnemJucGg2U1MKK3ZhamlZeUJYZ0hBL3BEdFRQMi9PcGJYNytaQ3pMcTRXajlVOW1ZWlg4RkdUUlVjRmJxc0FmckF5REYwYk8wWgpNWVF3amdxdCsxMnppdVJXekZjQ2hMdi85Q1ZZZDlVaHNNVGdpQlBadWV4a1BuaERvbGVETWdLSGpJczFNMDVTCnFONkJGQjVRZVNieXhvRlduSzRpV2VDNGp6Mmh6QUZsT0xKTVkrbEp2cXZYNU5IMm9nZHU1dWtJNWljNXhLTnMKSnVyYnN3bWJ6a3ZaNmVPM3cvTnh3ODVQZnZyUk5xQ1hzVllZRlNwUUZRZnFHYU1vd2xRRzk3OENyK2hsbVQrWAp2ZmpaUEJWMnJrR01IT0FlVlZvbmQvTStoN0d2VkZKNFZTTGNVT3NDTkRqMFplYjh5YUpSdml2ZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbUI4bDlWWVJiUlVPNVVISTNxNmdRbnBkRkFxclRkQ3pjV3krRlU3TWNVblduZ3EwCjBnTUgrVWdYL0ZmYUF5eUtCNE1mSGtsZlpaTDZhbk81RGFxU1BRTUhQeTBDMEdKNWs4Vm1ydGpMaDMzOU1Lb1cKaStjeStiUWZrdS9UeUtmbWJSUUtRcWlmYTJiY00vMEt1SGZwc05sdHJVZzFnazMyVEtxeDAzcU05ZlF4aGdtdgpnMG84bnVjdVRlbW9EZEl4UzJ1dEw0aEErWFRLdFpUMUFPRkZTSHVoTno1TDNQRkxwWkFaL2xnMjJEOFV5dy9NCjM2WS93R29kSWNJUkFZL2ZLY3FONGQzK1ZycDV6M2tlc1FGSkRIWXpoZUh2QTQ3RDN6ekVCdGhBVHNGYlJlWFcKQUhKa1cyM28rdlFlajRaWWNDYmpzRWE2bzJKMm5Gd2U5VUVEWXdJREFRQUJBb0lCQUhtTXVmblVzY3ZsZmFkMQo3eGp2azZKS3Y4RFozWk1wNVpnRitjUncyQzdWZnlWOURJcWFYVzYwU21ZWmxGdmc1TkduMWQrUFpTaDJUcDFzCnBqcmpSa0oxL3Y1ZDZ0ZXpOODM1ZDFqU1paNTM3eTFKV3dhaTBEcHgwS0RKL1FGaUYxNmxHcVcwc3QxUXJUYmwKUkFHdDN3NnVUVktlVmhNdVZGVmlOd0R4OVZ3NGJWRGdQTU1yQ1BiV3hQT1RDekJFT3gxOUs4N3RaTUl3RDc0SAovdG1VV01rdjkvMkhvaUVxYlN3KzNtZHdrbjZXRFFmT2s3SzJVL2l5YjBmTnFVN1J5NmsvdzZVMVBjRkdmbjhECk51dFlsdFdVR05uaW1IUTIvTGJXNTE0dk1scEF0c0VYcEd6aDlNcitrTnhIN1dvY1psWWdLc2NiMTZNUzNrcEEKVkRuVFFPRUNnWUVBdzVNdS9uUEwvd2EzWEMzam03YVdBbWczMWdsMzdRVVBKUkFpeG15Z1RocDg1di9WQ2pnMgpDeW9WdW41emh4VFJIZTEzazB3cFBmVGJKMGxBTHRlZ0xlVkRucCtPVlhobzY5Z0Y3ZW45WnVoSU5SZmZVc0ZGCno4NjQ4SklHeEpTcHRtdFR5RGlWbGlNcGZubmhvS2Fra09tWENMdFJFNDFFU0Jhbk8vNGh0R3NDZ1lFQXh4OFIKenVuajlwOFV4SmR4ckdPc3VTdDBvMldTVExPeVNEdXZsRTM2YTVkR0VSNnZwU2MvRS90K0UxS21GNmJXZytlRgpRbUVUaEJlN1Qza3hlcDZWbFFrUWEweWh0MU9iTlZaanFob0VjeGJxdzBia3pySTgrenR0OW40enA2akFmbDhECks1SFhRMjBFNUxUOGJRWW4vUDdOR0p0RTMvSm9tYU1uSkdkKzZ1a0NnWUFDS3FFOHBGL0FKWHptZ29PZzkvYlYKYy80YVd1Ui9OYTBqUmZoOHBqdG9ZaGE4SUYxbHpaV2JyZzJya1RjS2FncWZBRUJ3MjBraHJKSzQ3ckROVkFvcwpOL3YxeCtLMXc2MjEzeURCci9Qa3JmSU8xSUxlMGRGS0tnb1djQ2V2Q2M2UGZNVGkxTzJqU2lSdGlFQWRuWHI1Ck4vMDZWWWppWkpBN0ZEVXFEdmlrblFLQmdDNW9OVlJOK28wOTRpODNSSXp5NWd4NTdrTXVwdnd0WFQyc2UyMUwKQnpRUUc0cGQ1bjNOT2N4RWJzdStGV3VwdkpFZFlsZG9ISTVLb2FNU0VkQU1LYnlFVWtsUG9Oa0RLVWN6RFNOVgowUGVwdmFrcFdxWTVzREMxVnhsOXJEaEZBaWZ4cU9GOHFmalM3Yk1INDFUZGZIQmdTaGlVQjJkU0xjS3czYXlFClduWVJBb0dBWXl4aGd1MkZ1OXNETlZ3blRGUkQ5VjRNNU5sWUdmdm9yRm5hQnd0YjhTS09ZaHV4TitLRHBGL0kKbDlMMzVjbkN3UWwyenNjWklPM2hTMzZwZTVsM0Yxc3lxQWlXSlRVbWNMS0FIYlkvWkVGZVRpN0w3d1prK2VLVAowTkhncFNLZlhIeUhnVzlYYkpjc1M1akdiOTRPSnZuc2t5clJOOTZ6NFFXUitIMThTQTg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/port: "9964"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            io.cilium/app: proxy
            k8s-app: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          clusterIP: None
          ports:
          - name: envoy-metrics
            port: 9964
            protocol: TCP
            targetPort: envoy-metrics
          selector:
            k8s-app: cilium-envoy
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-peer
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: hubble-peer
          namespace: kube-system
        spec:
          internalTrafficPolicy: Local
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          selector:
            k8s-app: cilium
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: grpc
          selector:
            k8s-app: hubble-relay
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          ports:
          - name: http
            port: 80
            targetPort: 8081
          selector:
            k8s-app: hubble-ui
          type: ClusterIP
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: cilium-operator
            app.kubernetes.io/part-of: cilium
            io.cilium/app: operator
            name: cilium-operator
          name: cilium-operator
          namespace: kube-system
        spec:
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                app.kubernetes.io/name: cilium-operator
                app.kubernetes.io/part-of: cilium
                io.cilium/app: operator
                name: cilium-operator
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                command:
                - cilium-operator-generic
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/operator-generic:v1.16.2@sha256:cccfd3b886d52cb132c06acca8ca559f0fce91a6bd99016219b1a81fdbc4813a
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                name: cilium-operator
                ports:
                - containerPort: 9963
                  hostPort: 9963
                  name: prometheus
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp/cilium/config-map
                  name: cilium-config-path
                  readOnly: true
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-cluster-critical
              restartPolicy: Always
              serviceAccountName: cilium-operator
              tolerations:
              - operator: Exists
              volumes:
              - configMap:
                  name: cilium-config
                name: cilium-config-path
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-relay
            spec:
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: false
              containers:
              - args:
                - serve
                command:
                - hubble-relay
                image: quay.io/cilium/hubble-relay:v1.16.2@sha256:4b559907b378ac18af82541dafab430a857d94f1057f2598645624e6e7ea286c
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 12
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                name: hubble-relay
                ports:
                - containerPort: 4245
                  name: grpc
                readinessProbe:
                  grpc:
                    port: 4222
                  timeoutSeconds: 3
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 65532
                  runAsNonRoot: true
                  runAsUser: 65532
                startupProbe:
                  failureThreshold: 20
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/hubble-relay
                  name: config
                  readOnly: true
                - mountPath: /var/lib/hubble-relay/tls
                  name: tls
                  readOnly: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              restartPolicy: Always
              securityContext:
                fsGroup: 65532
              serviceAccountName: hubble-relay
              terminationGracePeriodSeconds: 1
              volumes:
              - configMap:
                  items:
                  - key: config.yaml
                    path: config.yaml
                  name: hubble-relay-config
                name: config
              - name: tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: client.crt
                      - key: tls.key
                        path: client.key
                      - key: ca.crt
                        path: hubble-server-ca.crt
                      name: hubble-relay-client-certs
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-ui
            spec:
              automountServiceAccountToken: true
              containers:
              - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                name: frontend
                ports:
                - containerPort: 8081
                  name: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/nginx/conf.d/default.conf
                  name: hubble-ui-nginx-conf
                  subPath: nginx.conf
                - mountPath: /tmp
                  name: tmp-dir
              - env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: hubble-relay:80
                image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
                imagePullPolicy: IfNotPresent
                name: backend
                ports:
                - containerPort: 8090
                  name: grpc
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts: null
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              serviceAccountName: hubble-ui
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: cilium
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                command:
                - cilium-agent
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.memory
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - bash
                      - -c
                      - |
                        set -o errexit
                        set -o pipefail
                        set -o nounset

                        # When running in AWS ENI mode, it's likely that 'aws-node' has
                        # had a chance to install SNAT iptables rules. These can result
                        # in dropped traffic, so we should attempt to remove them.
                        # We do it using a 'postStart' hook since this may need to run
                        # for nodes which might have already been init'ed but may still
                        # have dangling rules. This is safe because there are no
                        # dependencies on anything that is part of the startup script
                        # itself, and can be safely run multiple times per node (e.g. in
                        # case of a restart).
                        if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                        then
                            echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                            iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                        fi
                        echo 'Done!'
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-agent
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - CHOWN
                    - KILL
                    - NET_ADMIN
                    - NET_RAW
                    - IPC_LOCK
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - DAC_OVERRIDE
                    - FOWNER
                    - SETGID
                    - SETUID
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
                - mountPath: /host/etc/cni/net.d
                  name: etc-cni-netd
                - mountPath: /var/lib/cilium/clustermesh
                  name: clustermesh-secrets
                  readOnly: true
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
                - mountPath: /run/xtables.lock
                  name: xtables-lock
                - mountPath: /var/lib/cilium/tls/hubble
                  name: hubble-tls
                  readOnly: true
                - mountPath: /tmp
                  name: tmp
              hostNetwork: true
              initContainers:
              - command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: config
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp
                  name: tmp
              - command:
                - sh
                - -ec
                - |
                  cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
                  nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
                  rm /hostbin/cilium-sysctlfix
                env:
                - name: BIN_PATH
                  value: /opt/cni/bin
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: apply-sysctl-overwrites
                securityContext:
                  capabilities:
                    add:
                    - SYS_ADMIN
                    - SYS_CHROOT
                    - SYS_PTRACE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /hostproc
                  name: hostproc
                - mountPath: /hostbin
                  name: cni-path
              - args:
                - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
                command:
                - /bin/bash
                - -c
                - --
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: mount-bpf-fs
                securityContext:
                  privileged: true
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
                  name: bpf-maps
              - command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-state
                      name: cilium-config
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-bpf-state
                      name: cilium-config
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      key: write-cni-conf-when-ready
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: clean-cilium-state
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
              - command:
                - /install-plugin.sh
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: install-cni-binaries
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /host/opt/cni/bin
                  name: cni-path
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - emptyDir: {}
                name: tmp
              - hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                name: cilium-run
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
              - hostPath:
                  path: /proc
                  type: Directory
                name: hostproc
              - hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
                name: cilium-cgroup
              - hostPath:
                  path: /opt/cni/bin
                  type: DirectoryOrCreate
                name: cni-path
              - hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                name: etc-cni-netd
              - hostPath:
                  path: /lib/modules
                name: lib-modules
              - hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                name: xtables-lock
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - name: clustermesh-secrets
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: local-etcd-client.key
                      - key: tls.crt
                        path: local-etcd-client.crt
                      - key: ca.crt
                        path: local-etcd-client-ca.crt
                      name: clustermesh-apiserver-local-cert
                      optional: true
              - hostPath:
                  path: /proc/sys/net
                  type: Directory
                name: host-proc-sys-net
              - hostPath:
                  path: /proc/sys/kernel
                  type: Directory
                name: host-proc-sys-kernel
              - name: hubble-tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
                      name: hubble-server-certs
                      optional: true
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium-envoy
            name: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium-envoy
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-envoy
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium-envoy
                name: cilium-envoy
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: cilium.io/no-schedule
                        operator: NotIn
                        values:
                        - "true"
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium-envoy
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --keep-cap-net-bind-service
                - --
                - -c /var/run/cilium/envoy/bootstrap-config.json
                - --base-id 0
                - --log-level info
                - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
                command:
                - /usr/bin/cilium-envoy-starter
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium-envoy:v1.29.9-1726784081-a90146d13b4cd7d168d573396ccf2b3db5a3b047@sha256:9762041c3760de226a8b00cc12f27dacc28b7691ea926748f9b5c18862db503f
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-envoy
                ports:
                - containerPort: 9964
                  hostPort: 9964
                  name: envoy-metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /var/run/cilium/envoy/artifacts
                  name: envoy-artifacts
                  readOnly: true
                - mountPath: /var/run/cilium/envoy/
                  name: envoy-config
                  readOnly: true
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium-envoy
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - hostPath:
                  path: /var/run/cilium/envoy/artifacts
                  type: DirectoryOrCreate
                name: envoy-artifacts
              - configMap:
                  defaultMode: 256
                  items:
                  - key: bootstrap-config.json
                    path: bootstrap-config.json
                  name: cilium-envoy-config
                name: envoy-config
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPAdvertisement
        metadata:
          labels:
            advertise: bgp
          name: cilium-advert
          namespace: kube-system
        spec:
          advertisements:
          - advertisementType: PodCIDR
          - advertisementType: Service
            selector:
              matchExpressions:
              - key: somekey
                operator: NotIn
                values:
                - never-used-value
            service:
              addresses:
              - LoadBalancerIP
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPClusterConfig
        metadata:
          name: cilium-bgp
          namespace: kube-system
        spec:
          bgpInstances:
          - localASN: 65015
            name: instance-65015
            peers:
            - name: peer-65014
              peerASN: 65014
              peerAddress: 192.168.100.1
              peerConfigRef:
                name: cilium-peer
          nodeSelector:
            matchExpressions:
            - key: somekey
              operator: NotIn
              values:
              - never-used-value
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPPeerConfig
        metadata:
          name: cilium-peer
          namespace: kube-system
        spec:
          families:
          - advertisements:
              matchLabels:
                advertise: bgp
            afi: ipv4
            safi: unicast
          gracefulRestart:
            enabled: true
            restartTimeSeconds: 30
          timers:
            connectRetryTimeSeconds: 12
            holdTimeSeconds: 9
            keepAliveTimeSeconds: 3
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumLoadBalancerIPPool
        metadata:
          name: cilium-lb-pool-01
          namespace: kube-system
        spec:
          blocks:
          - cidr: 192.168.100.128/25
        ---
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: hubble-system-http
          namespace: kube-system
        spec:
          hostnames:
          - hubble.apps.timgiertz.com
          parentRefs:
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: shared-default-gateway
            namespace: default
            sectionName: shared-https
          rules:
          - backendRefs:
            - group: ""
              kind: Service
              name: hubble-ui
              port: 80
              weight: 1
            matches:
            - path:
                type: PathPrefix
                value: /
