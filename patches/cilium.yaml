cluster:
  inlineManifests:
    - name: kube-system
      contents: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-envoy
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-relay
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          - create
          - update
          - deletecollection
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgppeeringpolicies
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumpodippools
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-bgp-control-plane-secrets
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          agent-not-ready-taint-key: node.cilium.io/agent-not-ready
          arping-refresh-period: 30s
          auto-direct-node-routes: "false"
          bgp-secrets-namespace: kube-system
          bpf-events-drop-enabled: "true"
          bpf-events-policy-verdict-enabled: "true"
          bpf-events-trace-enabled: "true"
          bpf-lb-acceleration: disabled
          bpf-lb-external-clusterip: "false"
          bpf-lb-map-max: "65536"
          bpf-lb-sock: "false"
          bpf-lb-sock-terminate-pod-connections: "false"
          bpf-map-dynamic-size-ratio: "0.0025"
          bpf-policy-map-max: "16384"
          bpf-root: /sys/fs/bpf
          cgroup-root: /sys/fs/cgroup
          cilium-endpoint-gc-interval: 5m0s
          cluster-id: "0"
          cluster-name: default
          clustermesh-enable-endpoint-sync: "false"
          clustermesh-enable-mcs-api: "false"
          cni-exclusive: "true"
          cni-log-file: /var/run/cilium/cilium-cni.log
          custom-cni-conf: "false"
          datapath-mode: veth
          debug: "false"
          debug-verbose: ""
          direct-routing-skip-unreachable: "false"
          dnsproxy-enable-transparent-mode: "true"
          dnsproxy-socket-linger-timeout: "10"
          egress-gateway-reconciliation-trigger-interval: 1s
          enable-auto-protect-node-port-range: "true"
          enable-bgp-control-plane: "true"
          enable-bpf-clock-probe: "false"
          enable-endpoint-health-checking: "true"
          enable-health-check-loadbalancer-ip: "false"
          enable-health-check-nodeport: "true"
          enable-health-checking: "true"
          enable-hubble: "true"
          enable-ipv4: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv4-masquerade: "true"
          enable-ipv6: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-k8s-networkpolicy: "true"
          enable-k8s-terminating-endpoint: "true"
          enable-l2-neigh-discovery: "true"
          enable-l7-proxy: "true"
          enable-local-redirect-policy: "false"
          enable-masquerade-to-route-source: "false"
          enable-metrics: "true"
          enable-node-ipam: "true"
          enable-node-selector-labels: "false"
          enable-policy: default
          enable-runtime-device-detection: "true"
          enable-sctp: "false"
          enable-svc-source-range-check: "true"
          enable-tcx: "true"
          enable-vtep: "false"
          enable-well-known-identities: "false"
          enable-xt-socket-fallback: "true"
          envoy-base-id: "0"
          envoy-keep-cap-netbindservice: "true"
          external-envoy-proxy: "true"
          hubble-disable-tls: "false"
          hubble-export-file-max-backups: "5"
          hubble-export-file-max-size-mb: "10"
          hubble-listen-address: :4244
          hubble-socket-path: /var/run/cilium/hubble.sock
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          identity-allocation-mode: crd
          identity-gc-interval: 15m0s
          identity-heartbeat-timeout: 30m0s
          install-no-conntrack-iptables-rules: "false"
          ipam: kubernetes
          ipam-cilium-node-update-rate: 15s
          k8s-client-burst: "20"
          k8s-client-qps: "10"
          k8s-require-ipv4-pod-cidr: "false"
          k8s-require-ipv6-pod-cidr: "false"
          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          max-connected-clusters: "255"
          mesh-auth-enabled: "true"
          mesh-auth-gc-interval: 5m0s
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          monitor-aggregation: medium
          monitor-aggregation-flags: all
          monitor-aggregation-interval: 5s
          nat-map-stats-entries: "32"
          nat-map-stats-interval: 30s
          node-port-bind-protection: "true"
          nodeport-addresses: ""
          nodes-gc-interval: 5m0s
          operator-api-serve-addr: 127.0.0.1:9234
          operator-prometheus-serve-addr: :9963
          policy-cidr-match-mode: ""
          preallocate-bpf-maps: "false"
          procfs: /host/proc
          proxy-connect-timeout: "2"
          proxy-idle-timeout-seconds: "60"
          proxy-max-connection-duration-seconds: "0"
          proxy-max-requests-per-connection: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-xff-num-trusted-hops-ingress: "0"
          remove-cilium-node-taints: "true"
          routing-mode: tunnel
          service-no-backend-response: reject
          set-cilium-is-up-condition: "true"
          set-cilium-node-taints: "true"
          synchronize-k8s-nodes: "true"
          tofqdns-dns-reject-response-code: refused
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: 0s
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: 100ms
          tunnel-protocol: vxlan
          unmanaged-pod-watcher-interval: "15"
          vtep-cidr: ""
          vtep-endpoint: ""
          vtep-mac: ""
          vtep-mask: ""
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          bootstrap-config.json: |
            {
              "node": {
                "id": "host~127.0.0.1~no-id~localdomain",
                "cluster": "ingress-cluster"
              },
              "staticResources": {
                "listeners": [
                  {
                    "name": "envoy-prometheus-metrics-listener",
                    "address": {
                      "socket_address": {
                        "address": "0.0.0.0",
                        "port_value": 9964
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-prometheus-metrics-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "prometheus_metrics_route",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "prometheus_metrics_route",
                                        "match": {
                                          "prefix": "/metrics"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/stats/prometheus"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "envoy-health-listener",
                    "address": {
                      "socket_address": {
                        "address": "127.0.0.1",
                        "port_value": 9878
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-health-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "health",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "health",
                                        "match": {
                                          "prefix": "/healthz"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/ready"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "clusters": [
                  {
                    "name": "ingress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "egress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "egress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "ingress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "xds-grpc-cilium",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "xds-grpc-cilium",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/xds.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "explicitHttpConfig": {
                          "http2ProtocolOptions": {}
                        }
                      }
                    }
                  },
                  {
                    "name": "/envoy-admin",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "/envoy-admin",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "dynamicResources": {
                "ldsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                },
                "cdsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                }
              },
              "bootstrapExtensions": [
                {
                  "name": "envoy.bootstrap.internal_listener",
                  "typed_config": {
                    "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
                  }
                }
              ],
              "layeredRuntime": {
                "layers": [
                  {
                    "name": "static_layer_0",
                    "staticLayer": {
                      "overload": {
                        "global_downstream_max_connections": 50000
                      }
                    }
                  }
                ]
              },
              "admin": {
                "address": {
                  "pipe": {
                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                  }
                }
              }
            }
        kind: ConfigMap
        metadata:
          name: cilium-envoy-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
            :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
            \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
            /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
            true\n"
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
            \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
            1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
            X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
            \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
            *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
            content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
            range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
            \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
            \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
            \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
            \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
            \           # double `/index.html` is required here \n            try_files $uri
            $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
            /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
            \           return 200 'ok';\n        }\n    }\n}"
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVDJQY2ZzZ0tlbXh5U2NBZXdRYzRJREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFM01UY3lNakUwV2hjTk1qY3hNVEUzTVRjeQpNakUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENyMmVORS8wbnBjL2RwSXJPTDZNSmV3TERxUnF0TG40czYrMmk1TmRzckZ0aGxRamUKOXlPR1R0TWFoZjNyMkNPT0RTNTBqb215MDBnMHAxSUExSXNXS2lRMUY0bm1IWE9UWVIwcnJZZHlyNmxONzA0WgpCS2FRR3FIVUg0YjRYVmxQbWcyRmpMSHByWVRoSHk0RG9yQk5yUGVzdnNYclFMZksvdWN6aHRPYmVDRFQ2L2E4CjFJTHc3cFRPajh2K2JJZW4rb0pnN0V5Q3FJVVVEQ2JwT0V5ZVBIZmo4ZTNibHR6N1pjRkxBa24vcDl3YWJLVFgKa2JNMHpsbjdIQVM0L1A0Mm5Rd3c0WVJDdFZrcEZxVW5Db3BRM1ZqS0JydnUwVDBTQUZGU3dVbTZtQ3JTbGM5cgo1RkdkdGVuajZGWm9wdmJQaTJ4ODdGSUZSS29FOW9XOUx6SDlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFUHc4L2dqQURSQW1nM1duVEhWUlJsZnZSM0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVW44Ky9IUHRxczNVZy9QSUxvNkZqdVArN3J3NGhiSFRacTJIWS8yOGlQWTBncTFQYklpNjROClRwaXZzQlMybTlOOTRraHgzTHlnTU53WXJRYk1OblJTd2hHZUd0dEVseVI4ZkJYaFZZazdOOUFpK1hXQy9JcG8KVGRkZkczS2lQLzJESmRwZjNMZ2tJV2lxMHZVeTdMRktzL0xSTllEWmQrTWRyaVZ3Kyt3UGFUSmxCdlFqaWFFZApuRWpHV1ZWWUtDQTJJNDBYVWtmWVZEbjIxam5UZlhCVFlETktodzNSVW5WMVNKWTJzR0trajBIalRycmxUZWh5ClhCQjBjUmFLVVo0QVNjQUNvNFc1aHp5ditVVG5qNlhGTnl0dzJhSFRoWEFydTVCLzNMZm1BRGc3UEZ4S002ZjkKY0c1V2h0REhkd09TODdCUGVsdG03TmxIQ0RNY0oxRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd3E5bmpSUDlKNlhQM2FTS3ppK2pDWHNDdzZrYXJTNStMT3Z0b3VUWGJLeGJZWlVJCjN2Y2poazdUR29YOTY5Z2pqZzB1ZEk2SnN0TklOS2RTQU5TTEZpb2tOUmVKNWgxemsyRWRLNjJIY3ErcFRlOU8KR1FTbWtCcWgxQitHK0YxWlQ1b05oWXl4NmEyRTRSOHVBNkt3VGF6M3JMN0Y2MEMzeXY3bk00YlRtM2dnMCt2Mgp2TlNDOE82VXpvL0wvbXlIcC9xQ1lPeE1ncWlGRkF3bTZUaE1uangzNC9IdDI1YmMrMlhCU3dKSi82ZmNHbXlrCjE1R3pOTTVaK3h3RXVQeitOcDBNTU9HRVFyVlpLUmFsSndxS1VOMVl5Z2E3N3RFOUVnQlJVc0ZKdXBncTBwWFAKYStSUm5iWHA0K2hXYUtiMno0dHNmT3hTQlVTcUJQYUZ2Uzh4L1FJREFRQUJBb0lCQUJ4VzlEZnhKUFRVaWtHMQpaZzlGbC9JVldmMnBiQnl4bStSbUk1Mkd1bVV6WWNuK3E5L3BFZDdITXF1MXZaVExUY0dyNFl0T0JIVm5sQ2MyCkJCWGkycXhMVGlIOFh6S0VMd0xSTERIamZNZ1JFaEFxT2JBaW9TeHc5QVd3NFREZVJkWDBrdXRSNDhRa1lpZHoKSm51WS94a1BpSzQ0eHc3THlQVmZ6Y0FPYkZkQkQ5QWw4S0QvT2h3UmpydDU4aTk5c1F6ZGRUcXZlY2l4d2UzeAplR3B2QzVXU3lwU0RwSnVXV0JwaWF2ZzNjcUFyYmc3NHdxODV6Z24yS004SnJFcUtwV0hVZ1JHTFpDRnQ2LzdLCkxyalgwMzliOWlndUZtVGdCclhHN1lEMEJGMUord2dDbEw1MzB0K2o0RUgrTDI5dDJJVlJCVHlJRkVrNnBnM0kKbyt6b2YvRUNnWUVBLzNHL0xTWHFVWDJ4R29MVFh3SUpVcmJWWEZIY3IvcDIzaGtxaGNsd282LzByVXoxeE42MQpwVjcxYmFPaVVQUFpXdElTejZ4YmlyVjdheXdUSVdId1kwemNiekhLU0Y4WnlXdm83d1ZFUzY4Uzl2Si9weXlkCmFKMnk1NmhIZHIzd2NwZGZaSGUxKzlTZWp3a2ZjUWV6ZTZzZE9PdEhOZ3FyM2pSZnNnelJqTk1DZ1lFQXd4dlMKWTI3R1FsSXdhaXJmWDRlM0Jkd0tKcGQzMHRjWmJsQldrR0hPbFNvQThjbGZ2VDNZMm13dE5Ga1BtNnc0bWg3WAp6WERjU0dJRDl5WWdUajRSYi9jZWRMQ2RYR1B0b3U3c3UwOXVpbThrU2xUSXM5eFQ3MWorcFhURUxIaXNwZ212Cnk5bjV0Q1pMTTZCVDNCcTN6WDRmajlacHVzMm1xWFNIVXc2WXcrOENnWUVBMURML3AxZTU0VnhTeFQwc3JkNFoKTkpjaGd3R1dITElxRUxKRE9zUnVSK3doaTkxRXhQaGxXUzBiSUtzd2FhTklTa1A4MEh2VHg5U2U1QmJIQlpKQQppWjBOK1drWkt5bWxXRWZHUnRqUE5UZ0l2eEFQcnlaRzFPTTcvV2t6aEphZ3FmREprOEpHY1I3ZFlPRXBOMUk0CmJXRm1jeVF3RWRxbmozMWVpYUJRYTNVQ2dZRUFxZmJib1RrSHh4Q1lFblNFb0ZDMnRJa0o0cktDZEk1akhnRW8KVjZDTWVNN2RnY085L2pvWlpiVms3N3hCNTRmd3l2bmhYcHRabWtpZ1ViWEo0TDhiSzZGbnk1bHJpK2VWUlNIRAo0aXlCREdGamlNa3hDZFgrM0h0M1lhVkZtOFFJQ3FCWG4wcWt4eld3dnltRXhESVdPaElMNXA2Ty9tZFdMenBQCkJLQ3JuY3NDZ1lFQXFnS3JaRFVsR3BVZEZJbitxYkVMdUdFSm5CRkR6aW1NZ1dYNFZPMEdPMERJNVoxb1o0NVIKMDV0V3dKcFJ4cU1DZTBBY0k2L3kyd3I4VTV1MWwzNHdYaWI5dW51ZkZpUkdSNWY0ZzM0eUNRWGZEVHMyT3Y3Lwp3QnpTTXFwL25EZ2tVWTdDUnd0c1VQMExLMjBDRHJyNElmQ2VwRjBEU1IzVEhIZEIycUZWeS80PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVDJQY2ZzZ0tlbXh5U2NBZXdRYzRJREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFM01UY3lNakUwV2hjTk1qY3hNVEUzTVRjeQpNakUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENyMmVORS8wbnBjL2RwSXJPTDZNSmV3TERxUnF0TG40czYrMmk1TmRzckZ0aGxRamUKOXlPR1R0TWFoZjNyMkNPT0RTNTBqb215MDBnMHAxSUExSXNXS2lRMUY0bm1IWE9UWVIwcnJZZHlyNmxONzA0WgpCS2FRR3FIVUg0YjRYVmxQbWcyRmpMSHByWVRoSHk0RG9yQk5yUGVzdnNYclFMZksvdWN6aHRPYmVDRFQ2L2E4CjFJTHc3cFRPajh2K2JJZW4rb0pnN0V5Q3FJVVVEQ2JwT0V5ZVBIZmo4ZTNibHR6N1pjRkxBa24vcDl3YWJLVFgKa2JNMHpsbjdIQVM0L1A0Mm5Rd3c0WVJDdFZrcEZxVW5Db3BRM1ZqS0JydnUwVDBTQUZGU3dVbTZtQ3JTbGM5cgo1RkdkdGVuajZGWm9wdmJQaTJ4ODdGSUZSS29FOW9XOUx6SDlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFUHc4L2dqQURSQW1nM1duVEhWUlJsZnZSM0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVW44Ky9IUHRxczNVZy9QSUxvNkZqdVArN3J3NGhiSFRacTJIWS8yOGlQWTBncTFQYklpNjROClRwaXZzQlMybTlOOTRraHgzTHlnTU53WXJRYk1OblJTd2hHZUd0dEVseVI4ZkJYaFZZazdOOUFpK1hXQy9JcG8KVGRkZkczS2lQLzJESmRwZjNMZ2tJV2lxMHZVeTdMRktzL0xSTllEWmQrTWRyaVZ3Kyt3UGFUSmxCdlFqaWFFZApuRWpHV1ZWWUtDQTJJNDBYVWtmWVZEbjIxam5UZlhCVFlETktodzNSVW5WMVNKWTJzR0trajBIalRycmxUZWh5ClhCQjBjUmFLVVo0QVNjQUNvNFc1aHp5ditVVG5qNlhGTnl0dzJhSFRoWEFydTVCLzNMZm1BRGc3UEZ4S002ZjkKY0c1V2h0REhkd09TODdCUGVsdG03TmxIQ0RNY0oxRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBQcUplWXhwZUZnMUZ4Wk84anh1QnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE56RTNNakl4TkZvWERUSTNNVEV4TnpFMwpNakl4TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTQyd3R5aGdHMlc0aklubkpYbWExRGNIVWhZc0kKNmJMN3p3NjREWTNkZW5GQnlNK25ja1FBNTF2cm85YXpoeXQxaDAvSS9uaThHNXMvUXpidVY5Uk1uWGhYc0pObQpwV1ZveUtKQTFzeFBRdjBwREx6eDN1N0xSLzFZa2lPTWp5cWd3cnlxWmZXemNtMWxoOU1VRndhU25wOWhRQXNkCkh2U0luYkdDZERkTjBCM2NLT0hSR2lIK0s5SEQ1T3dRUEFpRis1dGNCR0JFN2l4V29ZVGViNGJUV3BaV2o0MGgKSk0zWnpFSWd4WElFS2xzYUNXOVN5QjNmUUc1VllNdk1JbWhhRDlDY2p0bzZlQUh3ekgzaUEyOVlYeWQ3dnY3WQpFTVhlYkdjK01YcFpXbmlYUTgvRDN4YWxsa1RGK0dWNmxKSXdnZU14dStEblNIbi9UUHZHTlM5SVZ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVEvRHorQ01BTkVDYURkYWRNZFZGRwpWKzlIY0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRVF0aHhPbExsRmJoS2ZhMks2QmErSVd1U2xYbFhkOVVFRUpFa05JQWM0bUtodUMKc1VmR1pCb2FSM2NCQWpiY25CNVFleHNDUURnOHpoWU5ZaDBrYm1LR1VWd0FTN1ZFRytNVVZRNGNxR0hDL2hEVQpMcXl5TkZzNlhOeWJmMXI5Rm8wOFJWVDdOVVY5S2FDVldKQXBIWHpoTkFQTG91ZXh4czZxK3BjUlRPaHhZS0lJCnhCaWZ2MzcvV1dLWTV3YVVHT2pjRzdjcEc0eFFBRUdESXh4bTJ1eWZsdElubFBleDQ0TEkzZC9hSFdZNlJWU28KK1NCcGFjS1pkbHRSYVBhN0VKcmtyTkxRNldyMlFhOW0zUnkwWXZjSjl6M3BMcVpYdjRWZHZQT2dSUUlKdXZLcApaUEo3dUZPeVJ2STFnZlVaN25YM1ZiUkRRbmVnWHdkT3prYjRxc0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNDJ3dHloZ0cyVzRqSW5uSlhtYTFEY0hVaFlzSTZiTDd6dzY0RFkzZGVuRkJ5TStuCmNrUUE1MXZybzlhemh5dDFoMC9JL25pOEc1cy9RemJ1VjlSTW5YaFhzSk5tcFdWb3lLSkExc3hQUXYwcERMengKM3U3TFIvMVlraU9NanlxZ3dyeXFaZld6Y20xbGg5TVVGd2FTbnA5aFFBc2RIdlNJbmJHQ2REZE4wQjNjS09IUgpHaUgrSzlIRDVPd1FQQWlGKzV0Y0JHQkU3aXhXb1lUZWI0YlRXcFpXajQwaEpNM1p6RUlneFhJRUtsc2FDVzlTCnlCM2ZRRzVWWU12TUltaGFEOUNjanRvNmVBSHd6SDNpQTI5WVh5ZDd2djdZRU1YZWJHYytNWHBaV25pWFE4L0QKM3hhbGxrVEYrR1Y2bEpJd2dlTXh1K0RuU0huL1RQdkdOUzlJVndJREFRQUJBb0lCQUJRYVB0M3JTOGV5YlphaApqMFF4N2ZVZVdndkg0MnpNN21jNkZOalYzbXJ4VWZCUE1xenVCK3ByZktQSjJhcXNFOEozTWZ3VWJnUStyOVBnCktpZEhVOUpqamRURTRzRGgrdVlwT1hRRE1VcHBtRlJRNjB4YWJVdWF3RmFDbiswVHhvd1FJenZLQVNldk5kZFEKdUNqazR0YjBuYU1NbUhGaENpWnVSMnJBYkxkbGtaL1U5MGpTOFJ6OHhEdlFwU3RWTnlBVjgvaENJSXJSdEZibApycTNXYmZPL0Z5ZmJsSDBPVERBQk5jSUdhcTRXTUJRbXMvM2txeTFNVnArdDB2YlJhRC94MHIrbTdzVlM5Vmx2ClNIc29ucmtEZDQvNGprWkhIbVp3WHA5ZUg1NFp4VGU0Ry9sWGF5QWFKUlNJdXp0OU5oM0lPSGhmbnlaL2JTak4KUnZlYys5RUNnWUVBNmRWSGp3aHdUanpoTER3VDBQcjBBNEtSL2hiYWQ4bWdLZkk1eHZRdXQyZHY5d0Q2V0xMbgpHR2toc1lzdDU0RXJXZlM1WUZNTmp2R3RMOUVoQy9ETFdxMU5NSzFiRGhoRWNJSlZlaTVkdU9ST3JnNjJXekZWClNFTmhGWlM3ZXdxdSsyTWhtMlFoTzdiNXpRSDJ2aWJmRW5BRWg5SThhcDFzV3JpclFnOEtaeThDZ1lFQStQdFQKbDFMSEgyNVpPa0g1Q2FheitjYWlDNWNVakVXNWExMlZMTTJmbnJRNE94bjIzR1FxMStsUmFLMUp5QTU2anc3TQplbk9lMDlLQ2swbVBVdUZqeEZScHdvVFhmalJ4M0RDcys2MC9mNjJva0xyQVV0cXhwbnlDODdvWmpLNDFCaGVCCjJReDJrR0pPMm5ET2R2TTUzOEtxQlZGeG1ZVVJTQjhDK0lKcTUxa0NnWUFKTEZmSlViQnVNVTg0R0FkQy9JVlUKR2V3MlJwazlkOGh6dk0vdGNTamdBd3ZPYWRob1lHUldmZEZYa0xrMVNzanpsM2txUVRmWDhyMHprZ1cwM1RadApFVDFrK25nRy9vYTR6elFoUGU1cFVYT1F1bjBHNk5HS3F6SUUwYmZsSk04bWg0WUsvWXVjTnhwbm8zc1ZqSnJWCnMxVktLc0k2QUlEK3NoM3Qwbjg2K3dLQmdBS2JMdDdRb1FEMU9MM2hYdWY0OUwxU2xQT21HekwwcitJdDBwZnIKZHhaRU1LcDl0UlhOZnAxUDllZ3dtQ3NkNjY1L3F5aEUrWTZpRDNmWE4wYlkwU0NHK2F4dGs0dmdwS2gzWWZnbwpjaGUyQzZPb01NY3RQdHJOUnRtaVF3NHo3SjRwdE5RK3l5YnJ3SU9NMXJ4c0Exa1NRcEZYcnVhNmU5blRhVWFNCnB1M1JBb0dBZWYrUzY4TElUZ3ZYRHdmRyswdjZZL1JoQnBrZHNDM21QR0JOeDh6dFF1aWRnQ1psT0V5NEdiVmMKU1lxQjVSdEJuOXY0QkpmVmpsTUp1RlU3R2hWT2JsK1pzZE13RUFORnNzclcrdG1INUVvREtvY3UrUEt4MHlTUwpUQjBlY2JqaFpaMGhiVVJ1TWVpSGhvbXJiU0xBUi81WE83UURvZVZvRFJxRUdvV0xuRnc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVDJQY2ZzZ0tlbXh5U2NBZXdRYzRJREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFM01UY3lNakUwV2hjTk1qY3hNVEUzTVRjeQpNakUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENyMmVORS8wbnBjL2RwSXJPTDZNSmV3TERxUnF0TG40czYrMmk1TmRzckZ0aGxRamUKOXlPR1R0TWFoZjNyMkNPT0RTNTBqb215MDBnMHAxSUExSXNXS2lRMUY0bm1IWE9UWVIwcnJZZHlyNmxONzA0WgpCS2FRR3FIVUg0YjRYVmxQbWcyRmpMSHByWVRoSHk0RG9yQk5yUGVzdnNYclFMZksvdWN6aHRPYmVDRFQ2L2E4CjFJTHc3cFRPajh2K2JJZW4rb0pnN0V5Q3FJVVVEQ2JwT0V5ZVBIZmo4ZTNibHR6N1pjRkxBa24vcDl3YWJLVFgKa2JNMHpsbjdIQVM0L1A0Mm5Rd3c0WVJDdFZrcEZxVW5Db3BRM1ZqS0JydnUwVDBTQUZGU3dVbTZtQ3JTbGM5cgo1RkdkdGVuajZGWm9wdmJQaTJ4ODdGSUZSS29FOW9XOUx6SDlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFUHc4L2dqQURSQW1nM1duVEhWUlJsZnZSM0F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVW44Ky9IUHRxczNVZy9QSUxvNkZqdVArN3J3NGhiSFRacTJIWS8yOGlQWTBncTFQYklpNjROClRwaXZzQlMybTlOOTRraHgzTHlnTU53WXJRYk1OblJTd2hHZUd0dEVseVI4ZkJYaFZZazdOOUFpK1hXQy9JcG8KVGRkZkczS2lQLzJESmRwZjNMZ2tJV2lxMHZVeTdMRktzL0xSTllEWmQrTWRyaVZ3Kyt3UGFUSmxCdlFqaWFFZApuRWpHV1ZWWUtDQTJJNDBYVWtmWVZEbjIxam5UZlhCVFlETktodzNSVW5WMVNKWTJzR0trajBIalRycmxUZWh5ClhCQjBjUmFLVVo0QVNjQUNvNFc1aHp5ditVVG5qNlhGTnl0dzJhSFRoWEFydTVCLzNMZm1BRGc3UEZ4S002ZjkKY0c1V2h0REhkd09TODdCUGVsdG03TmxIQ0RNY0oxRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYWtjTnNORVphNStKbGhHNU5vYnJQekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TVRFM01UY3lNakUwV2hjTk1qY3hNVEUzTVRjeQpNakUwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdk10Z1AxRCtlWmJXOHpjdmJMUDEKZUxXdm81RG1HYnYrRG41aTdEVzZPQWY5Ym15bnNVRGVaR1hwL2lkaFZIeXBkUnl0NThXWHJCN2poaEo1OWhFTAowZlIvdXpLWmtnbE55US9ScUgvdHJqRTlRWlZMYkpzdkdTN1BWM0ViZGtRUGo3Z2ZzMENnUUFNcFJOUGxYOVNBCkhPaHZuTjBpR2wxRVdsZDhrTGQzVHVienJETndmeUdRa1o4Y0JOYlExb3liWUpQK1p2T05UK3NZdStUZmJ3VC8KMDY0QkZqS2hJMm4xVkE0d1l0UE5mNkk0VE5ac0hxNm5yNGwxcllEdFcvL3IwYzdpS0dKYzVhZG5YSHhLb3V2VgplOUh2eGRESFlaSmVtMGpiU0ZqQkxsVHBUdTVBSXJobDlQa3hZdWo4MEk5amF2RWU0dHJYcUV4RXYvcW5FOXptCjZRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRUS9EeitDTUFORUNhRApkYWRNZFZGR1YrOUhjREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBeUJmRHI4YUVrbWwxb2Q1Tms3NHZqMkZWZDgwWm4KeHBHOE5FcytQWGxCbFRhcmNHSzBJN0k2NmNDOVE3cHBuaTlBblBicVIvZmt4VjNBOEdrMmN2cUJQRUM2Qk1MTwowamZpTFd5WkhZM0U0RDRWaDM1REJxSUsyTmp0UEVkSWdCMWNTczlJSXE5MzlIdURNaG5mTDNReWNKa1pUZUlSCkpmNHZNcXhCRWNkb08vQmhTTDB4NGx2UUdkQ2M1L2J4R2tLZG5WL2FZcE82U1J3YVFTR3lJbk52cjhuR095TUgKbVhuMU1qOEczWDV2RTNoSnkyZUtvYnJQcjVodnY2UEdjcERTcGgwTFVEWWVqZUlPYitYS0NwNUVPUHRWSUxxUApZT252U3ZPYm5KL09rV0xQSmJPQzRGTDVqWW1hcjl6RCtVUjlBS1FUSkxHd2FkQjJlTVBXK0xXagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdk10Z1AxRCtlWmJXOHpjdmJMUDFlTFd2bzVEbUdiditEbjVpN0RXNk9BZjlibXluCnNVRGVaR1hwL2lkaFZIeXBkUnl0NThXWHJCN2poaEo1OWhFTDBmUi91ektaa2dsTnlRL1JxSC90cmpFOVFaVkwKYkpzdkdTN1BWM0ViZGtRUGo3Z2ZzMENnUUFNcFJOUGxYOVNBSE9odm5OMGlHbDFFV2xkOGtMZDNUdWJ6ckROdwpmeUdRa1o4Y0JOYlExb3liWUpQK1p2T05UK3NZdStUZmJ3VC8wNjRCRmpLaEkybjFWQTR3WXRQTmY2STRUTlpzCkhxNm5yNGwxcllEdFcvL3IwYzdpS0dKYzVhZG5YSHhLb3V2VmU5SHZ4ZERIWVpKZW0wamJTRmpCTGxUcFR1NUEKSXJobDlQa3hZdWo4MEk5amF2RWU0dHJYcUV4RXYvcW5FOXptNlFJREFRQUJBb0lCQUhEZE9HWEJ1cy9ma0JNSQpXNjZsaXNzbCtxRlMvMnhGQ2FXS2d3THBQN0U5ZlpGbEhYOEc0Nnlyakk1bTVuWEdyTnVaVUpHdGUzWG5aV2VDClppem5sZVJuUVhFYzE5Z0kvZHFFUFhkNU94TVcxcUw5YUlDOTZSTXArOFF2bHhaRnEvUGtRL2M2WEZMSVVRU1gKbEptTWhTWkRBbTZKZUZqQWh4dG5EODNJRUdnMi9CMGcrdFpRckpOaUlRaVlaazdmRmFscHFTbm1PMjVtK2NJRgp6Si9ycjVmR09tcnplM09YVzV2U291SXZ1b0xQTklsbStIMlZ5WGJwV21uV2pseWllMTNKL1p5bUxtbmgvUW9PCkdiK0ZodStrdHBpNFBXOTc5aGVRYVFvL3o5TGUvbmE3SGR5T1JwQy9VbDU3clhtMlZEOVJ2Y3ZJUmtwQ3J3NTAKb3l4eXh4MENnWUVBNTlrcGV1Y2JRcktlamlUc1dqVmNGUVB0Mk90U3NyODVzd0FhY2VFT0FtWVQ4UVM4OVdBLwozaFRhazhncG5FQlJ1NE5UellSM1hUMVB6dG50UDkxMU9TZFB0WTFOMGxCQkM1MzJVZDVuS1BwYU4vTThiQjBECldmR0NYRnBEb0gyRGtBTnhHeEZwRkZIK2tUNXMrTzFwbWFpWlJqUXJsSkRPNG1xUnJibDFIZmNDZ1lFQTBIWVMKS080eGN4dlBmL2pOTFpwR0hkb2d4TElzS2xsZlhFNEtSbXJEZFdYaE1SM1hxcnhzSmozU1FXQkQ5SUN3cDMxNQoyZmxvM3c5ZGdqMmdMc1U5N2JuZ01Ld2ZYOTZqV1NtNGw4SVY5UFJ4dGkzLzFjcHUra3BFL2diNmZOWTZESnNWClo4VWRXZ3UvYWFTTDAvaFlkZDYyM3dzTTVUdDEwbk9aZ3docWFoOENnWUFsbk0xbDZ1ZzVRZEVITG1aSm5DNTgKR2s4VHlkbDR0aDBlTlA0VlMzV0NYaDBPRkw2eThCSnNiT1dvNCtnY09UTUpRSnp2MG5XcTRxOTMxMUx0OFhkNgo5aTJ3UG1SSm9rdHJIdzArNnQzQmdCdnl4N3NkcnZkRU9ESDEyWTd2RW0ydGgyRnFDc0VKVXVRQm5DY0JtMEp1CmN6T3FkL3c1OWVRYVJ6K3E5MU5Rc1FLQmdHQmJRemVpS2o5UHlwRVhteGVLS1FEaGM2WVh5V3hsMVR0Z1kwVjcKVWcrdzRPK0lJTWt0d1R2SDlhajhhMHpZTTArb0l5dkxLbHQ0eWJ0SzZ3RFRjVFd5Wmx0NUpDTjNVTUFGRmVzbgo3bWhFbVU4aFloRWJPa0w5RTNqc0Z0cWZWME8rWjUySXNuR04zcE5oV0xUSkpYS09XSzh1ZDI1NkZwTUpsaHJJClNBLzNBb0dBWkdwRS9MQWsrSGEvaTFPSDhJbStSY282OU12d0xyVkNoWXZEWEQ0a2p3RTJIWTFubXlyS0NTRWEKZVhuS1lkbW5BUGNvSCt4bjVJbnhjMmoyRnhnTHdJTldUUThGOUwyZEdlSHpzaVBqbFpkZjlLU2Fac25FVC9QMQpJWkpudXlUMXdtb082S0F0clNCNnoxdkZwdUZUSzArSnJmd0l5YzRWbEVqOGkrbEIzbzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/port: "9964"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            io.cilium/app: proxy
            k8s-app: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          clusterIP: None
          ports:
          - name: envoy-metrics
            port: 9964
            protocol: TCP
            targetPort: envoy-metrics
          selector:
            k8s-app: cilium-envoy
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-peer
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: hubble-peer
          namespace: kube-system
        spec:
          internalTrafficPolicy: Local
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          selector:
            k8s-app: cilium
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: grpc
          selector:
            k8s-app: hubble-relay
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          ports:
          - name: http
            port: 80
            targetPort: 8081
          selector:
            k8s-app: hubble-ui
          type: ClusterIP
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: cilium-operator
            app.kubernetes.io/part-of: cilium
            io.cilium/app: operator
            name: cilium-operator
          name: cilium-operator
          namespace: kube-system
        spec:
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                app.kubernetes.io/name: cilium-operator
                app.kubernetes.io/part-of: cilium
                io.cilium/app: operator
                name: cilium-operator
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                command:
                - cilium-operator-generic
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/operator-generic:v1.16.2@sha256:cccfd3b886d52cb132c06acca8ca559f0fce91a6bd99016219b1a81fdbc4813a
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                name: cilium-operator
                ports:
                - containerPort: 9963
                  hostPort: 9963
                  name: prometheus
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp/cilium/config-map
                  name: cilium-config-path
                  readOnly: true
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-cluster-critical
              restartPolicy: Always
              serviceAccountName: cilium-operator
              tolerations:
              - operator: Exists
              volumes:
              - configMap:
                  name: cilium-config
                name: cilium-config-path
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-relay
            spec:
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: false
              containers:
              - args:
                - serve
                command:
                - hubble-relay
                image: quay.io/cilium/hubble-relay:v1.16.2@sha256:4b559907b378ac18af82541dafab430a857d94f1057f2598645624e6e7ea286c
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 12
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                name: hubble-relay
                ports:
                - containerPort: 4245
                  name: grpc
                readinessProbe:
                  grpc:
                    port: 4222
                  timeoutSeconds: 3
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 65532
                  runAsNonRoot: true
                  runAsUser: 65532
                startupProbe:
                  failureThreshold: 20
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/hubble-relay
                  name: config
                  readOnly: true
                - mountPath: /var/lib/hubble-relay/tls
                  name: tls
                  readOnly: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              restartPolicy: Always
              securityContext:
                fsGroup: 65532
              serviceAccountName: hubble-relay
              terminationGracePeriodSeconds: 1
              volumes:
              - configMap:
                  items:
                  - key: config.yaml
                    path: config.yaml
                  name: hubble-relay-config
                name: config
              - name: tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: client.crt
                      - key: tls.key
                        path: client.key
                      - key: ca.crt
                        path: hubble-server-ca.crt
                      name: hubble-relay-client-certs
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-ui
            spec:
              automountServiceAccountToken: true
              containers:
              - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                name: frontend
                ports:
                - containerPort: 8081
                  name: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/nginx/conf.d/default.conf
                  name: hubble-ui-nginx-conf
                  subPath: nginx.conf
                - mountPath: /tmp
                  name: tmp-dir
              - env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: hubble-relay:80
                image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
                imagePullPolicy: IfNotPresent
                name: backend
                ports:
                - containerPort: 8090
                  name: grpc
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts: null
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              serviceAccountName: hubble-ui
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: cilium
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                command:
                - cilium-agent
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.memory
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - bash
                      - -c
                      - |
                        set -o errexit
                        set -o pipefail
                        set -o nounset

                        # When running in AWS ENI mode, it's likely that 'aws-node' has
                        # had a chance to install SNAT iptables rules. These can result
                        # in dropped traffic, so we should attempt to remove them.
                        # We do it using a 'postStart' hook since this may need to run
                        # for nodes which might have already been init'ed but may still
                        # have dangling rules. This is safe because there are no
                        # dependencies on anything that is part of the startup script
                        # itself, and can be safely run multiple times per node (e.g. in
                        # case of a restart).
                        if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                        then
                            echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                            iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                        fi
                        echo 'Done!'
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-agent
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - CHOWN
                    - KILL
                    - NET_ADMIN
                    - NET_RAW
                    - IPC_LOCK
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - DAC_OVERRIDE
                    - FOWNER
                    - SETGID
                    - SETUID
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
                - mountPath: /host/etc/cni/net.d
                  name: etc-cni-netd
                - mountPath: /var/lib/cilium/clustermesh
                  name: clustermesh-secrets
                  readOnly: true
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
                - mountPath: /run/xtables.lock
                  name: xtables-lock
                - mountPath: /var/lib/cilium/tls/hubble
                  name: hubble-tls
                  readOnly: true
                - mountPath: /tmp
                  name: tmp
              hostNetwork: true
              initContainers:
              - command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: config
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp
                  name: tmp
              - command:
                - sh
                - -ec
                - |
                  cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
                  nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
                  rm /hostbin/cilium-sysctlfix
                env:
                - name: BIN_PATH
                  value: /opt/cni/bin
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: apply-sysctl-overwrites
                securityContext:
                  capabilities:
                    add:
                    - SYS_ADMIN
                    - SYS_CHROOT
                    - SYS_PTRACE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /hostproc
                  name: hostproc
                - mountPath: /hostbin
                  name: cni-path
              - args:
                - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
                command:
                - /bin/bash
                - -c
                - --
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: mount-bpf-fs
                securityContext:
                  privileged: true
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
                  name: bpf-maps
              - command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-state
                      name: cilium-config
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-bpf-state
                      name: cilium-config
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      key: write-cni-conf-when-ready
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: clean-cilium-state
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
              - command:
                - /install-plugin.sh
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: install-cni-binaries
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /host/opt/cni/bin
                  name: cni-path
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - emptyDir: {}
                name: tmp
              - hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                name: cilium-run
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
              - hostPath:
                  path: /proc
                  type: Directory
                name: hostproc
              - hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
                name: cilium-cgroup
              - hostPath:
                  path: /opt/cni/bin
                  type: DirectoryOrCreate
                name: cni-path
              - hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                name: etc-cni-netd
              - hostPath:
                  path: /lib/modules
                name: lib-modules
              - hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                name: xtables-lock
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - name: clustermesh-secrets
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: local-etcd-client.key
                      - key: tls.crt
                        path: local-etcd-client.crt
                      - key: ca.crt
                        path: local-etcd-client-ca.crt
                      name: clustermesh-apiserver-local-cert
                      optional: true
              - hostPath:
                  path: /proc/sys/net
                  type: Directory
                name: host-proc-sys-net
              - hostPath:
                  path: /proc/sys/kernel
                  type: Directory
                name: host-proc-sys-kernel
              - name: hubble-tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
                      name: hubble-server-certs
                      optional: true
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium-envoy
            name: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium-envoy
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-envoy
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium-envoy
                name: cilium-envoy
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: cilium.io/no-schedule
                        operator: NotIn
                        values:
                        - "true"
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium-envoy
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --keep-cap-net-bind-service
                - --
                - -c /var/run/cilium/envoy/bootstrap-config.json
                - --base-id 0
                - --log-level info
                - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
                command:
                - /usr/bin/cilium-envoy-starter
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium-envoy:v1.29.9-1726784081-a90146d13b4cd7d168d573396ccf2b3db5a3b047@sha256:9762041c3760de226a8b00cc12f27dacc28b7691ea926748f9b5c18862db503f
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-envoy
                ports:
                - containerPort: 9964
                  hostPort: 9964
                  name: envoy-metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /var/run/cilium/envoy/artifacts
                  name: envoy-artifacts
                  readOnly: true
                - mountPath: /var/run/cilium/envoy/
                  name: envoy-config
                  readOnly: true
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium-envoy
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - hostPath:
                  path: /var/run/cilium/envoy/artifacts
                  type: DirectoryOrCreate
                name: envoy-artifacts
              - configMap:
                  defaultMode: 256
                  items:
                  - key: bootstrap-config.json
                    path: bootstrap-config.json
                  name: cilium-envoy-config
                name: envoy-config
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPAdvertisement
        metadata:
          labels:
            advertise: bgp
          name: cilium-advert
          namespace: kube-system
        spec:
          advertisements:
          - advertisementType: PodCIDR
          - advertisementType: Service
            selector:
              matchExpressions:
              - key: somekey
                operator: NotIn
                values:
                - never-used-value
            service:
              addresses:
              - LoadBalancerIP
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPClusterConfig
        metadata:
          name: cilium-bgp
          namespace: kube-system
        spec:
          bgpInstances:
          - localASN: 65015
            name: instance-65015
            peers:
            - name: peer-65014
              peerASN: 65014
              peerAddress: 192.168.100.1
              peerConfigRef:
                name: cilium-peer
          nodeSelector:
            matchExpressions:
            - key: somekey
              operator: NotIn
              values:
              - never-used-value
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPPeerConfig
        metadata:
          name: cilium-peer
          namespace: kube-system
        spec:
          families:
          - advertisements:
              matchLabels:
                advertise: bgp
            afi: ipv4
            safi: unicast
          gracefulRestart:
            enabled: true
            restartTimeSeconds: 30
          timers:
            connectRetryTimeSeconds: 12
            holdTimeSeconds: 9
            keepAliveTimeSeconds: 3
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumLoadBalancerIPPool
        metadata:
          name: cilium-lb-pool-01
          namespace: kube-system
        spec:
          blocks:
          - cidr: 192.168.100.128/25
        ---
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: hubble-system-http
          namespace: kube-system
        spec:
          hostnames:
          - hubble.apps.timgiertz.com
          parentRefs:
          - kind: Gateway
            name: shared-default-gateway
            namespace: default
            sectionName: shared-https
          rules:
          - backendRefs:
            - name: hubble-ui
              port: 80
            matches: null
