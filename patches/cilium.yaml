cluster:
  inlineManifests:
    - name: kube-system
      contents: |
        apiVersion: v1
        kind: Namespace
        metadata:
          name: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-envoy
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-relay
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-gateway-secrets
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator-gateway-secrets
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - update
          - patch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
          - patch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          - create
          - update
          - deletecollection
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgppeeringpolicies
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumpodippools
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - gateway.networking.k8s.io
          resources:
          - gatewayclasses
          - gateways
          - tlsroutes
          - httproutes
          - grpcroutes
          - referencegrants
          - referencepolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - gateway.networking.k8s.io
          resources:
          - gatewayclasses/status
          - gateways/status
          - httproutes/status
          - grpcroutes/status
          - tlsroutes/status
          verbs:
          - update
          - patch
        - apiGroups:
          - multicluster.x-k8s.io
          resources:
          - serviceimports
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-bgp-control-plane-secrets
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-bgp-control-plane-secrets
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-gateway-secrets
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-gateway-secrets
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator-gateway-secrets
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-operator-gateway-secrets
        subjects:
        - kind: ServiceAccount
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          agent-not-ready-taint-key: node.cilium.io/agent-not-ready
          arping-refresh-period: 30s
          auto-direct-node-routes: "false"
          bgp-secrets-namespace: kube-system
          bpf-events-drop-enabled: "true"
          bpf-events-policy-verdict-enabled: "true"
          bpf-events-trace-enabled: "true"
          bpf-lb-acceleration: disabled
          bpf-lb-external-clusterip: "false"
          bpf-lb-map-max: "65536"
          bpf-lb-sock: "false"
          bpf-lb-sock-terminate-pod-connections: "false"
          bpf-map-dynamic-size-ratio: "0.0025"
          bpf-policy-map-max: "16384"
          bpf-root: /sys/fs/bpf
          cgroup-root: /sys/fs/cgroup
          cilium-endpoint-gc-interval: 5m0s
          cluster-id: "0"
          cluster-name: default
          clustermesh-enable-endpoint-sync: "false"
          clustermesh-enable-mcs-api: "false"
          cni-exclusive: "true"
          cni-log-file: /var/run/cilium/cilium-cni.log
          custom-cni-conf: "false"
          datapath-mode: veth
          debug: "false"
          debug-verbose: ""
          direct-routing-skip-unreachable: "false"
          dnsproxy-enable-transparent-mode: "true"
          dnsproxy-socket-linger-timeout: "10"
          egress-gateway-reconciliation-trigger-interval: 1s
          enable-auto-protect-node-port-range: "true"
          enable-bgp-control-plane: "true"
          enable-bpf-clock-probe: "false"
          enable-endpoint-health-checking: "true"
          enable-envoy-config: "true"
          enable-gateway-api: "true"
          enable-gateway-api-alpn: "false"
          enable-gateway-api-app-protocol: "false"
          enable-gateway-api-proxy-protocol: "false"
          enable-gateway-api-secrets-sync: "true"
          enable-health-check-loadbalancer-ip: "false"
          enable-health-check-nodeport: "true"
          enable-health-checking: "true"
          enable-hubble: "true"
          enable-ipv4: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv4-masquerade: "true"
          enable-ipv6: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-k8s-networkpolicy: "true"
          enable-k8s-terminating-endpoint: "true"
          enable-l2-neigh-discovery: "true"
          enable-l7-proxy: "true"
          enable-local-redirect-policy: "false"
          enable-masquerade-to-route-source: "false"
          enable-metrics: "true"
          enable-node-ipam: "true"
          enable-node-selector-labels: "false"
          enable-policy: default
          enable-runtime-device-detection: "true"
          enable-sctp: "false"
          enable-svc-source-range-check: "true"
          enable-tcx: "true"
          enable-vtep: "false"
          enable-well-known-identities: "false"
          enable-xt-socket-fallback: "true"
          envoy-base-id: "0"
          envoy-config-retry-interval: 15s
          envoy-keep-cap-netbindservice: "true"
          external-envoy-proxy: "true"
          gateway-api-hostnetwork-enabled: "false"
          gateway-api-hostnetwork-nodelabelselector: ""
          gateway-api-secrets-namespace: cilium-secrets
          gateway-api-service-externaltrafficpolicy: Cluster
          gateway-api-xff-num-trusted-hops: "0"
          hubble-disable-tls: "false"
          hubble-export-file-max-backups: "5"
          hubble-export-file-max-size-mb: "10"
          hubble-listen-address: :4244
          hubble-socket-path: /var/run/cilium/hubble.sock
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          identity-allocation-mode: crd
          identity-gc-interval: 15m0s
          identity-heartbeat-timeout: 30m0s
          install-no-conntrack-iptables-rules: "false"
          ipam: kubernetes
          ipam-cilium-node-update-rate: 15s
          k8s-client-burst: "20"
          k8s-client-qps: "10"
          k8s-require-ipv4-pod-cidr: "false"
          k8s-require-ipv6-pod-cidr: "false"
          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          max-connected-clusters: "255"
          mesh-auth-enabled: "true"
          mesh-auth-gc-interval: 5m0s
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          monitor-aggregation: medium
          monitor-aggregation-flags: all
          monitor-aggregation-interval: 5s
          nat-map-stats-entries: "32"
          nat-map-stats-interval: 30s
          node-port-bind-protection: "true"
          nodeport-addresses: ""
          nodes-gc-interval: 5m0s
          operator-api-serve-addr: 127.0.0.1:9234
          operator-prometheus-serve-addr: :9963
          policy-cidr-match-mode: ""
          preallocate-bpf-maps: "false"
          procfs: /host/proc
          proxy-connect-timeout: "2"
          proxy-idle-timeout-seconds: "60"
          proxy-max-connection-duration-seconds: "0"
          proxy-max-requests-per-connection: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-xff-num-trusted-hops-ingress: "0"
          remove-cilium-node-taints: "true"
          routing-mode: tunnel
          service-no-backend-response: reject
          set-cilium-is-up-condition: "true"
          set-cilium-node-taints: "true"
          synchronize-k8s-nodes: "true"
          tofqdns-dns-reject-response-code: refused
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: 0s
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: 100ms
          tunnel-protocol: vxlan
          unmanaged-pod-watcher-interval: "15"
          vtep-cidr: ""
          vtep-endpoint: ""
          vtep-mac: ""
          vtep-mask: ""
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          bootstrap-config.json: |
            {
              "node": {
                "id": "host~127.0.0.1~no-id~localdomain",
                "cluster": "ingress-cluster"
              },
              "staticResources": {
                "listeners": [
                  {
                    "name": "envoy-prometheus-metrics-listener",
                    "address": {
                      "socket_address": {
                        "address": "0.0.0.0",
                        "port_value": 9964
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-prometheus-metrics-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "prometheus_metrics_route",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "prometheus_metrics_route",
                                        "match": {
                                          "prefix": "/metrics"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/stats/prometheus"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "envoy-health-listener",
                    "address": {
                      "socket_address": {
                        "address": "127.0.0.1",
                        "port_value": 9878
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-health-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "health",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "health",
                                        "match": {
                                          "prefix": "/healthz"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/ready"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "clusters": [
                  {
                    "name": "ingress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "egress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "egress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "ingress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "xds-grpc-cilium",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "xds-grpc-cilium",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/xds.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "explicitHttpConfig": {
                          "http2ProtocolOptions": {}
                        }
                      }
                    }
                  },
                  {
                    "name": "/envoy-admin",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "/envoy-admin",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "dynamicResources": {
                "ldsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                },
                "cdsConfig": {
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                }
              },
              "bootstrapExtensions": [
                {
                  "name": "envoy.bootstrap.internal_listener",
                  "typed_config": {
                    "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
                  }
                }
              ],
              "layeredRuntime": {
                "layers": [
                  {
                    "name": "static_layer_0",
                    "staticLayer": {
                      "overload": {
                        "global_downstream_max_connections": 50000
                      }
                    }
                  }
                ]
              },
              "admin": {
                "address": {
                  "pipe": {
                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                  }
                }
              }
            }
        kind: ConfigMap
        metadata:
          name: cilium-envoy-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
            :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
            \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
            /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
            true\n"
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
            \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
            1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
            X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
            \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
            *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
            content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
            range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
            \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
            \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
            \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
            \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
            \           # double `/index.html` is required here \n            try_files $uri
            $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
            /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
            \           return 200 'ok';\n        }\n    }\n}"
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUs2ZmpvMTAzTFFWVjA3Y21ndzZaTjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE5qRTRNVGN3T0ZvWERUSTNNVEV4TmpFNApNVGN3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3VllKNVlrbFJscVlDd2pUREh2dWg2a1BMUUc0V3htM29sbC9pb09RaHBJMEpqMzgKcVJjeWQrNzZZd0FwTlRTK2d4a3VOU1huRXY2NkcxdVNkSWlVcld1SFhLL1BIV2xHTHZ6SDRhUldIV2ZsRU52awpia2N3TW45U09iL0tRZlNyUHAvZk9jYURHcDJTWC8rdjI5R0VFSlYwazdzNUllSGNIeUNZM2h1VHQ5MWRuZ2tnCm9zL0I2ZlNSYy8yR3BqVHVlN3N1eUE5QTVDcFZJQUUwdDdra2RtajVUa252RGozYm5nM1lvT1A1dkJnNTFwMk8KVERvajJnUTAvL1RHMCtrZTFqY3YxK3gwNmU3c2lYaHp0djNQV2pBK0ZnVWtadjdZSzVEbkdVK2JXZm5VaW9GNAptaWh4TXY1UFRSWSt0R2w3ajNSTEd0WjdrMTdNOTR1V1p0ZnQyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTmRSYzZyUTQ3eXI1T0pJbTRRcSt1eCtSNWduTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldMVFNZa0c3T2ZsYzNXSEdtMzNzRFVqZzNSZ1FBbnNmZ3hRSzVoZ01Oa2VOOGd6QlNJcE5oCldIeW9vL0hJa0dsNXhlOWcwd2lyM2VHcUpTMVdJUnlHVEY1RGkrWmxRV2lxclB6M2o5cWppTnJvOSt6NFR2aEUKT0dDREU5OUNHcEJQSFB6c3FsN3ZDUzluK1hyNnkwZmNoUDBXWVFNYzY4eWtUWjRLbko4czNwcXhHVlVDd01Pagp3dnNoVm5kdUgwc0prT1hpSGpFTk13TlVEdXIrT1RpTWQ2KzVhVnpHQVBhSHAxWnpiTXVDUlRmZ2VYUmxsaHd6ClU5VGtnSVkrR2RIOWdSQ3ovRS8rM1ZMcW93Z25GS0o2M0Q3clo1T29XcENndHdPZUZRZEJSZ29MQTlidlNndFoKc1lkM1UzTjhVZ0YyZTN4TzM3ZnlNSDh2dnlSbmNLbWUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1ZZSjVZa2xSbHFZQ3dqVERIdnVoNmtQTFFHNFd4bTNvbGwvaW9PUWhwSTBKajM4CnFSY3lkKzc2WXdBcE5UUytneGt1TlNYbkV2NjZHMXVTZElpVXJXdUhYSy9QSFdsR0x2ekg0YVJXSFdmbEVOdmsKYmtjd01uOVNPYi9LUWZTclBwL2ZPY2FER3AyU1gvK3YyOUdFRUpWMGs3czVJZUhjSHlDWTNodVR0OTFkbmdrZwpvcy9CNmZTUmMvMkdwalR1ZTdzdXlBOUE1Q3BWSUFFMHQ3a2tkbWo1VGtudkRqM2JuZzNZb09QNXZCZzUxcDJPClREb2oyZ1EwLy9URzAra2UxamN2MSt4MDZlN3NpWGh6dHYzUFdqQStGZ1VrWnY3WUs1RG5HVStiV2ZuVWlvRjQKbWloeE12NVBUUlkrdEdsN2ozUkxHdFo3azE3TTk0dVdadGZ0MlFJREFRQUJBb0lCQUZrRG9oN2FuQnplVFM2WAphNFJOOHk3bXVhUUJMTDVWQXVWdXkzZ2N4d2dPZkpBMjdnTjBPTHBiZjFEaG5CZHhKMTM0MC91SWJmR2k4bER5ClFtWUJGR01jSlFDWnVZUlRHZ3M4TzFNNmRLT3BXQ0FBL2hXQUZVTEt1REw2aU1jQlBXN2g4TWNMRFFYT0VyeTgKWGwyWkEzTVhQTXRmNGhnbGcxR1prb2lBcmV4eTVFWS8rNUdISmNFOVdHMzk5R1pwL2orZmNEa0hPUGxJRkZiSAo5NE9xYURIclJKUmx6WWF3dGpOY2hXNHJsTzFzaW1ZTmFBQmoyTUNmZFcvSDBkb3ZRVm5DYytpTndkUXVZZVc1CjFscU5FOHhRUUhQN0g4YWNBbXRTY0ZOdWRacTVGc3AxSUk2eDlEaEtBUVdFSTRwRmM3eFdWdUNqL2dBSjg2clUKYXFZb0Nqa0NnWUVBNTZYNmcvSDhrdFZOOVB1U2R1cENMd2d1SVJFSE55ZDdUcU0rTVRVd0ppcnZ5dWFSUjlCNwp6Y0F4T2ozU1lMV1ZmQWNtenE1NkNzL0xrQWNPWTkxdUUwMC9YVDN5b2lGWWRBMHBoekZBRDE0TFYrcG5RY2FYClAzUWd2ZDB2R3ZLQ2U5aWF5c2laeENubTBOcm02YTRZNngyL0c3Um9SRk5kQ1cwVStoaGNReHNDZ1lFQTFha0UKVEFMR2lCd2JobmZhNFFBZmtvWFB2WGZZcWFROWo5YUp4dnk5dTFvd2ZDeHAvVGNXWlZJRk16V3JpcGdJOGVHRgpEV0lvdjQvMmxpWUNBNVdReVF0NCtJaXdKTndJRnVJZXU4Q2I0TnVNTmxmb1QyRGNRdktkdVV2aVFOVEF1S2Q3CnVEQU1sdXgvbFVGa0xlUjBZbGZkVGdUOTBBeUNOMHFwZUFZS0xoc0NnWUJpN2pMWUtQKzZZZGlpV05LTGNLNkYKVVpRSjBURG9zRGJzTmJGNDZJTkF1Yk9oVHVrYTU0SUlOQjJTQnhjUzhGb0FGem5PcVJzOEJOU21GUzFqSHcxRQp0d2ZwdFd3cks5eVA2NU1oeHJuYUZrcjM2QWJqUTRJU3VuREZSWEk1cXZwcEUrKy96UDVHbGJLYTNmSWlPSlV4CnpJbHl0cENWSlprbFRtM1lCWkZab3dLQmdFRDVoejcrVVJXdlJvZWNCMG9KV1pDYmROTnZrTW4yRW1xZG1ZU1QKODdiMzlHcXVyd1M4TGVsZUNnckt0WUlPUGhvZ3RPK2UvRGxWTkczdzNRZnVBZnZCcTJZWlcwZTZTaE43YkZFNApmNjdmMVVIcGRkSTk2SDNMZmorTlhoN05GRmFUU0VKNUNqc1RiTEVkRTdRSkY0T1lxTXBESmxTUW1VRHJTYUlnClpCUWxBb0dCQU5mWHFBMTRaa0RCV1dsQkRjczhkZWxFUW5oYmhRRjVQdzRScDVoZ3ppaG52L0xuVmNHV1VMa2sKdU5WTm8vR1NlWGt6R3pGSlFDWkc2akVSNWtuN0JLbzlGZ1lEdDVZTlVhSDY0bDJMekJNdzZrazBuRGI0WUZqMApCU3NaN3UwbUJJa2d4MWt3dmFraUFLOVZqd0lMbi94UERVaHY3b01sZ3EwaVhMTkZYbEdYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUs2ZmpvMTAzTFFWVjA3Y21ndzZaTjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE5qRTRNVGN3T0ZvWERUSTNNVEV4TmpFNApNVGN3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3VllKNVlrbFJscVlDd2pUREh2dWg2a1BMUUc0V3htM29sbC9pb09RaHBJMEpqMzgKcVJjeWQrNzZZd0FwTlRTK2d4a3VOU1huRXY2NkcxdVNkSWlVcld1SFhLL1BIV2xHTHZ6SDRhUldIV2ZsRU52awpia2N3TW45U09iL0tRZlNyUHAvZk9jYURHcDJTWC8rdjI5R0VFSlYwazdzNUllSGNIeUNZM2h1VHQ5MWRuZ2tnCm9zL0I2ZlNSYy8yR3BqVHVlN3N1eUE5QTVDcFZJQUUwdDdra2RtajVUa252RGozYm5nM1lvT1A1dkJnNTFwMk8KVERvajJnUTAvL1RHMCtrZTFqY3YxK3gwNmU3c2lYaHp0djNQV2pBK0ZnVWtadjdZSzVEbkdVK2JXZm5VaW9GNAptaWh4TXY1UFRSWSt0R2w3ajNSTEd0WjdrMTdNOTR1V1p0ZnQyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTmRSYzZyUTQ3eXI1T0pJbTRRcSt1eCtSNWduTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldMVFNZa0c3T2ZsYzNXSEdtMzNzRFVqZzNSZ1FBbnNmZ3hRSzVoZ01Oa2VOOGd6QlNJcE5oCldIeW9vL0hJa0dsNXhlOWcwd2lyM2VHcUpTMVdJUnlHVEY1RGkrWmxRV2lxclB6M2o5cWppTnJvOSt6NFR2aEUKT0dDREU5OUNHcEJQSFB6c3FsN3ZDUzluK1hyNnkwZmNoUDBXWVFNYzY4eWtUWjRLbko4czNwcXhHVlVDd01Pagp3dnNoVm5kdUgwc0prT1hpSGpFTk13TlVEdXIrT1RpTWQ2KzVhVnpHQVBhSHAxWnpiTXVDUlRmZ2VYUmxsaHd6ClU5VGtnSVkrR2RIOWdSQ3ovRS8rM1ZMcW93Z25GS0o2M0Q3clo1T29XcENndHdPZUZRZEJSZ29MQTlidlNndFoKc1lkM1UzTjhVZ0YyZTN4TzM3ZnlNSDh2dnlSbmNLbWUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9KUWN5ays5d2JNOC8yRmtqWkNhbUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE5qRTRNVGN3T0ZvWERUSTNNVEV4TmpFNApNVGN3T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVqK3JRbkNtYXEvTWE3Rlk1SCtFcmxyZm9yd2kKVDVuL1ZyQ3lDM1lCRjNSbW1uSktobEhuRnIzaWUwZDZBOHV0VDN5dDdjNmlOSDlrT0l0aUlackpYY0dGa3RlbwpUMkcxd2RLZDJQejliQ1dpdnJDNUQxeWhjMkR0NkI0dDZXY284bjZZZE44M1Z6Wi9pUHNIZ1JkWThVa2JabTdJClhtSVd1bXBRQ0lpa1U3dW9rTCtyTnRHMkZUMm5xcURwNlY2R2VGRDB4N2ZlNUUxampnc29BYVduMDliWkVhbmcKb012M291YkhkQ2twcnhHUTg0c1A0aHNUNkdBNS9tSEx5TmV3NG1LeDZrVmN3cW9WYjJSOVFETy9KMkNuUFlYcgoveXc4TW9OVzdPNm5lblJFVndMOEtXN2xEK1hJWkxmeGhKWGZKSTM3R24yY1Evb1d2N3RBbnplaXF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVFhVWE9xME9POHErVGlTSnVFS3Zycwpma2VZSnpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSFdNOUR1VnMvZ241T1VzQzdTM0hhb2xiY2p2SHFzckJGM2RmaWkwcXVjSnd4T2gKZkExdEhOYkd4UURmNDMrVmt0eWRXM0hmTzVnWDNYZUJ1QURuUm5DMUh5bHpVL0JBa3BOOWdVZkRjOHJpZ0RLSgpNWmg2UkVydHBTbGhlZUdjYXNsckNPVXExRlR4MHJhMlg1bE9EMldhcVNwdy9LeVZHNW5KV0ZObkpRVHIyS2RKCmVBUll1aUdHc3NDdUVHZVpIMTdNUTM5RnBJVEFIWXdSTVZVSXFXNGxNM1dGNERjaFZZNmpudEc5Z05qNGlzWEEKTFJmcWFSL3pVblZYcE1tSUVYakZ4OEdlRnBhSDdzYXE0L2l2TGRwUUx2dUFjZ1krVUZ3VEoySkpyT0ZnTXJiTwpVZHpycy91a2grTGVIWTYxZjRzd2Y1QUk5R3pGa2M4N0xHQzRFejA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWorclFuQ21hcS9NYTdGWTVIK0VybHJmb3J3aVQ1bi9WckN5QzNZQkYzUm1tbkpLCmhsSG5GcjNpZTBkNkE4dXRUM3l0N2M2aU5IOWtPSXRpSVpySlhjR0ZrdGVvVDJHMXdkS2QyUHo5YkNXaXZyQzUKRDF5aGMyRHQ2QjR0NldjbzhuNllkTjgzVnpaL2lQc0hnUmRZOFVrYlptN0lYbUlXdW1wUUNJaWtVN3Vva0wrcgpOdEcyRlQybnFxRHA2VjZHZUZEMHg3ZmU1RTFqamdzb0FhV24wOWJaRWFuZ29NdjNvdWJIZENrcHJ4R1E4NHNQCjRoc1Q2R0E1L21ITHlOZXc0bUt4NmtWY3dxb1ZiMlI5UURPL0oyQ25QWVhyL3l3OE1vTlc3TzZuZW5SRVZ3TDgKS1c3bEQrWElaTGZ4aEpYZkpJMzdHbjJjUS9vV3Y3dEFuemVpcXdJREFRQUJBb0lCQVFDa0tLSW1lV3YwOU9aVQp0WWdJUG0wUDBJRDB5cVhqUzNUSFVBNWVFN0I2bjlvZm4wVVlodkFNRjJtY0J6QUFVSEY5Y2dOTGE2bUVaQlJOCjBteTMrZG9xalB2U3BjcHZ6VXVLZnIwcUdESzJNNlh5TlltbmhKbTVQR0gxQ1VTbVNJckswZEpHa01nU1VyS3UKWmJRRGtEU1ExME1UVWVuQlp1dHBlM0wzVXBpa1EyeWJHNEs0c0FTMnl0c2p0SmdyVWdhQmt6MnVOOGJ0anRKOApBcEU5S2tzZzJiVXNCOXM5VVRkRHdRMVJyVnlMa1M0VWdndjBpcFVkdkdlbjQ0azIrd2NkVlNWS0NCVG1hNHA0CloyTS9peVBicW9uRithMlRQc1NvVHk0RnVFYVMyYkpvc3krR0lySmJZOUcybkdmWGl2Nm5VVDZLc3RNdTMxZ3gKSEs1eWI0UUJBb0dCQU1kelpuQzl3R3pHeUk4dGE0SXVldDZUbWZtRUlqYVp5WXFOYmszbVFlSmo1Q2JpYjl6VgpOSUxaVzRCck0wR1FwSXZWR24zM0p6OXU3cC8rQllsTnpaN3lVQTRwa0xzNkd6MEhRZWswZTFqWjVoYnFmWFJpCkNnQnoxTWhiSmlwTEpJcnR6UWxTbVB1MVhLbit6QzNSUkNZZjdZbVV5TjE1NWUzOGtFQWFWRDhyQW9HQkFPOE8KQ0Jta0hYRHFIMjNEaUxUVGt0MUtNaUxwM0RtR1k5NFBVbHMzVkgwdlFlU0Z0cTBzcWhFNStCNU5wRm5zalNKegpPcGFhb3ZOZkpiMkNCWDlUeWo0VHdiaDZ5SFJ4R2xIZjMvRmlnS3Jwb01KOWh5RjlqMVBnTkhWcEVqS2xOdXNOCjloTjhyckpSb0hwN0QydkJhdWRMTjZHaWF3L3YvSHJOWkl2NzFHcUJBb0dBY3ZNY2lEK2tSa3p1ekM0R054b28Kc0Z6ck1mWW9iY1dHZFhiN3FxUFpOdXdSVXlQUUNydEtMMXVzTThBVTQyWEVuOTZyRFF4RHIzaDB5UHJ6SCtZYQphdEFHdVpMVkdrTHI3ZWxmNEZMaUFCeGRVcm5Fb2kzYXk5WDJQWjdpeVI5VHFVcFNrRnZ0VmF4NkFuT2FJNUhuCkwvM1l2aUZrL3RoQlh6N2Z1RUkwYWM4Q2dZQXZtZ0d1NldrYlpPTmhQZ0JvMFlCN0pCMGJxcW01b3JNY01yeloKZ1FrSDdITVlpQys2Q0J6TlZWZTg0UVVMQ3ZtSGxKNWtBdUxUeDJ5Q2NmT2FTUnNLaFhDYnhZZEkrSVNmTFE4dwp4OGFMUWY1Sy9DZitXVHhESFhBVXVSbHdrRW1CUU1SeFdQQ0lmWXlSRnhRWkJ1aThxZE9vRWVsendQdnJrQjZuCmFUd0JBUUtCZ0JYTWMrWkpTUWNPWmE5anZSQW1RazMrQkZZVTRYUThRNjU2R29BZGVjb0VqOTRHK1NIclZxK2EKS1JNZWV4VlBTYStGaFBoWldDQzR2eHI1bGNKNno1NW85WGhOSC8wWHlhSi9mTW5EcWt6SzIwRG1CbTBHTEhQNQp6WVJ6TkRablZHb2NvUFVhNzhtbHNNSkJoaW85TXVmM0xOUFhoS2dXZWtQaStVT3RNR0pYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUs2ZmpvMTAzTFFWVjA3Y21ndzZaTjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE5qRTRNVGN3T0ZvWERUSTNNVEV4TmpFNApNVGN3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3VllKNVlrbFJscVlDd2pUREh2dWg2a1BMUUc0V3htM29sbC9pb09RaHBJMEpqMzgKcVJjeWQrNzZZd0FwTlRTK2d4a3VOU1huRXY2NkcxdVNkSWlVcld1SFhLL1BIV2xHTHZ6SDRhUldIV2ZsRU52awpia2N3TW45U09iL0tRZlNyUHAvZk9jYURHcDJTWC8rdjI5R0VFSlYwazdzNUllSGNIeUNZM2h1VHQ5MWRuZ2tnCm9zL0I2ZlNSYy8yR3BqVHVlN3N1eUE5QTVDcFZJQUUwdDdra2RtajVUa252RGozYm5nM1lvT1A1dkJnNTFwMk8KVERvajJnUTAvL1RHMCtrZTFqY3YxK3gwNmU3c2lYaHp0djNQV2pBK0ZnVWtadjdZSzVEbkdVK2JXZm5VaW9GNAptaWh4TXY1UFRSWSt0R2w3ajNSTEd0WjdrMTdNOTR1V1p0ZnQyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTmRSYzZyUTQ3eXI1T0pJbTRRcSt1eCtSNWduTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQldMVFNZa0c3T2ZsYzNXSEdtMzNzRFVqZzNSZ1FBbnNmZ3hRSzVoZ01Oa2VOOGd6QlNJcE5oCldIeW9vL0hJa0dsNXhlOWcwd2lyM2VHcUpTMVdJUnlHVEY1RGkrWmxRV2lxclB6M2o5cWppTnJvOSt6NFR2aEUKT0dDREU5OUNHcEJQSFB6c3FsN3ZDUzluK1hyNnkwZmNoUDBXWVFNYzY4eWtUWjRLbko4czNwcXhHVlVDd01Pagp3dnNoVm5kdUgwc0prT1hpSGpFTk13TlVEdXIrT1RpTWQ2KzVhVnpHQVBhSHAxWnpiTXVDUlRmZ2VYUmxsaHd6ClU5VGtnSVkrR2RIOWdSQ3ovRS8rM1ZMcW93Z25GS0o2M0Q3clo1T29XcENndHdPZUZRZEJSZ29MQTlidlNndFoKc1lkM1UzTjhVZ0YyZTN4TzM3ZnlNSDh2dnlSbmNLbWUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlVWFVLbVM3a01zV0s0WWtjT1BJa1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRFeE5qRTRNVGN3T0ZvWERUSTNNVEV4TmpFNApNVGN3T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1YNzhITUhCYk1rQnBESmdBTEcKNzZFcGFFbGhkNnQySFlNQ0NaM255aWI2NUQ4cDRac3BjNkJMWDM2Qm5lU3pxNjNzb2RDS204Y21IcDJiaVFaTgpzVVNSUTlhMjMyYmZ3NERRSjVUNHl0UVNIZ0M5MS8zTWpvQmFIRG02S3Fqc1pOZzR0OXd1TzF5Mm1PNFQzNFU2CjIwN1VtYUNkNVQwZ1lRVUs5d0xLOUZnMk5wREZkWVFKSTNrR2JlRk82Q2pqSC9LdDhERytZSzBTZVhzcllVOWIKMzArUFVIVVpSTHV6dVVBa3NRVWNCWll1QUVueXVMbSt6Y1JIWmxOMDY1cjRaR1ZGclh3YWxZNkw1eGVLN3l2Ywp2d3BYckE0UlBYSDFNVDc1OVdNNmM2RDAwTDJMeUxaMEczaWxzbzhKN25SeE5lS2JSMTMxWmVqWUNCek9RWERaCjJNMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTExRnpxdERqdkt2awo0a2liaENyNjdINUhtQ2N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWU1ajRlVk9XcFFMc2JBdGZYRjFjOXhwOXdSalgKRDZ0Y1Z5STQyMG5IWlladXJEakswSXRpM1ZKUWU3bVNmS3BWWDNzOUxteUJiQ1dHMWdHck5XbEdYZ3JEc0RCbwpYaVI3T3IyNEIzYjlNOGdudmNGa2JqdCswNmdyd2NhM2RxZUhnTWJrV3RJVXFXaHFvNC9qVVMxRjVPYk9Ba2FtCmtVcVYrMnFnVUY2QllHTWpzNFZ3bUFOcUFXQyswNGg2RU9tQ2MrMDlIRHR3SHcxRnp1NlpNdE5xM1h6d211eFYKK2tKQXgrQWtyWFRqTGlyL1UwbU94VXhYTUFUekNPSC84YU9oekFNV0Y3eXZCSHlqUVk1TXBmMGgvaFBRZm0yUgpqd25uNWYwQ1pkUHFERVF3QTYyd052RENrbWpjdjNEV1hGc1JtNGdXL2FMY0labFlOdjRRMUZDdVpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeGZ2d2N3Y0ZzeVFHa01tQUFzYnZvU2xvU1dGM3EzWWRnd0lKbmVmS0p2cmtQeW5oCm15bHpvRXRmZm9HZDVMT3JyZXloMElxYnh5WWVuWnVKQmsyeFJKRkQxcmJmWnQvRGdOQW5sUGpLMUJJZUFMM1gKL2N5T2dGb2NPYm9xcU94azJEaTMzQzQ3WExhWTdoUGZoVHJiVHRTWm9KM2xQU0JoQlFyM0FzcjBXRFkya01WMQpoQWtqZVFadDRVN29LT01mOHEzd01iNWdyUko1ZXl0aFQxdmZUNDlRZFJsRXU3TzVRQ1N4QlJ3RmxpNEFTZks0CnViN054RWRtVTNUcm12aGtaVVd0ZkJxVmpvdm5GNHJ2Szl5L0NsZXNEaEU5Y2ZVeFB2bjFZenB6b1BUUXZZdkkKdG5RYmVLV3lqd251ZEhFMTRwdEhYZlZsNk5nSUhNNUJjTm5ZelFJREFRQUJBb0lCQUNGUEc4c2VlVlVFVUo1MwphRFFQYUMyREcrcU1uV2VaZmFtVzVDdE8zZkhrOEJXNFpCNkl3TTFOSVFuVm9NempkWlRUWlA0QzgrWnpnVjhlCjFkVGJxV0ZSMTBuK2htTjJiaHZ6NlZUazdxcnpTVnp5azY0OWhoUU9GUVdaVHFnUTdYNTdQR09zMjR2anBLTVoKY05lbmFWSS83b0RaVDhJUytuK3dzcElqdHl4SDFvaXlvYkVOVEFEWTd4QllJMUlSMHB6SlM0RUgrMUZpMjh5Nwpzc2k2c2JNQTA3SDEyZGM5eXd1ZTY2QzVYMlR3dngxNHlSUjNMdTZlNmVTMCtjSXBSUDFSUStHc1hEMTJ3b2x0CjNkN0hiTVJ0RHVCdGswRSsyQnc5N3VyelV2NWY3Wk1MRzJNS0FkZ2s2M2VxT3ZRWlg5TWlGd3h4RWNCc2tSOG4KeUFpWlc3a0NnWUVBeXV2UkdERzh5czdNOFE2L2ZkSThQUldGaVlMOTBlQm1oKzJtanBaNGVyY1ZENEFPeWYvcgpGeWJhVHNxaU9Sb0xUaGQ5K1hIM0cwTDdlTzdiaDFDcHc0UExDbERrSThadUFORGRNMnJoNU9kdkF1M0FNWHNXCnFEYXBFL2xSMmxVblJYRFNiMllVRk1zQm8zY0ExWW1OdnlTdy92Nng1YXZ3N0wrclVuL3o5YnNDZ1lFQStjV0cKZlJkQmFOSTYrY0JVVzJHaGIvZkVndHlNdWp0SEF1SC9QU1NWc2pKYWJkZWNlbFl3MytzV2ZHMHBDMW9BaEtONwptMXRHNWcyZy9FN0JGVjZmUXJJUDhsM0dpVlFreGFDZGYwZVJJT2huWmwwWEpoYXM2UlV0ZURkaGhNZE02eDdVCmFURUxpZjZ6S05va3pob2JKRnBueTA3MlJoeTNKang0b0VVbGZ4Y0NnWUJUQzZGZUduVGVOell1YlUrM0tZUVgKcDZnbjkrRHl0TGloWm9Ra2xMWW4ycWVXMlZ5MEZMVmNteno2dy9rU0QzT1MrUkJJTnZqZlFsRnlVNmFxUVR2SQoxVFlTT2JxMFhYQUZpM1VMcHZGZDRjMVAwSWM0ZU54ejZUTFhCdEVWM29XYzZLaG1pTXN0RzB2SFgxdUxDS2xuCkVaZ1NNNkFRazRhZERYQUs2bXlvSXdLQmdEMW53bGllandZbUtUbWRmeCs0TU9oR0VabmFmdjZKOUR0Uk5GN2oKejZtdmwydkp4ajZOVWhhNnhSeHgrZFZBbTBBQXNUTFFqZTJoRENMN2VaeTNWcEFmRnF5UFFYQWhyNmltaEJIMgpsa2R3MjNyZkNBSGxNVDFjWjRGV25ETDRqSUNCWTljNHA0MlZnSlphaXhIZ2VTdkd6aDI5bSs1QXdRWTFkN0p2ClRYaWhBb0dBQU16Mm5DWjY2RHJuaEx2N255L2hTc1FnUHpjOHpPVEhDY2o5K2toOGtMazNqaVZER2FoNkxMU20KNmxmL3RVeCtCV0pTWnNhUWI5OGNGRnpTSmVjSk83MmVaMVFSNTRSWGowUkRQcFYrdm5NOU80bGxxcVJlcVlkWgpxUzBjSlpqZFN6aVgzbFl3UHB3SWc2enZhM2tOblBMWklDWWtueHdONTYya3k3OGw3ZWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/port: "9964"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            io.cilium/app: proxy
            k8s-app: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          clusterIP: None
          ports:
          - name: envoy-metrics
            port: 9964
            protocol: TCP
            targetPort: envoy-metrics
          selector:
            k8s-app: cilium-envoy
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-peer
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: hubble-peer
          namespace: kube-system
        spec:
          internalTrafficPolicy: Local
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          selector:
            k8s-app: cilium
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: grpc
          selector:
            k8s-app: hubble-relay
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          ports:
          - name: http
            port: 80
            targetPort: 8081
          selector:
            k8s-app: hubble-ui
          type: ClusterIP
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: cilium-operator
            app.kubernetes.io/part-of: cilium
            io.cilium/app: operator
            name: cilium-operator
          name: cilium-operator
          namespace: kube-system
        spec:
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                app.kubernetes.io/name: cilium-operator
                app.kubernetes.io/part-of: cilium
                io.cilium/app: operator
                name: cilium-operator
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                command:
                - cilium-operator-generic
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/operator-generic:v1.16.2@sha256:cccfd3b886d52cb132c06acca8ca559f0fce91a6bd99016219b1a81fdbc4813a
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                name: cilium-operator
                ports:
                - containerPort: 9963
                  hostPort: 9963
                  name: prometheus
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp/cilium/config-map
                  name: cilium-config-path
                  readOnly: true
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-cluster-critical
              restartPolicy: Always
              serviceAccountName: cilium-operator
              tolerations:
              - operator: Exists
              volumes:
              - configMap:
                  name: cilium-config
                name: cilium-config-path
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-relay
            spec:
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: false
              containers:
              - args:
                - serve
                command:
                - hubble-relay
                image: quay.io/cilium/hubble-relay:v1.16.2@sha256:4b559907b378ac18af82541dafab430a857d94f1057f2598645624e6e7ea286c
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 12
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                name: hubble-relay
                ports:
                - containerPort: 4245
                  name: grpc
                readinessProbe:
                  grpc:
                    port: 4222
                  timeoutSeconds: 3
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 65532
                  runAsNonRoot: true
                  runAsUser: 65532
                startupProbe:
                  failureThreshold: 20
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/hubble-relay
                  name: config
                  readOnly: true
                - mountPath: /var/lib/hubble-relay/tls
                  name: tls
                  readOnly: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              restartPolicy: Always
              securityContext:
                fsGroup: 65532
              serviceAccountName: hubble-relay
              terminationGracePeriodSeconds: 1
              volumes:
              - configMap:
                  items:
                  - key: config.yaml
                    path: config.yaml
                  name: hubble-relay-config
                name: config
              - name: tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: client.crt
                      - key: tls.key
                        path: client.key
                      - key: ca.crt
                        path: hubble-server-ca.crt
                      name: hubble-relay-client-certs
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-ui
            spec:
              automountServiceAccountToken: true
              containers:
              - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                name: frontend
                ports:
                - containerPort: 8081
                  name: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/nginx/conf.d/default.conf
                  name: hubble-ui-nginx-conf
                  subPath: nginx.conf
                - mountPath: /tmp
                  name: tmp-dir
              - env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: hubble-relay:80
                image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
                imagePullPolicy: IfNotPresent
                name: backend
                ports:
                - containerPort: 8090
                  name: grpc
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts: null
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              serviceAccountName: hubble-ui
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: cilium
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                command:
                - cilium-agent
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.memory
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - bash
                      - -c
                      - |
                        set -o errexit
                        set -o pipefail
                        set -o nounset

                        # When running in AWS ENI mode, it's likely that 'aws-node' has
                        # had a chance to install SNAT iptables rules. These can result
                        # in dropped traffic, so we should attempt to remove them.
                        # We do it using a 'postStart' hook since this may need to run
                        # for nodes which might have already been init'ed but may still
                        # have dangling rules. This is safe because there are no
                        # dependencies on anything that is part of the startup script
                        # itself, and can be safely run multiple times per node (e.g. in
                        # case of a restart).
                        if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                        then
                            echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                            iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                        fi
                        echo 'Done!'
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-agent
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - CHOWN
                    - KILL
                    - NET_ADMIN
                    - NET_RAW
                    - IPC_LOCK
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - DAC_OVERRIDE
                    - FOWNER
                    - SETGID
                    - SETUID
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
                - mountPath: /host/etc/cni/net.d
                  name: etc-cni-netd
                - mountPath: /var/lib/cilium/clustermesh
                  name: clustermesh-secrets
                  readOnly: true
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
                - mountPath: /run/xtables.lock
                  name: xtables-lock
                - mountPath: /var/lib/cilium/tls/hubble
                  name: hubble-tls
                  readOnly: true
                - mountPath: /tmp
                  name: tmp
              hostNetwork: true
              initContainers:
              - command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: config
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp
                  name: tmp
              - command:
                - sh
                - -ec
                - |
                  cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
                  nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
                  rm /hostbin/cilium-sysctlfix
                env:
                - name: BIN_PATH
                  value: /opt/cni/bin
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: apply-sysctl-overwrites
                securityContext:
                  capabilities:
                    add:
                    - SYS_ADMIN
                    - SYS_CHROOT
                    - SYS_PTRACE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /hostproc
                  name: hostproc
                - mountPath: /hostbin
                  name: cni-path
              - args:
                - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
                command:
                - /bin/bash
                - -c
                - --
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: mount-bpf-fs
                securityContext:
                  privileged: true
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
                  name: bpf-maps
              - command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-state
                      name: cilium-config
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-bpf-state
                      name: cilium-config
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      key: write-cni-conf-when-ready
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: clean-cilium-state
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
              - command:
                - /install-plugin.sh
                image: quay.io/cilium/cilium:v1.16.2@sha256:4386a8580d8d86934908eea022b0523f812e6a542f30a86a47edd8bed90d51ea
                imagePullPolicy: IfNotPresent
                name: install-cni-binaries
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /host/opt/cni/bin
                  name: cni-path
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - emptyDir: {}
                name: tmp
              - hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                name: cilium-run
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
              - hostPath:
                  path: /proc
                  type: Directory
                name: hostproc
              - hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
                name: cilium-cgroup
              - hostPath:
                  path: /opt/cni/bin
                  type: DirectoryOrCreate
                name: cni-path
              - hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                name: etc-cni-netd
              - hostPath:
                  path: /lib/modules
                name: lib-modules
              - hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                name: xtables-lock
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - name: clustermesh-secrets
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: local-etcd-client.key
                      - key: tls.crt
                        path: local-etcd-client.crt
                      - key: ca.crt
                        path: local-etcd-client-ca.crt
                      name: clustermesh-apiserver-local-cert
                      optional: true
              - hostPath:
                  path: /proc/sys/net
                  type: Directory
                name: host-proc-sys-net
              - hostPath:
                  path: /proc/sys/kernel
                  type: Directory
                name: host-proc-sys-kernel
              - name: hubble-tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
                      name: hubble-server-certs
                      optional: true
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium-envoy
            name: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium-envoy
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-envoy
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium-envoy
                name: cilium-envoy
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: cilium.io/no-schedule
                        operator: NotIn
                        values:
                        - "true"
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium-envoy
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --keep-cap-net-bind-service
                - --
                - -c /var/run/cilium/envoy/bootstrap-config.json
                - --base-id 0
                - --log-level info
                - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
                command:
                - /usr/bin/cilium-envoy-starter
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium-envoy:v1.29.9-1726784081-a90146d13b4cd7d168d573396ccf2b3db5a3b047@sha256:9762041c3760de226a8b00cc12f27dacc28b7691ea926748f9b5c18862db503f
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-envoy
                ports:
                - containerPort: 9964
                  hostPort: 9964
                  name: envoy-metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /var/run/cilium/envoy/artifacts
                  name: envoy-artifacts
                  readOnly: true
                - mountPath: /var/run/cilium/envoy/
                  name: envoy-config
                  readOnly: true
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium-envoy
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - hostPath:
                  path: /var/run/cilium/envoy/artifacts
                  type: DirectoryOrCreate
                name: envoy-artifacts
              - configMap:
                  defaultMode: 256
                  items:
                  - key: bootstrap-config.json
                    path: bootstrap-config.json
                  name: cilium-envoy-config
                name: envoy-config
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPAdvertisement
        metadata:
          labels:
            advertise: bgp
          name: cilium-advert
          namespace: kube-system
        spec:
          advertisements:
          - advertisementType: PodCIDR
          - advertisementType: Service
            selector:
              matchExpressions:
              - key: somekey
                operator: NotIn
                values:
                - never-used-value
            service:
              addresses:
              - LoadBalancerIP
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPClusterConfig
        metadata:
          name: cilium-bgp
          namespace: kube-system
        spec:
          bgpInstances:
          - localASN: 65015
            name: instance-65015
            peers:
            - name: peer-65014
              peerASN: 65014
              peerAddress: 192.168.100.1
              peerConfigRef:
                name: cilium-peer
          nodeSelector:
            matchExpressions:
            - key: somekey
              operator: NotIn
              values:
              - never-used-value
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumBGPPeerConfig
        metadata:
          name: cilium-peer
          namespace: kube-system
        spec:
          families:
          - advertisements:
              matchLabels:
                advertise: bgp
            afi: ipv4
            safi: unicast
          gracefulRestart:
            enabled: true
            restartTimeSeconds: 30
          timers:
            connectRetryTimeSeconds: 12
            holdTimeSeconds: 9
            keepAliveTimeSeconds: 3
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumLoadBalancerIPPool
        metadata:
          name: cilium-lb-pool-01
          namespace: kube-system
        spec:
          blocks:
          - cidr: 192.168.100.128/25
        ---
        apiVersion: gateway.networking.k8s.io/v1
        kind: GatewayClass
        metadata:
          name: cilium
          namespace: kube-system
        spec:
          controllerName: io.cilium/gateway-controller
          description: The default Cilium GatewayClass
        ---
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: hubble-system-http
          namespace: kube-system
        spec:
          hostnames:
          - hubble.apps.timgiertz.com
          parentRefs:
          - kind: Gateway
            name: shared-default-gateway
            namespace: default
            sectionName: shared-https
          rules:
          - backendRefs:
            - name: hubble-ui
              port: 80
            matches: null
