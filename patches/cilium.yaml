cluster:
  inlineManifests:
    - name: kube-system
      contents: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-envoy
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: v1
        automountServiceAccountToken: false
        kind: ServiceAccount
        metadata:
          name: hubble-relay
          namespace: kube-system
        ---
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
          - list
          - delete
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumbgpnodeconfigs
          - ciliumbgpadvertisements
          - ciliumbgppeerconfigs
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          - ciliumcidrgroups
          - ciliuml2announcementpolicies
          - ciliumpodippools
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints/status
          - ciliumendpoints
          - ciliuml2announcementpolicies/status
          - ciliumbgpnodeconfigs/status
          verbs:
          - patch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resourceNames:
          - cilium-config
          resources:
          - configmaps
          verbs:
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          - create
          - update
          - deletecollection
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumbgppeerconfigs
          - ciliumbgpadvertisements
          - ciliumbgpnodeconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumbgpclusterconfigs.cilium.io
          - ciliumbgppeerconfigs.cilium.io
          - ciliumbgpadvertisements.cilium.io
          - ciliumbgpnodeconfigs.cilium.io
          - ciliumbgpnodeconfigoverrides.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
          - ciliumcidrgroups.cilium.io
          - ciliuml2announcementpolicies.cilium.io
          - ciliumpodippools.cilium.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumpodippools
          - ciliumbgppeeringpolicies
          - ciliumbgpclusterconfigs
          - ciliumbgpnodeconfigoverrides
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumpodippools
          verbs:
          - create
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - '*'
          verbs:
          - get
          - list
          - watch
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-config-agent
          namespace: kube-system
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: cilium
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: cilium-operator
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: cilium-operator
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/part-of: cilium
          name: hubble-ui
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: hubble-ui
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          agent-not-ready-taint-key: node.cilium.io/agent-not-ready
          arping-refresh-period: 30s
          auto-direct-node-routes: "false"
          bpf-events-drop-enabled: "true"
          bpf-events-policy-verdict-enabled: "true"
          bpf-events-trace-enabled: "true"
          bpf-lb-acceleration: disabled
          bpf-lb-external-clusterip: "false"
          bpf-lb-map-max: "65536"
          bpf-lb-sock: "false"
          bpf-lb-sock-terminate-pod-connections: "false"
          bpf-map-dynamic-size-ratio: "0.0025"
          bpf-policy-map-max: "16384"
          bpf-root: /sys/fs/bpf
          cgroup-root: /sys/fs/cgroup
          cilium-endpoint-gc-interval: 5m0s
          cluster-id: "0"
          cluster-name: default
          clustermesh-enable-endpoint-sync: "false"
          clustermesh-enable-mcs-api: "false"
          cni-exclusive: "false"
          cni-log-file: /var/run/cilium/cilium-cni.log
          custom-cni-conf: "false"
          datapath-mode: veth
          debug: "false"
          debug-verbose: ""
          direct-routing-skip-unreachable: "false"
          dnsproxy-enable-transparent-mode: "true"
          dnsproxy-socket-linger-timeout: "10"
          egress-gateway-reconciliation-trigger-interval: 1s
          enable-auto-protect-node-port-range: "true"
          enable-bpf-clock-probe: "false"
          enable-endpoint-health-checking: "true"
          enable-health-check-loadbalancer-ip: "false"
          enable-health-check-nodeport: "true"
          enable-health-checking: "true"
          enable-hubble: "true"
          enable-ipv4: "true"
          enable-ipv4-big-tcp: "false"
          enable-ipv4-masquerade: "true"
          enable-ipv6: "false"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"
          enable-k8s-networkpolicy: "true"
          enable-k8s-terminating-endpoint: "true"
          enable-l2-announcements: "true"
          enable-l2-neigh-discovery: "true"
          enable-l7-proxy: "true"
          enable-local-redirect-policy: "false"
          enable-masquerade-to-route-source: "false"
          enable-metrics: "true"
          enable-node-ipam: "true"
          enable-node-selector-labels: "false"
          enable-policy: default
          enable-runtime-device-detection: "true"
          enable-sctp: "false"
          enable-svc-source-range-check: "true"
          enable-tcx: "true"
          enable-vtep: "false"
          enable-well-known-identities: "false"
          enable-xt-socket-fallback: "true"
          envoy-base-id: "0"
          envoy-keep-cap-netbindservice: "true"
          external-envoy-proxy: "true"
          hubble-disable-tls: "false"
          hubble-export-file-max-backups: "5"
          hubble-export-file-max-size-mb: "10"
          hubble-listen-address: :4244
          hubble-socket-path: /var/run/cilium/hubble.sock
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          identity-allocation-mode: crd
          identity-gc-interval: 15m0s
          identity-heartbeat-timeout: 30m0s
          install-no-conntrack-iptables-rules: "false"
          ipam: kubernetes
          ipam-cilium-node-update-rate: 15s
          k8s-client-burst: "50"
          k8s-client-qps: "30"
          k8s-require-ipv4-pod-cidr: "false"
          k8s-require-ipv6-pod-cidr: "false"
          kube-proxy-replacement: "true"
          kube-proxy-replacement-healthz-bind-address: ""
          max-connected-clusters: "255"
          mesh-auth-enabled: "true"
          mesh-auth-gc-interval: 5m0s
          mesh-auth-queue-size: "1024"
          mesh-auth-rotated-identities-queue-size: "1024"
          monitor-aggregation: medium
          monitor-aggregation-flags: all
          monitor-aggregation-interval: 5s
          nat-map-stats-entries: "32"
          nat-map-stats-interval: 30s
          node-port-bind-protection: "true"
          nodeport-addresses: ""
          nodes-gc-interval: 5m0s
          operator-api-serve-addr: 127.0.0.1:9234
          operator-prometheus-serve-addr: :9963
          policy-cidr-match-mode: ""
          preallocate-bpf-maps: "false"
          procfs: /host/proc
          proxy-connect-timeout: "2"
          proxy-idle-timeout-seconds: "60"
          proxy-initial-fetch-timeout: "30"
          proxy-max-connection-duration-seconds: "0"
          proxy-max-requests-per-connection: "0"
          proxy-xff-num-trusted-hops-egress: "0"
          proxy-xff-num-trusted-hops-ingress: "0"
          remove-cilium-node-taints: "true"
          routing-mode: tunnel
          service-no-backend-response: reject
          set-cilium-is-up-condition: "true"
          set-cilium-node-taints: "true"
          synchronize-k8s-nodes: "true"
          tofqdns-dns-reject-response-code: refused
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: 0s
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-proxy-response-max-delay: 100ms
          tunnel-protocol: vxlan
          unmanaged-pod-watcher-interval: "15"
          vtep-cidr: ""
          vtep-endpoint: ""
          vtep-mac: ""
          vtep-mask: ""
          write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          bootstrap-config.json: |
            {
              "node": {
                "id": "host~127.0.0.1~no-id~localdomain",
                "cluster": "ingress-cluster"
              },
              "staticResources": {
                "listeners": [
                  {
                    "name": "envoy-prometheus-metrics-listener",
                    "address": {
                      "socket_address": {
                        "address": "0.0.0.0",
                        "port_value": 9964
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-prometheus-metrics-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "prometheus_metrics_route",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "prometheus_metrics_route",
                                        "match": {
                                          "prefix": "/metrics"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/stats/prometheus"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "envoy-health-listener",
                    "address": {
                      "socket_address": {
                        "address": "127.0.0.1",
                        "port_value": 9878
                      }
                    },
                    "filter_chains": [
                      {
                        "filters": [
                          {
                            "name": "envoy.filters.network.http_connection_manager",
                            "typed_config": {
                              "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                              "stat_prefix": "envoy-health-listener",
                              "route_config": {
                                "virtual_hosts": [
                                  {
                                    "name": "health",
                                    "domains": [
                                      "*"
                                    ],
                                    "routes": [
                                      {
                                        "name": "health",
                                        "match": {
                                          "prefix": "/healthz"
                                        },
                                        "route": {
                                          "cluster": "/envoy-admin",
                                          "prefix_rewrite": "/ready"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              },
                              "http_filters": [
                                {
                                  "name": "envoy.filters.http.router",
                                  "typed_config": {
                                    "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                                  }
                                }
                              ],
                              "stream_idle_timeout": "0s"
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "clusters": [
                  {
                    "name": "ingress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "egress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "egress-cluster",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s"
                  },
                  {
                    "name": "ingress-cluster-tls",
                    "type": "ORIGINAL_DST",
                    "connectTimeout": "2s",
                    "lbPolicy": "CLUSTER_PROVIDED",
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "commonHttpProtocolOptions": {
                          "idleTimeout": "60s",
                          "maxConnectionDuration": "0s",
                          "maxRequestsPerConnection": 0
                        },
                        "upstreamHttpProtocolOptions": {},
                        "useDownstreamProtocolConfig": {}
                      }
                    },
                    "cleanupInterval": "2.500s",
                    "transportSocket": {
                      "name": "cilium.tls_wrapper",
                      "typedConfig": {
                        "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
                      }
                    }
                  },
                  {
                    "name": "xds-grpc-cilium",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "xds-grpc-cilium",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/xds.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "typedExtensionProtocolOptions": {
                      "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                        "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                        "explicitHttpConfig": {
                          "http2ProtocolOptions": {}
                        }
                      }
                    }
                  },
                  {
                    "name": "/envoy-admin",
                    "type": "STATIC",
                    "connectTimeout": "2s",
                    "loadAssignment": {
                      "clusterName": "/envoy-admin",
                      "endpoints": [
                        {
                          "lbEndpoints": [
                            {
                              "endpoint": {
                                "address": {
                                  "pipe": {
                                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              },
              "dynamicResources": {
                "ldsConfig": {
                  "initialFetchTimeout": "30s",
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                },
                "cdsConfig": {
                  "initialFetchTimeout": "30s",
                  "apiConfigSource": {
                    "apiType": "GRPC",
                    "transportApiVersion": "V3",
                    "grpcServices": [
                      {
                        "envoyGrpc": {
                          "clusterName": "xds-grpc-cilium"
                        }
                      }
                    ],
                    "setNodeOnFirstMessageOnly": true
                  },
                  "resourceApiVersion": "V3"
                }
              },
              "bootstrapExtensions": [
                {
                  "name": "envoy.bootstrap.internal_listener",
                  "typed_config": {
                    "@type": "type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
                  }
                }
              ],
              "overload_manager": {
                "resource_monitors": [
                  {
                    "name": "envoy.resource_monitors.global_downstream_max_connections",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig",
                      "max_active_downstream_connections": "50000"
                    }
                  }
                ]
              },
              "admin": {
                "address": {
                  "pipe": {
                    "path": "/var/run/cilium/envoy/sockets/admin.sock"
                  }
                }
              }
            }
        kind: ConfigMap
        metadata:
          name: cilium-envoy-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
            :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
            \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
            /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
            true\n"
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
            \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
            1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
            X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
            \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
            *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
            content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
            range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
            \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
            \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
            \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
            \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
            \           # double `/index.html` is required here \n            try_files $uri
            $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
            /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
            \           return 200 'ok';\n        }\n    }\n}"
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9Bek1aZjR5TDVSN0ZEdUZVb0xFcmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRJeU1USXhNalUwTTFvWERUSTNNVEl5TVRJeApNalUwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0R0IrLzE2YUxCT21VVWJULzVyZ25VWXV5cFhEWFhTL0FqSUtEcGt2dXhFMnkrdEUKRjQrU1hROUFTWXAwS3RmSU0yRlR2M251ZlhEMEZvdFJYbGhubVQrWS9oeVhHdkdCREVDOVRzeGdLVWlPcU9uTgo5K0hPTGlSZG1UZDZFRmZhWFhja3ZpOGxzeG1wdkFhVVNCOXhiRGJkVGc1S2hmVzNwdDkxYmcrc3RIcTlucFQ2CmJaOTJaZ3Btbnd6L1ZRZDlmdW1hbHRQNitPWkgxUUwveDZEblBNeXJCU1p6Y1krZEtvR0FIOWlUQmtnNnJHZVgKR01uak1oak1GVC9FencrTURFeXVHTSs0NThTdko0RFdSQXZTd1AxRWI0QnRiR3lkNXRGNUxIdDh4bGdYd3hhcwpGcFJUamNzODdrMWtwVlBsemE1cXE3OG5YY3dTNGxBNlU4ZDJwd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2xLdHVjc1pQL0s1KzV3MExLTUx4Y29nWXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ084WFdVQXhVVDdlNHFib1NEd0ZtMHBwWmMzUm93QWM1Ri8rUUg1V09LMzRydXJhQjJrcEovCmlPVytSQ044ZVY1MjVnakprQWVJRzFrUHBWVFY2UHVzTXd1dk0xVkNrTzRvVktoZ1RsTi9KNWZRZ2w2TmdaaTgKZCt5TENqcXNkZEtEM1FFS0J5WDY3dExoK2FYREhoaW5Qd3VkelpGNjFtWG9SVVRmUEt4d212eTUvYVEzS3dKbwowWERodWlWWGoxc1Z0REJtZWM4VklWQWNBVk5PRTJhaENzVjZQNitGMm5IUDFWcXlLaysxYW1ZUEc4VnhaLzlmClZBYnRtdjFzZi9oVElEM1RCV2o2S2x1VHZKbmtrMzFISW5INlZwbzF3aU9Dd3ZGT3R6RU5jL1dJbENyTUFGVk0KWWFnT044RERMMXlrR1JvZ1RTNmkzMlBpVTl2eVdFRkcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNEdCKy8xNmFMQk9tVVViVC81cmduVVl1eXBYRFhYUy9BaklLRHBrdnV4RTJ5K3RFCkY0K1NYUTlBU1lwMEt0ZklNMkZUdjNudWZYRDBGb3RSWGxobm1UK1kvaHlYR3ZHQkRFQzlUc3hnS1VpT3FPbk4KOStIT0xpUmRtVGQ2RUZmYVhYY2t2aThsc3htcHZBYVVTQjl4YkRiZFRnNUtoZlczcHQ5MWJnK3N0SHE5bnBUNgpiWjkyWmdwbW53ei9WUWQ5ZnVtYWx0UDYrT1pIMVFML3g2RG5QTXlyQlNaemNZK2RLb0dBSDlpVEJrZzZyR2VYCkdNbmpNaGpNRlQvRXp3K01ERXl1R00rNDU4U3ZKNERXUkF2U3dQMUViNEJ0Ykd5ZDV0RjVMSHQ4eGxnWHd4YXMKRnBSVGpjczg3azFrcFZQbHphNXFxNzhuWGN3UzRsQTZVOGQycHdJREFRQUJBb0lCQUNtM3AwVWh1TGFEUE1RVgowQ3JSQi93VjVYTkRIeHpNTFF0aWRGNDhleFJqNGZWT0c4M3Bvc1BzcHY1RllNM3FhczJxeGVCdThqbWVlN09KCldhcVo4MEVhQXY4VUg4QWhzT1d2VDhOTDJvRXlmVnZJaE1RVzFyZmJpUStJc2doQjNWYk5aU1o3SzU0K0lrSFUKVTFPSmpSUWFxMURzOVV3czRHV0ZYSmNIRVF4SkFMS1oycysyd0Y5YkF5ZWhwWExWRUxxOXNzakh5NnZWdktHcgpOc2tjRVhOOU10c1ViTWlzb3pYUG1ZR0VZbjBjbEhXdzV4bXhnOGwzR3M3VHVsdDFJcjYxd2pkakY5WGxGemNkCmNZeFFzVFVnaE9sNzlYN2F3NHF0dWNGaDFRSWdjZFNnVGJJRUJjOXgyT1E5WVkyTGRsMkhQL3F5YTNNQzlpTWMKcjQrREYrRUNnWUVBNXJGWkNLU3g3eXFNcmtNT1Zsc3p1NW5aUm5OSXE1cnllUTFXV3Axc0tiZWtNbTMyRFlsaApjaWZ0WGgrWGJueUk4aHNoQ2V3QlMxTk00ZVh0NnZKWU5Ob2hDejRmZDhnZVNlUUIwdVpVQWhPRU9BTkp2SmZEClN5NkpoQmZFeVB6eFhpSmRUQUxqb2VWZ2VnMUZ1bTVTZFB4b0Z6OTBua3RRNjh6YWVIWTY3VkVDZ1lFQStQM0gKS2xTUTFUSTN4TjRSZ1B3Z25uOTVZc1c1a0RXN1V4YkIxWXIxSWduaHp4OWpLT1M1MTFkUVRzVUgrZFlpMWM3bwozL0NKWGFIdk9kVkRFOWdsa3FmcTh4dDBQeXVGbVBhcit2MEhEVUJyS1JSYTJUR2FDbnJvS293eitTNkgrK1BlCkVuQzUxalJZMnFqdDArRE50NlAzSnRJekZma3l0WUZZNEUzUFJuY0NnWUFFQ0xIZjN0Rmx0ejdDaFZXbzJPdHMKcW1JTVExUFAvR09sRGtDbVVQNWxORnJncnQrUW1RaGxNS0dMOWMxMkZ5Tmw2R2VKZnVEKzZqUDc5ME5UeW0wVQpiNFFJYUV1d2tvVkZFWUdlcUh4cmxOL0pBdlcxSUlvL3RFNmZTck1jT0tBWDMwMzJXRTZXdENZZHZFR3Q0dVA2Ck83ZXVRR1BQcU0xL2NoT1g2NmxZSVFLQmdRQ0xxZ1pDcDBiS1g2M0tudW5nbVF4Tys2QUNHSGk2L0hqRDVacjYKaGtSMFFHaktQb2ZuazB6dkRvbjhkU2JCTEMxRUV4aXJMSWhRM2htTExpVy9CdG9raGs0UzZZNXVOS0p1cDhiVwpOWUgwRy9OQUNxdmU4cVMrUml6ZVdPQjZZSEJraVcreWxrcVhiYXQ5azQ0NzcvaFVqd04rWWgvSHJvMlVKQ2JQClFyWUdod0tCZ0FIOGZuWUd4Z1lkbzJoRHZSOWk2d2tQMWlsaTEvc1RvdXdYdDk3aVRtSFp5L3MyR1VrSzc2dlIKeUdtVHd1SVZsUjFKVVVaQ2YyRnVSTUZYVzV4YjFlZU9HRE1rSzJyK2N2RjZwQlJJVkt1eTVJd1F6bWVEeEk1Wgo0UGkyNVZsV0FZdHVzdzBUQi9EQlpLUzVLak1pSzJRYWgzTUhaRHEzNk56YkZlMklyKy80Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9Bek1aZjR5TDVSN0ZEdUZVb0xFcmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRJeU1USXhNalUwTTFvWERUSTNNVEl5TVRJeApNalUwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0R0IrLzE2YUxCT21VVWJULzVyZ25VWXV5cFhEWFhTL0FqSUtEcGt2dXhFMnkrdEUKRjQrU1hROUFTWXAwS3RmSU0yRlR2M251ZlhEMEZvdFJYbGhubVQrWS9oeVhHdkdCREVDOVRzeGdLVWlPcU9uTgo5K0hPTGlSZG1UZDZFRmZhWFhja3ZpOGxzeG1wdkFhVVNCOXhiRGJkVGc1S2hmVzNwdDkxYmcrc3RIcTlucFQ2CmJaOTJaZ3Btbnd6L1ZRZDlmdW1hbHRQNitPWkgxUUwveDZEblBNeXJCU1p6Y1krZEtvR0FIOWlUQmtnNnJHZVgKR01uak1oak1GVC9FencrTURFeXVHTSs0NThTdko0RFdSQXZTd1AxRWI0QnRiR3lkNXRGNUxIdDh4bGdYd3hhcwpGcFJUamNzODdrMWtwVlBsemE1cXE3OG5YY3dTNGxBNlU4ZDJwd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2xLdHVjc1pQL0s1KzV3MExLTUx4Y29nWXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ084WFdVQXhVVDdlNHFib1NEd0ZtMHBwWmMzUm93QWM1Ri8rUUg1V09LMzRydXJhQjJrcEovCmlPVytSQ044ZVY1MjVnakprQWVJRzFrUHBWVFY2UHVzTXd1dk0xVkNrTzRvVktoZ1RsTi9KNWZRZ2w2TmdaaTgKZCt5TENqcXNkZEtEM1FFS0J5WDY3dExoK2FYREhoaW5Qd3VkelpGNjFtWG9SVVRmUEt4d212eTUvYVEzS3dKbwowWERodWlWWGoxc1Z0REJtZWM4VklWQWNBVk5PRTJhaENzVjZQNitGMm5IUDFWcXlLaysxYW1ZUEc4VnhaLzlmClZBYnRtdjFzZi9oVElEM1RCV2o2S2x1VHZKbmtrMzFISW5INlZwbzF3aU9Dd3ZGT3R6RU5jL1dJbENyTUFGVk0KWWFnT044RERMMXlrR1JvZ1RTNmkzMlBpVTl2eVdFRkcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1sRWVpUjdKa0FUeE9TbTYveVR3R0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRJeU1USXhNalUwTmxvWERUSTFNVEl5TVRJeApNalUwTmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9CcnpncVM4Mi9SOHBOUHFvYXEvOWtaMFZ2NFkKSVlpR3hkRkxibkZoRXRtdkRCdlplS25sVDhWT3g2dzdjNEo4U0JxU2dYeU1pWTBTSkN3MGpyd2l4Q0Y0RGliZApjRlQ1R3gyY0srS2Q3b3NWUG9GWkxzaTRuWm4xUzhYVWJsNFBBU1I2SGFpTzROdm9sRzRsUzEvbk9pNlVKaU1JClBDbU0xOTdUdnYxKzAxQk95blJIVyswbjlONVdhYzhjWFU3eUErTlZCYnF6a3MvZnhKQUZiY2lLY1dzYzNGbWUKN3E0VU50Q3VEUndMVnhKT3grcXZMQlZ1a2wwVXNLeVRBeDE5YTlxaUd3R0N2MFQ3dGwvNldpdDY3a1UwUTY5egorTm5YTFNYZGRnRW1nL205eEZ1cVBSMVNpaHdHbXpMN05KdHdmRG1DRTFvbnYyalV0dHZQRFErNWZ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3BTcmJuTEdUL3l1ZnVjTkN5akM4WApLSUdMbGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTUdSelZMR3UyNEtEdUV1Q1dNOUpuRnYzNUtXL05DcEh6TWlQK1p0OUhiWnNrM2sKdVhGQ0N5Tkk3T2N3M3dSa292U0V2a3lJRitYK29neDN4RUdwV253eU1JMnJPMXk3RklsbStPMW42dXl0OHhCUgozaVM5MzNqRVA1VjNscnlOK3dja3gwbTJEdzVnYTFlN2txWndKVXptOW5VTkZpV0pKZ21aMm5ZT3lRcldPK1pQCnc4R0pwK0JIcUNGRUlxN05sUGVGVmxlSC85RUN4UGNBOU5IR2ozbjdJYkdjR1BiZGhqbnhGWm9Ld2NHQUFDOVkKVFR4dHRlcmx3N0w1aExOVnpHTHpRLzlwekcrTkpyM2N3aFgrRkNtaXhHYkg4dmlRaE0vWTNSYTlaUVVYN1U2bQpFTWdwMkJUSnd1UGhrMnFNZXJtWUtYTi9vYm9naXNaWlFTcXlXT289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb0JyemdxUzgyL1I4cE5QcW9hcS85a1owVnY0WUlZaUd4ZEZMYm5GaEV0bXZEQnZaCmVLbmxUOFZPeDZ3N2M0SjhTQnFTZ1h5TWlZMFNKQ3cwanJ3aXhDRjREaWJkY0ZUNUd4MmNLK0tkN29zVlBvRloKTHNpNG5abjFTOFhVYmw0UEFTUjZIYWlPNE52b2xHNGxTMS9uT2k2VUppTUlQQ21NMTk3VHZ2MSswMUJPeW5SSApXKzBuOU41V2FjOGNYVTd5QStOVkJicXprcy9meEpBRmJjaUtjV3NjM0ZtZTdxNFVOdEN1RFJ3TFZ4Sk94K3F2CkxCVnVrbDBVc0t5VEF4MTlhOXFpR3dHQ3YwVDd0bC82V2l0NjdrVTBRNjl6K05uWExTWGRkZ0VtZy9tOXhGdXEKUFIxU2lod0dtekw3Tkp0d2ZEbUNFMW9udjJqVXR0dlBEUSs1ZndJREFRQUJBb0lCQUEvam5OY1NVa3ZoNzV6TQpDelVRSlF6ajRSZmhEN1FFUUp2Uk1aTThYVTNwbkoydkJkNGJ2azQwWHFVaVNxUWtCd0dBNFpsSUt3cGJuYmxKClNjNEFqZEs1SDVrSDhtSDdqTjFNQ3Z1ditjeDZzUmtLN1RiZlpMTC9YSUN3bVd4Nm1US2IxQ0t0WDhDaEVtdm8Kb25yZ2dhb2NoVWRqb3FXVjJneHlhTUZEbHhxUmJZbmpHaE1KZlZ4TWdFL200dmw1VXRyT2kybDlEZy9TOTZYTwpDRzhhS0N0a0JRZi8vd3A1cDFsTUFLcUdkTlNSMitLVmZYbWdwcDlqNSt5djlCOVg0WlJDTHVhbTEzamZ2N2ZHCmtSSnNMelRTL1JwMFVxeDc0elpsOHhFcy9OWjZxcnh1VVFFMWFXQnlKWlZhcnRTckRvZVk3eUN4VHg4a25JYWQKd2h4UjBVRUNnWUVBMGtFT05RQWxORXBKcUU5N3pZLzlvakJVazZJRTYwNWlmNDVZMzRYYWdnbUdadUNYODFBZwp4WEVLT0tDTE50cWxBUmxQUlllRmZxSEdJT0xXVE5qYU9XNFRlaHNQbXNFTElPQnV6Q0hqUDJRWGRJcXRvMG9yClgvQmRwQ3pucFBqdjNQVjA0YjVmWE80N0lrK1k0bVNmYXV1NmFRQlM2cy81a0UwZ1RKYWJQRE1DZ1lFQXd2Q24KdWZNWmZhd1UrSTZNZ05xd1BIUzVCUmFMbXd3RnpORHFFaTVjbGVLSWJ2bjc5aVk5UVc1cnNmQ0pURlpnc0xJRQpSRFRhUFdaQnBWL3lsT25lZDNnZWtjU0ZXR3JrTHUyZ09PTU9pM3I2V050RjhXWUFDRTcvNW9GMktPeXIvc0h6CktpQ25nRDNubFBialRNc3YyZ0dQaGFVZDZydWxtUDFTbi9yZHdZVUNnWUFHQlpEM21hSjNKZTJJSVlhbE00dUwKR3FGQmZURnczOVRZWEdaVk9Jc3lrRDFHTXdhSEZITnIxRG43dHpWbGc4dVlCWGFNd2ozamk1U1dHb2tTdUY4LwpwOVJzK2R0dmpqbllYalV1S1laTnFYczJma1pNMS9INEZIVktIM01lK1hZOU9OWjVKSytzaExJeTRGNjdsVEF2CnFzS3pBU3hleDBnWmh1djI1WlZhbXdLQmdRQ29jamNjc1BtWDVIaUNodnJWNVNKZ095UWRSMnYrNEJhcTh1TXcKTHF1R1FLZFA3ZWRRdlo0MHlldDVhTFhiSnRDS0hta2RYdVl1SkF3WmtKMFhIRGRGMkovaHFZVG44QVdZbjNEUgpkekg4U0puRzZrSzM0MEduN0V1bnJMcWpoazdnNWtydVhpVWU1VjhWRTNrNXhHRm02ZTVRdDJyd2lKRUJiL1JUCmxQekYyUUtCZ0Rsa2QyUVN0SVZ6V0hxZjcwRGdxVWFwWWJGYnFPZjFxbHVVeFhuU1lDbTJUcVhEcHJPZjlYb1QKWUFuZnVrM3VUcjJZZnpZYTFWOTVpZlV6K2FaZmJ6MjRWb0RuOHZuZ1Rjc0t1UjZwVFRTY1NXa1NQZWJVRTdnWgpKL3pwVW5ZQ01kS0loQzhKWWN4ZjhPa3YzaWVSdFVqakM3T0pnR0lYbUdaRWpvUTQ4TWJjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9Bek1aZjR5TDVSN0ZEdUZVb0xFcmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRJeU1USXhNalUwTTFvWERUSTNNVEl5TVRJeApNalUwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE0R0IrLzE2YUxCT21VVWJULzVyZ25VWXV5cFhEWFhTL0FqSUtEcGt2dXhFMnkrdEUKRjQrU1hROUFTWXAwS3RmSU0yRlR2M251ZlhEMEZvdFJYbGhubVQrWS9oeVhHdkdCREVDOVRzeGdLVWlPcU9uTgo5K0hPTGlSZG1UZDZFRmZhWFhja3ZpOGxzeG1wdkFhVVNCOXhiRGJkVGc1S2hmVzNwdDkxYmcrc3RIcTlucFQ2CmJaOTJaZ3Btbnd6L1ZRZDlmdW1hbHRQNitPWkgxUUwveDZEblBNeXJCU1p6Y1krZEtvR0FIOWlUQmtnNnJHZVgKR01uak1oak1GVC9FencrTURFeXVHTSs0NThTdko0RFdSQXZTd1AxRWI0QnRiR3lkNXRGNUxIdDh4bGdYd3hhcwpGcFJUamNzODdrMWtwVlBsemE1cXE3OG5YY3dTNGxBNlU4ZDJwd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS2xLdHVjc1pQL0s1KzV3MExLTUx4Y29nWXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ084WFdVQXhVVDdlNHFib1NEd0ZtMHBwWmMzUm93QWM1Ri8rUUg1V09LMzRydXJhQjJrcEovCmlPVytSQ044ZVY1MjVnakprQWVJRzFrUHBWVFY2UHVzTXd1dk0xVkNrTzRvVktoZ1RsTi9KNWZRZ2w2TmdaaTgKZCt5TENqcXNkZEtEM1FFS0J5WDY3dExoK2FYREhoaW5Qd3VkelpGNjFtWG9SVVRmUEt4d212eTUvYVEzS3dKbwowWERodWlWWGoxc1Z0REJtZWM4VklWQWNBVk5PRTJhaENzVjZQNitGMm5IUDFWcXlLaysxYW1ZUEc4VnhaLzlmClZBYnRtdjFzZi9oVElEM1RCV2o2S2x1VHZKbmtrMzFISW5INlZwbzF3aU9Dd3ZGT3R6RU5jL1dJbENyTUFGVk0KWWFnT044RERMMXlrR1JvZ1RTNmkzMlBpVTl2eVdFRkcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU81SXJUTDY1dGtFQTJBVmFXcHRaS0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRJeU1USXhNalUwTTFvWERUSTFNVEl5TVRJeApNalUwTTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxQV1ZTbHhGcGRqWjArU1ZFOWoKWVZIYlZ2QzMwODQ3d0FIai9TTWdaYWcrbyswYU1RUXRRakNzQUg3ZlkxYmdVdkRWTEpLVjVkYWRod0dVWWNjcQpUVHhUT01BaE5QU0FBNUl5Z3N4QWdMcksrN1NwL040Z3YxSHRjL2pSazM1UWFaZUVYZkJ6amI0bzgxdzZsS1kwCmJwMFdudkQzczRDQ0RJWURDNlVMWHJmZElZV3NtV3VLdjhGWU9JZ0Z0Q1NUVmQ4TnRWVytzbWUzS2FmZ21QUUUKYXViekpqKzJjK3dSUlBhOGJKdzQwaDNDSWRYcE1xWnFSR0VHRzFDNkpWM3JrUkRxSk1LZENCRzR5cys1ZGhpego4bmswZjhGVW5tSm1OUHk2MUEyeGZYUjNCcnRPMHRLVklYUEtTRGE1by9YNUI1ZGQ4bmJrU3c4ZER3TGs0QVpSCjVpa0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXFVcTI1eXhrLzhybgo3bkRRc293dkZ5aUJpNVl3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXR5dHhaUG13MWdWd2swZnpQNlJjYWc1d2VhcmIKR0lremE2UmxTVmNML1lHVm1BL1dlejN3Q0dCMzZFVS9Vb3ZncVNaM1o0L2RoTG45M0RMNUJoRVBmNnNqVUxUeQoyd0ZYeHlGdVdBTUFxZlh0aFNGRnVlM1UxZUlmUi9pRU02MXlqd25IRCtoSjB0WDkzOWZidlZkTzBOOUVmSTQ2CklCeGhycjBjYWlKSW5LQlV1TnA3YUpOb05udnZQU3pGaTg0b2NiQUQxWUtPNldXWHA4VTlwTVhtTXc2RjNyOWMKNUdsbkRIN0VxeDBaYXk3ZDQvZ2NiQ2RZQ2s5N1VqS0ZpQm9DaGJyOW1HWitIaUZMNE9GSk51SkNuNVJxdFNRdQpkSDZ2QVZVc2F0elRnWTNFaUVSeHJvR2ZCVjVMb3JmcU9SWW9SRXZZVzVMN1NmMkhNblF2SWdjekVRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBczlaVktYRVdsMk5uVDVKVVQyTmhVZHRXOExmVHpqdkFBZVA5SXlCbHFENmo3Um94CkJDMUNNS3dBZnQ5alZ1QlM4TlVza3BYbDFwMkhBWlJoeHlwTlBGTTR3Q0UwOUlBRGtqS0N6RUNBdXNyN3RLbjgKM2lDL1VlMXorTkdUZmxCcGw0UmQ4SE9OdmlqelhEcVVwalJ1blJhZThQZXpnSUlNaGdNTHBRdGV0OTBoaGF5WgphNHEvd1ZnNGlBVzBKSk5WM3cyMVZiNnlaN2NwcCtDWTlBUnE1dk1tUDdaejdCRkU5cnhzbkRqU0hjSWgxZWt5CnBtcEVZUVliVUxvbFhldVJFT29rd3AwSUViakt6N2wyR0xQeWVUUi93VlNlWW1ZMC9MclVEYkY5ZEhjR3UwN1MKMHBVaGM4cElOcm1qOWZrSGwxM3lkdVJMRHgwUEF1VGdCbEhtS1FJREFRQUJBb0lCQUdRSUpwckVvdEpXb3BLcQpUR2RVV2ovVUI4b2lGcGl5dDV6Vm1tcTlqSTVIT1p1YlpBUjB3RXFlZ2pBUVJndCsvK09pVUFiQmhuVVlibzQ4CllSOE5zcVNKamhtZzN2blpjeU1SSVp4SGpOTmFNU1JQSWE3VS9GYXdCRUExSXh1eDB1cEs0STN0V0x5YnZySmcKaTJyZjQxOVJ3OXM1alFsQVRZTUZrcWFkYW5ST2g2M01WVlMvQkZPSGpCWi95Z1ppSnJVeEJxM0NOTEovZ3c5dwpDYlBsWGhrZEI3M05NT0M5eVlQSUJpeWRYaGduRkZFcFdrNk96ZHkzcEZiMURkMHBHR3VNSXI5NVNPVTdvZVZoCksxR05PUHE3d24ybnIvbS93bUtoMUhxcEMrV3B1Tk9wMmFYbHpPRUxlREJxMWpNS2tEZWQ0OUFpeFRJQkdvZkEKRWpXblJCa0NnWUVBMUQ5RC9KQm03TFI2enZnMCt6QWhmcGlPQUJKN3czNnV0ZWcyM3ptVXZORi8rc2dFeWlndApVNEhpbThFY1pWRU44ajAvM05KVnRITU94S1BrWGYxbU1BNXBEY1Q5WEtLci9uZG56cWJ4aGNuM3NHaXcxV0Z2CjdVNHVIclUwMTBGM2pONUNJcFVzWElkaU5qalRaZWxQNzhFeTM5Yml6VnhoRzU1dU5lZ0IzOU1DZ1lFQTJPaTYKVGh5UzErZnc4NmNoakYvZjJUZmRvT2ZuNnZWcldNYUNZSTV3Z2p0TElxQ1p6MDduYytIYnE0d3g0WVNMd3NYeAo5MWtDWmlKNytSbzhrYkgyT0Y5dnovQjJsY3o2MnMzcFBPaEJFTUo1WUxzdHp4YlluYVl0WUdJblBLLzg2cGYvCnhaTisyMUhJRm9QZVRYVXhYU1hjQUxzOE5FZHRjdTRTdStNc0lKTUNnWUJxeFFpbVhOM3A1VUNDTFVvNXNoU24KWW9iTWNuL2Y4REpqUDlXYXBaUzFCNDZoMFV6WGhTNkgrNmJMUTNITlplRG1Jdm1sVkFuWkpLZ2hNM0VGOXhzWQp3YWNIVGpsR0NHOE5LM1FFK09ZMnIwcnlhemZKbjZKMmRnV3RYT3FmL2tidGprRW10SFFFZC9abjRGNDN2ZzZBClJXZ2FRamNGcDVzU0VialBWVTdjRVFLQmdIMkVqdXJNbGh6aVZ3aG4ybjRFck9CaDk1bzVHSGRhZFRmMkIxUWcKbVBLRHBVTHdkSkVHTStGVy9Xc1R3WG1pM2Mxa0JsVC82T2Q1WlF3TkpxZVl0OFovVTVDY3NjS1Z6MFAyaTlWMwpBTS9WK2E4RUljb0lpbWtQMUlwRndqYllFQjhndmgxeThLR3hmWHVwNjJZZlB1V01GdmRGWWQxT3lBTU55VUY0CmYveUpBb0dBUURURWpzdWYvc1JIRksvd21MZjJ5U1ZTSUd6bnVpcC9ub0RhSjNYNnlIZy9NZmlaTDZCa3MyUXQKSWpSQzFTWWJhSWpqZXNVbDZqeUZFVTVueFpsUFJoeitsTmRSNE13b1AxOWo2Z3lsSGg1NFF1bEpsdmgzNzBRaQoyZzhmT3Y4WS83S2h5eWFKUEhZdWVUaWdncVZFc3ZXL2dlUGRsYkpBS3NZdXk3ejk5eTg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        ---
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            prometheus.io/port: "9964"
            prometheus.io/scrape: "true"
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            io.cilium/app: proxy
            k8s-app: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          clusterIP: None
          ports:
          - name: envoy-metrics
            port: 9964
            protocol: TCP
            targetPort: envoy-metrics
          selector:
            k8s-app: cilium-envoy
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-peer
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: hubble-peer
          namespace: kube-system
        spec:
          internalTrafficPolicy: Local
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          selector:
            k8s-app: cilium
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          ports:
          - port: 80
            protocol: TCP
            targetPort: grpc
          selector:
            k8s-app: hubble-relay
          type: ClusterIP
        ---
        apiVersion: v1
        kind: Service
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          ports:
          - name: http
            port: 80
            targetPort: 8081
          selector:
            k8s-app: hubble-ui
          type: ClusterIP
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: cilium-operator
            app.kubernetes.io/part-of: cilium
            io.cilium/app: operator
            name: cilium-operator
          name: cilium-operator
          namespace: kube-system
        spec:
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          strategy:
            rollingUpdate:
              maxSurge: 25%
              maxUnavailable: 50%
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/port: "9963"
                prometheus.io/scrape: "true"
              labels:
                app.kubernetes.io/name: cilium-operator
                app.kubernetes.io/part-of: cilium
                io.cilium/app: operator
                name: cilium-operator
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                command:
                - cilium-operator-generic
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/operator-generic:v1.16.4@sha256:c55a7cbe19fe0b6b28903a085334edb586a3201add9db56d2122c8485f7a51c5
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                name: cilium-operator
                ports:
                - containerPort: 9963
                  hostPort: 9963
                  name: prometheus
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp/cilium/config-map
                  name: cilium-config-path
                  readOnly: true
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-cluster-critical
              restartPolicy: Always
              serviceAccountName: cilium-operator
              tolerations:
              - operator: Exists
              volumes:
              - configMap:
                  name: cilium-config
                name: cilium-config-path
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-relay
          name: hubble-relay
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-relay
            spec:
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: false
              containers:
              - args:
                - serve
                command:
                - hubble-relay
                image: quay.io/cilium/hubble-relay:v1.16.4@sha256:fb2c7d127a1c809f6ba23c05973f3dd00f6b6a48e4aee2da95db925a4f0351d2
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 12
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 10
                name: hubble-relay
                ports:
                - containerPort: 4245
                  name: grpc
                readinessProbe:
                  grpc:
                    port: 4222
                  timeoutSeconds: 3
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  runAsGroup: 65532
                  runAsNonRoot: true
                  runAsUser: 65532
                startupProbe:
                  failureThreshold: 20
                  grpc:
                    port: 4222
                  initialDelaySeconds: 10
                  periodSeconds: 3
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/hubble-relay
                  name: config
                  readOnly: true
                - mountPath: /var/lib/hubble-relay/tls
                  name: tls
                  readOnly: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              restartPolicy: Always
              securityContext:
                fsGroup: 65532
              serviceAccountName: hubble-relay
              terminationGracePeriodSeconds: 1
              volumes:
              - configMap:
                  items:
                  - key: config.yaml
                    path: config.yaml
                  name: hubble-relay-config
                name: config
              - name: tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: client.crt
                      - key: tls.key
                        path: client.key
                      - key: ca.crt
                        path: hubble-server-ca.crt
                      name: hubble-relay-client-certs
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
            k8s-app: hubble-ui
          name: hubble-ui
          namespace: kube-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
                k8s-app: hubble-ui
            spec:
              automountServiceAccountToken: true
              containers:
              - image: quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                name: frontend
                ports:
                - containerPort: 8081
                  name: http
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8081
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /etc/nginx/conf.d/default.conf
                  name: hubble-ui-nginx-conf
                  subPath: nginx.conf
                - mountPath: /tmp
                  name: tmp-dir
              - env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: hubble-relay:80
                image: quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b
                imagePullPolicy: IfNotPresent
                name: backend
                ports:
                - containerPort: 8090
                  name: grpc
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts: null
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: null
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              serviceAccountName: hubble-ui
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-agent
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium
          name: cilium
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium
            spec:
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --config-dir=/tmp/cilium/config-map
                command:
                - cilium-agent
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: GOMEMLIMIT
                  valueFrom:
                    resourceFieldRef:
                      divisor: "1"
                      resource: limits.memory
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - bash
                      - -c
                      - |
                        set -o errexit
                        set -o pipefail
                        set -o nounset

                        # When running in AWS ENI mode, it's likely that 'aws-node' has
                        # had a chance to install SNAT iptables rules. These can result
                        # in dropped traffic, so we should attempt to remove them.
                        # We do it using a 'postStart' hook since this may need to run
                        # for nodes which might have already been init'ed but may still
                        # have dangling rules. This is safe because there are no
                        # dependencies on anything that is part of the startup script
                        # itself, and can be safely run multiple times per node (e.g. in
                        # case of a restart).
                        if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                        then
                            echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                            iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                        fi
                        echo 'Done!'
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-agent
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - CHOWN
                    - KILL
                    - NET_ADMIN
                    - NET_RAW
                    - IPC_LOCK
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    - DAC_OVERRIDE
                    - FOWNER
                    - SETGID
                    - SETUID
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    httpHeaders:
                    - name: brief
                      value: "true"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
                - mountPath: /host/etc/cni/net.d
                  name: etc-cni-netd
                - mountPath: /var/lib/cilium/clustermesh
                  name: clustermesh-secrets
                  readOnly: true
                - mountPath: /lib/modules
                  name: lib-modules
                  readOnly: true
                - mountPath: /run/xtables.lock
                  name: xtables-lock
                - mountPath: /var/lib/cilium/tls/hubble
                  name: hubble-tls
                  readOnly: true
                - mountPath: /tmp
                  name: tmp
              hostNetwork: true
              initContainers:
              - command:
                - cilium-dbg
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                name: config
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /tmp
                  name: tmp
              - command:
                - sh
                - -ec
                - |
                  cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
                  nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
                  rm /hostbin/cilium-sysctlfix
                env:
                - name: BIN_PATH
                  value: /opt/cni/bin
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                name: apply-sysctl-overwrites
                securityContext:
                  capabilities:
                    add:
                    - SYS_ADMIN
                    - SYS_CHROOT
                    - SYS_PTRACE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /hostproc
                  name: hostproc
                - mountPath: /hostbin
                  name: cni-path
              - args:
                - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
                command:
                - /bin/bash
                - -c
                - --
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                name: mount-bpf-fs
                securityContext:
                  privileged: true
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
                  name: bpf-maps
              - command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-state
                      name: cilium-config
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      key: clean-cilium-bpf-state
                      name: cilium-config
                      optional: true
                - name: WRITE_CNI_CONF_WHEN_READY
                  valueFrom:
                    configMapKeyRef:
                      key: write-cni-conf-when-ready
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                name: clean-cilium-state
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    - SYS_RESOURCE
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /sys/fs/bpf
                  name: bpf-maps
                - mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                  name: cilium-cgroup
                - mountPath: /var/run/cilium
                  name: cilium-run
              - command:
                - /install-plugin.sh
                image: quay.io/cilium/cilium:v1.16.4@sha256:d55ec38938854133e06739b1af237932b9c4dd4e75e9b7b2ca3acc72540a44bf
                imagePullPolicy: IfNotPresent
                name: install-cni-binaries
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  capabilities:
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /host/opt/cni/bin
                  name: cni-path
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - emptyDir: {}
                name: tmp
              - hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                name: cilium-run
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
              - hostPath:
                  path: /proc
                  type: Directory
                name: hostproc
              - hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
                name: cilium-cgroup
              - hostPath:
                  path: /opt/cni/bin
                  type: DirectoryOrCreate
                name: cni-path
              - hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                name: etc-cni-netd
              - hostPath:
                  path: /lib/modules
                name: lib-modules
              - hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                name: xtables-lock
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - name: clustermesh-secrets
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      name: cilium-clustermesh
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: common-etcd-client.key
                      - key: tls.crt
                        path: common-etcd-client.crt
                      - key: ca.crt
                        path: common-etcd-client-ca.crt
                      name: clustermesh-apiserver-remote-cert
                      optional: true
                  - secret:
                      items:
                      - key: tls.key
                        path: local-etcd-client.key
                      - key: tls.crt
                        path: local-etcd-client.crt
                      - key: ca.crt
                        path: local-etcd-client-ca.crt
                      name: clustermesh-apiserver-local-cert
                      optional: true
              - hostPath:
                  path: /proc/sys/net
                  type: Directory
                name: host-proc-sys-net
              - hostPath:
                  path: /proc/sys/kernel
                  type: Directory
                name: host-proc-sys-kernel
              - name: hubble-tls
                projected:
                  defaultMode: 256
                  sources:
                  - secret:
                      items:
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
                      - key: ca.crt
                        path: client-ca.crt
                      name: hubble-server-certs
                      optional: true
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          labels:
            app.kubernetes.io/name: cilium-envoy
            app.kubernetes.io/part-of: cilium
            k8s-app: cilium-envoy
            name: cilium-envoy
          name: cilium-envoy
          namespace: kube-system
        spec:
          selector:
            matchLabels:
              k8s-app: cilium-envoy
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/name: cilium-envoy
                app.kubernetes.io/part-of: cilium
                k8s-app: cilium-envoy
                name: cilium-envoy
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: cilium.io/no-schedule
                        operator: NotIn
                        values:
                        - "true"
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium-envoy
                    topologyKey: kubernetes.io/hostname
              automountServiceAccountToken: true
              containers:
              - args:
                - --keep-cap-net-bind-service
                - --
                - -c /var/run/cilium/envoy/bootstrap-config.json
                - --base-id 0
                - --log-level info
                - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
                command:
                - /usr/bin/cilium-envoy-starter
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: localhost
                - name: KUBERNETES_SERVICE_PORT
                  value: "7445"
                image: quay.io/cilium/cilium-envoy:v1.30.7-1731393961-97edc2815e2c6a174d3d12e71731d54f5d32ea16@sha256:0287b36f70cfbdf54f894160082f4f94d1ee1fb10389f3a95baa6c8e448586ed
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  failureThreshold: 10
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                name: cilium-envoy
                ports:
                - containerPort: 9964
                  hostPort: 9964
                  name: envoy-metrics
                  protocol: TCP
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 5
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - SYS_ADMIN
                    drop:
                    - ALL
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                startupProbe:
                  failureThreshold: 105
                  httpGet:
                    host: 127.0.0.1
                    path: /healthz
                    port: 9878
                    scheme: HTTP
                  initialDelaySeconds: 5
                  periodSeconds: 2
                  successThreshold: 1
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                - mountPath: /var/run/cilium/envoy/sockets
                  name: envoy-sockets
                  readOnly: false
                - mountPath: /var/run/cilium/envoy/artifacts
                  name: envoy-artifacts
                  readOnly: true
                - mountPath: /var/run/cilium/envoy/
                  name: envoy-config
                  readOnly: true
                - mountPath: /sys/fs/bpf
                  mountPropagation: HostToContainer
                  name: bpf-maps
              hostNetwork: true
              nodeSelector:
                kubernetes.io/os: linux
              priorityClassName: system-node-critical
              restartPolicy: Always
              securityContext:
                appArmorProfile:
                  type: Unconfined
              serviceAccountName: cilium-envoy
              terminationGracePeriodSeconds: 1
              tolerations:
              - operator: Exists
              volumes:
              - hostPath:
                  path: /var/run/cilium/envoy/sockets
                  type: DirectoryOrCreate
                name: envoy-sockets
              - hostPath:
                  path: /var/run/cilium/envoy/artifacts
                  type: DirectoryOrCreate
                name: envoy-artifacts
              - configMap:
                  defaultMode: 256
                  items:
                  - key: bootstrap-config.json
                    path: bootstrap-config.json
                  name: cilium-envoy-config
                name: envoy-config
              - hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
                name: bpf-maps
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumL2AnnouncementPolicy
        metadata:
          name: cilium-l2-announcement-policy
          namespace: kube-system
        spec:
          externalIPs: true
          loadBalancerIPs: true
        ---
        apiVersion: cilium.io/v2alpha1
        kind: CiliumLoadBalancerIPPool
        metadata:
          name: cilium-lb-pool-01
          namespace: kube-system
        spec:
          blocks:
          - cidr: 192.168.100.128/25
        ---
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: hubble-system-http
          namespace: kube-system
        spec:
          hostnames:
          - hubble.apps.timgiertz.com
          parentRefs:
          - group: gateway.networking.k8s.io
            kind: Gateway
            name: shared-default-gateway
            namespace: default
            sectionName: shared-https
          rules:
          - backendRefs:
            - group: ""
              kind: Service
              name: hubble-ui
              port: 80
              weight: 1
            matches:
            - path:
                type: PathPrefix
                value: /
